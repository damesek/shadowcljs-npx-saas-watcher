shadow$provide.module$node_modules$vega_geo$build$vega_geo=function(global$jscomp$0,process,require,module,exports$jscomp$0,shadow$shims){(function(global,factory){"object"===typeof exports$jscomp$0&&"undefined"!==typeof module?factory(exports$jscomp$0,require("module$node_modules$vega_dataflow$build$vega_dataflow"),require("module$node_modules$vega_util$build$vega_util"),require("module$node_modules$d3_array$dist$d3_array"),require("module$node_modules$d3_contour$dist$d3_contour"),require("module$node_modules$vega_projection$build$vega_projection"),
require("module$node_modules$d3_geo$dist$d3_geo")):"function"===typeof define&&define.amd?define("exports vega-dataflow vega-util d3-array d3-contour vega-projection d3-geo".split(" "),factory):(global=global||self,factory((global.vega=global.vega||{},global.vega.transforms={}),global.vega,global.vega,global.d3,global.d3,global.vega,global.d3))})(this,function(exports,vegaDataflow,vegaUtil,d3Array,d3Contour,vegaProjection,d3Geo){function Contour(params){vegaDataflow.Transform.call(this,null,params)}
function quantize(k){return function(values){var ex=d3Array.extent(values);values=ex[0];ex=ex[1]-values;for(var t=[],i=1;i<=k;++i)t.push(values+ex*i/(k+1));return t}}function GeoJSON(params){vegaDataflow.Transform.call(this,null,params)}function GeoPath(params){vegaDataflow.Transform.call(this,null,params)}function initPath(path,pointRadius){var prev=path.pointRadius();path.context(null);null!=pointRadius&&path.pointRadius(pointRadius);return prev}function GeoPoint(params){vegaDataflow.Transform.call(this,
null,params)}function GeoShape(params){vegaDataflow.Transform.call(this,null,params)}function shapeGenerator(path,field,pointRadius){var shape=null==pointRadius?function(_){return path(field(_))}:function(_){var prev=path.pointRadius();_=path.pointRadius(pointRadius)(field(_));path.pointRadius(prev);return _};shape.context=function(_){path.context(_);return shape};return shape}function Graticule(params){vegaDataflow.Transform.call(this,[],params);this.generator=d3Geo.geoGraticule()}function Projection(params){vegaDataflow.Transform.call(this,
null,params);this.modified(!0)}function fit(proj,_){var data=collectGeoJSON(_.fit);_.extent?proj.fitExtent(_.extent,data):_.size?proj.fitSize(_.size,data):0}function create(type){var constructor=vegaProjection.projection((type||"mercator").toLowerCase());constructor||vegaUtil.error("Unrecognized projection type: "+type);return constructor()}function collectGeoJSON(data){data=vegaUtil.array(data);return 1===data.length?data[0]:{type:"FeatureCollection",features:data.reduce(function(a,f){return a.concat(featurize(f))},
[])}}function featurize(f){return"FeatureCollection"===f.type?f.features:vegaUtil.array(f).filter(function(d){return null!=d}).map(function(d){return"Feature"===d.type?d:{type:"Feature",geometry:d}})}var CONTOUR_PARAMS=["size","smooth"],DENSITY_PARAMS="x y weight size cellSize bandwidth".split(" ");Contour.Definition={type:"Contour",metadata:{generates:!0},params:[{name:"size",type:"number",array:!0,length:2,required:!0},{name:"values",type:"number",array:!0},{name:"x",type:"field"},{name:"y",type:"field"},
{name:"weight",type:"field"},{name:"cellSize",type:"number"},{name:"bandwidth",type:"number"},{name:"count",type:"number"},{name:"smooth",type:"boolean"},{name:"nice",type:"boolean","default":!1},{name:"thresholds",type:"number",array:!0}]};vegaUtil.inherits(Contour,vegaDataflow.Transform).transform=function(_,pulse){if(this.value&&!pulse.changed()&&!_.modified())return pulse.StopPropagation;var out=pulse.fork(pulse.NO_SOURCE|pulse.NO_FIELDS),count=_.count||10;if(_.values){var contour=d3Contour.contours();
var params=CONTOUR_PARAMS;pulse=_.values}else contour=d3Contour.contourDensity(),params=DENSITY_PARAMS,pulse=pulse.materialize(pulse.SOURCE).source;contour.thresholds(_.thresholds||(_.nice?count:quantize(count)));params.forEach(function(param){if(null!=_[param])contour[param](_[param])});this.value&&(out.rem=this.value);pulse=pulse&&pulse.length?contour(pulse).map(vegaDataflow.ingest):[];this.value=out.source=out.add=pulse;return out};GeoJSON.Definition={type:"GeoJSON",metadata:{},params:[{name:"fields",
type:"field",array:!0,length:2},{name:"geojson",type:"field"}]};vegaUtil.inherits(GeoJSON,vegaDataflow.Transform).transform=function(_,pulse){var features=this._features,points=this._points,fields=_.fields,lon=fields&&fields[0],lat=fields&&fields[1],geojson=_.geojson||!fields&&vegaUtil.identity;fields=pulse.ADD;_=_.modified()||pulse.changed(pulse.REM)||pulse.modified(vegaUtil.accessorFields(geojson))||lon&&pulse.modified(vegaUtil.accessorFields(lon))||lat&&pulse.modified(vegaUtil.accessorFields(lat));
if(!this.value||_)fields=pulse.SOURCE,this._features=features=[],this._points=points=[];geojson&&pulse.visit(fields,function(t){features.push(geojson(t))});lon&&lat&&(pulse.visit(fields,function(t){var x=lon(t);t=lat(t);null!=x&&null!=t&&(x=+x)===x&&(t=+t)===t&&points.push([x,t])}),features=features.concat({type:"Feature",geometry:{type:"MultiPoint",coordinates:points}}));this.value={type:"FeatureCollection",features:features}};GeoPath.Definition={type:"GeoPath",metadata:{modifies:!0},params:[{name:"projection",
type:"projection"},{name:"field",type:"field"},{name:"pointRadius",type:"number",expr:!0},{name:"as",type:"string","default":"path"}]};vegaUtil.inherits(GeoPath,vegaDataflow.Transform).transform=function(_,pulse){var out=pulse.fork(pulse.ALL),path=this.value,field=_.field||vegaUtil.identity,as=_.as||"path",flag=out.SOURCE;!path||_.modified()?(this.value=path=vegaProjection.getProjectionPath(_.projection),out.materialize().reflow()):flag=field===vegaUtil.identity||pulse.modified(field.fields)?out.ADD_MOD:
out.ADD;_=initPath(path,_.pointRadius);out.visit(flag,function(t){t[as]=path(field(t))});path.pointRadius(_);return out.modifies(as)};GeoPoint.Definition={type:"GeoPoint",metadata:{modifies:!0},params:[{name:"projection",type:"projection",required:!0},{name:"fields",type:"field",array:!0,required:!0,length:2},{name:"as",type:"string",array:!0,length:2,"default":["x","y"]}]};vegaUtil.inherits(GeoPoint,vegaDataflow.Transform).transform=function(_,pulse){function set(t){var xy=proj([lon(t),lat(t)]);
xy?(t[x]=xy[0],t[y]=xy[1]):(t[x]=void 0,t[y]=void 0)}var proj=_.projection,lon=_.fields[0],lat=_.fields[1],as=_.as||["x","y"],x=as[0],y=as[1];_.modified()?pulse=pulse.materialize().reflow(!0).visit(pulse.SOURCE,set):(_=pulse.modified(lon.fields)||pulse.modified(lat.fields),pulse.visit(_?pulse.ADD_MOD:pulse.ADD,set));return pulse.modifies(as)};GeoShape.Definition={type:"GeoShape",metadata:{modifies:!0,nomod:!0},params:[{name:"projection",type:"projection"},{name:"field",type:"field","default":"datum"},
{name:"pointRadius",type:"number",expr:!0},{name:"as",type:"string","default":"shape"}]};vegaUtil.inherits(GeoShape,vegaDataflow.Transform).transform=function(_,pulse){pulse=pulse.fork(pulse.ALL);var shape=this.value,as=_.as||"shape",flag=pulse.ADD;if(!shape||_.modified())this.value=shape=shapeGenerator(vegaProjection.getProjectionPath(_.projection),_.field||vegaUtil.field("datum"),_.pointRadius),pulse.materialize().reflow(),flag=pulse.SOURCE;pulse.visit(flag,function(t){t[as]=shape});return pulse.modifies(as)};
Graticule.Definition={type:"Graticule",metadata:{changes:!0,generates:!0},params:[{name:"extent",type:"array",array:!0,length:2,content:{type:"number",array:!0,length:2}},{name:"extentMajor",type:"array",array:!0,length:2,content:{type:"number",array:!0,length:2}},{name:"extentMinor",type:"array",array:!0,length:2,content:{type:"number",array:!0,length:2}},{name:"step",type:"number",array:!0,length:2},{name:"stepMajor",type:"number",array:!0,length:2,"default":[90,360]},{name:"stepMinor",type:"number",
array:!0,length:2,"default":[10,10]},{name:"precision",type:"number","default":2.5}]};vegaUtil.inherits(Graticule,vegaDataflow.Transform).transform=function(_,pulse){var src=this.value,gen=this.generator;if(!src.length||_.modified())for(var prop in _)if(vegaUtil.isFunction(gen[prop]))gen[prop](_[prop]);_=gen();src.length?pulse.mod.push(vegaDataflow.replace(src[0],_)):pulse.add.push(vegaDataflow.ingest(_));src[0]=_;return pulse};vegaUtil.inherits(Projection,vegaDataflow.Transform).transform=function(_,
pulse){var proj$jscomp$0=this.value;!proj$jscomp$0||_.modified("type")?(this.value=proj$jscomp$0=create(_.type),vegaProjection.projectionProperties.forEach(function(prop){if(null!=_[prop]){var proj=proj$jscomp$0,value=_[prop];if(vegaUtil.isFunction(proj[prop]))proj[prop](value)}})):vegaProjection.projectionProperties.forEach(function(prop){if(_.modified(prop)){var proj=proj$jscomp$0,value=_[prop];if(vegaUtil.isFunction(proj[prop]))proj[prop](value)}});null!=_.pointRadius&&proj$jscomp$0.path.pointRadius(_.pointRadius);
_.fit&&fit(proj$jscomp$0,_);return pulse.fork(pulse.NO_SOURCE|pulse.NO_FIELDS)};exports.contour=Contour;exports.geojson=GeoJSON;exports.geopath=GeoPath;exports.geopoint=GeoPoint;exports.geoshape=GeoShape;exports.graticule=Graticule;exports.projection=Projection;Object.defineProperty(exports,"__esModule",{value:!0})})}
//# sourceMappingURL=module$node_modules$vega_geo$build$vega_geo.js.map
