{"version":3,"sources":["starter/core.cljs"],"mappings":";;;;AAIA,AAAA,AAACA;AAED,AAAA,AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AAAcI;AAApB,AACE,AAACC,AAAMC,AAAO,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAAP,AAAAK;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAC,AAAAH;AAAA,AAAAI,AA45EmC,AAAAoC,AAAAxC;AA55EnCK,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAJ;AAAA,AAAA,AAAAK,AAAAN,AAAAK,AAAMU;AAAN,AAAA,AAAA,AAAAR,AAAAJ,AACE,AAACa,AAAY;AAAKC,AAAEC;AAAP,AAAA,AAAA,AAAA,AAAA,AAAcD,AAAKC,AAAOH;;AAAI,AAAA,AAACI,AACK,AAAA,AAACC;;AAAD,AAAa,AAAA,AAACC;;;;AAFjE,AAAA,AAAAhB,AAAA;;;;AAAA;;;;;AAAA,AAAAG,AAAA,AAAAC,AAAAN,AAAA,AAAAO,AAAA,AAAAC,AAAAf;;AAAA,AAAAY,AAAA,AAAAC,AAAAN,AAAA;;;AAAA,AAAA,AAAAS,AAAAhB,AAAMmB;AAAN,AAAA,AAAAF,AACE,AAACG,AAAY;AAAKC,AAAEC;AAAP,AAAA,AAAA,AAAA,AAAA,AAAcD,AAAKC,AAAOH;;AAAI,AAAA,AAACI,AACK,AAAA,AAACC;;AAAD,AAAa,AAAA,AAACC;;AAFjE,AAAAX,AAAA,AAAAI,AAAAlB;;;AAAA;;;;AAAA,AAAA;;AAAA,AAAA,AAAAD,AAAQH;;;;AADxiC,AAGa,AAAA,AAAA,AAAA,AAAA,AAACC;AA6BnB,AAAKC,AAAa,AAACC,AAAO,AAACC,AAAQJ;AAKnC,AAAA,AAAMM;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAD,AAKIE,AAAgBL;;AAEpB,AAAA,AAAMM;AAAN,AACE,AAAA,AAACC;;AAEH,AAAA,AAAMC;AAAN,AACE,AAAA,AAACD;;AACD,AAAA,AAACE,AAAUL,AACD,AAAA,AAAiBM;;AAE7B,AAAA,AAAeC;AAAf,AACE,AAACH","names":["vega-charts.vega/log","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","starter.core/group-data","seq19642","self__4718__auto__","cljs.core/seq","names","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/concat","iter__4523__auto__","s__19644","cljs.core/LazySeq","temp__5720__auto__","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","cljs.core/count","b__19646","cljs.core/chunk-buffer","i__19645","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__19643","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","n","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","i","y","cljs.core.take.cljs$core$IFn$_invoke$arity$2","cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1","cljs.core/rand-int","starter.core/line-plot","starter.core.group_data.cljs$core$IFn$_invoke$arity$variadic","starter.core/line-plotter","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","cljs.core/clj->js","cljs.core/deref","starter.core/app","vega-charts.vega/vega-lite","starter.core/stop","js/console.log","starter.core/start","reagent.core.render.cljs$core$IFn$_invoke$arity$2","js/document","starter.core/init","cljs.core/chunk-first"],"sourcesContent":["(ns starter.core\n    (:require [reagent.core :as r]\n              [vega-charts.vega :as vega]))\n\n(vega/log \"hello\")\n\n(defn group-data [& names]\n  (apply concat (for [n names]\n                  (map-indexed (fn [i y] {:x i :y y :col n}) (take 20\n                                                                   (repeatedly #(rand-int 100)))))))\n\n\n(def line-plot\n  {:$schema \"https://vega.github.io/schema/vega-lite/v3.4.json\"\n   :description \"A simple line chart with embedded data.\"\n   :data {:values (group-data \"off\" \"error\" \"update\" \"run\")}\n   :vconcat [{:encoding {:x {:field \"x\" :type \"quantitative\" :title \"\"\n                             :axis {:gridOpacity 0}}\n                         :y {:field \"y\" :type \"quantitative\" :title \"\"}\n                         :opacity {:value 0.7}\n                         :color {:field \"col\"\n                                 :title \"\"\n                                 :type \"nominal\"\n                                 :legend {:orient \"none\"\n                                          :legendX 50\n                                          :legendY 285\n                                          :direction \"horizontal\"\n                                          :offset 5}}}\n\n              :width 270\n              :heigth 150\n              :mark {:type \"line\"\n                     ;:interpolate \"natural\"\n                     :strokeWidth 3\n                     :point {:filled true\n                             :fill \"white\"}}}\n             {:encoding {:x {:field \"y\" :type \"quantitative\" :aggregate \"sum\" :title \"\"}\n                         :opacity {:value 1}\n                         :color {:field \"col\"\n                                 :title \"\"\n                                 :type \"nominal\"}}\n              :width 270\n              :mark {:type \"bar\"}}]})\n\n(def line-plotter (r/atom (clj->js line-plot)))\n\n\n\n\n(defn app []\n  [:<>\n   [:div \n    [:p {:style {:padding 20}}\n     \"Example of Vega Charts with Shadow-cljs\"]]\n   [vega/vega-lite @line-plotter]])\n\n(defn stop []\n  (js/console.log \"Stopping...\"))\n\n(defn start []\n  (js/console.log \"Starting...\")\n  (r/render [app]\n            (.getElementById js/document \"app\")))\n\n(defn ^:export init []\n  (start))\n"]}