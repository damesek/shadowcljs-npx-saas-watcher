{
"version":3,
"file":"module$node_modules$vega_crossfilter$build$vega_crossfilter.js",
"lineCount":22,
"mappings":"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",
"sources":["node_modules/vega-crossfilter/build/vega-crossfilter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_crossfilter$build$vega_crossfilter\"] = function(global,process,require,module,exports,shadow$shims) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('vega-dataflow'), require('vega-util')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'vega-dataflow', 'vega-util'], factory) :\n  (global = global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.d3, global.vega, global.vega));\n}(this, function (exports, d3Array, vegaDataflow, vegaUtil) { 'use strict';\n\n  function array8(n) { return new Uint8Array(n); }\n\n  function array16(n) { return new Uint16Array(n); }\n\n  function array32(n) { return new Uint32Array(n); }\n\n  /**\n   * Maintains CrossFilter state.\n   */\n  function Bitmaps() {\n\n    var width = 8,\n        data = [],\n        seen = array32(0),\n        curr = array(0, width),\n        prev = array(0, width);\n\n    return {\n\n      data: function() { return data; },\n\n      seen: function() {\n        return (seen = lengthen(seen, data.length));\n      },\n\n      add: function(array) {\n        for (var i=0, j=data.length, n=array.length, t; i<n; ++i) {\n          t = array[i];\n          t._index = j++;\n          data.push(t);\n        }\n      },\n\n      remove: function(num, map) { // map: index -> boolean (true => remove)\n        var n = data.length,\n            copy = Array(n - num),\n            reindex = data, // reuse old data array for index map\n            t, i, j;\n\n        // seek forward to first removal\n        for (i=0; !map[i] && i<n; ++i) {\n          copy[i] = data[i];\n          reindex[i] = i;\n        }\n\n        // condense arrays\n        for (j=i; i<n; ++i) {\n          t = data[i];\n          if (!map[i]) {\n            reindex[i] = j;\n            curr[j] = curr[i];\n            prev[j] = prev[i];\n            copy[j] = t;\n            t._index = j++;\n          } else {\n            reindex[i] = -1;\n          }\n          curr[i] = 0; // clear unused bits\n        }\n\n        data = copy;\n        return reindex;\n      },\n\n      size: function() { return data.length; },\n\n      curr: function() { return curr; },\n\n      prev: function() { return prev; },\n\n      reset: function(k) { prev[k] = curr[k]; },\n\n      all: function() {\n        return width < 0x101 ? 0xff : width < 0x10001 ? 0xffff : 0xffffffff;\n      },\n\n      set: function(k, one) { curr[k] |= one; },\n\n      clear: function(k, one) { curr[k] &= ~one; },\n\n      resize: function(n, m) {\n        var k = curr.length;\n        if (n > k || m > width) {\n          width = Math.max(m, width);\n          curr = array(n, width, curr);\n          prev = array(n, width);\n        }\n      }\n    };\n  }\n\n  function lengthen(array, length, copy) {\n    if (array.length >= length) return array;\n    copy = copy || new array.constructor(length);\n    copy.set(array);\n    return copy;\n  }\n\n  function array(n, m, array) {\n    var copy = (m < 0x101 ? array8 : m < 0x10001 ? array16 : array32)(n);\n    if (array) copy.set(array);\n    return copy;\n  }\n\n  function Dimension(index, i, query) {\n    var bit = (1 << i);\n\n    return {\n      one:     bit,\n      zero:    ~bit,\n      range:   query.slice(),\n      bisect:  index.bisect,\n      index:   index.index,\n      size:    index.size,\n\n      onAdd: function(added, curr) {\n        var dim = this,\n            range = dim.bisect(dim.range, added.value),\n            idx = added.index,\n            lo = range[0],\n            hi = range[1],\n            n1 = idx.length, i;\n\n        for (i=0;  i<lo; ++i) curr[idx[i]] |= bit;\n        for (i=hi; i<n1; ++i) curr[idx[i]] |= bit;\n        return dim;\n      }\n    };\n  }\n\n  /**\n   * Maintains a list of values, sorted by key.\n   */\n  function SortedIndex() {\n    var index = array32(0),\n        value = [],\n        size = 0;\n\n    function insert(key, data, base) {\n      if (!data.length) return [];\n\n      var n0 = size,\n          n1 = data.length,\n          addv = Array(n1),\n          addi = array32(n1),\n          oldv, oldi, i;\n\n      for (i=0; i<n1; ++i) {\n        addv[i] = key(data[i]);\n        addi[i] = i;\n      }\n      addv = sort(addv, addi);\n\n      if (n0) {\n        oldv = value;\n        oldi = index;\n        value = Array(n0 + n1);\n        index = array32(n0 + n1);\n        merge(base, oldv, oldi, n0, addv, addi, n1, value, index);\n      } else {\n        if (base > 0) for (i=0; i<n1; ++i) {\n          addi[i] += base;\n        }\n        value = addv;\n        index = addi;\n      }\n      size = n0 + n1;\n\n      return {index: addi, value: addv};\n    }\n\n    function remove(num, map) {\n      // map: index -> remove\n      var n = size,\n          idx, i, j;\n\n      // seek forward to first removal\n      for (i=0; !map[index[i]] && i<n; ++i);\n\n      // condense index and value arrays\n      for (j=i; i<n; ++i) {\n        if (!map[idx=index[i]]) {\n          index[j] = idx;\n          value[j] = value[i];\n          ++j;\n        }\n      }\n\n      size = n - num;\n    }\n\n    function reindex(map) {\n      for (var i=0, n=size; i<n; ++i) {\n        index[i] = map[index[i]];\n      }\n    }\n\n    function bisect(range, array) {\n      var n;\n      if (array) {\n        n = array.length;\n      } else {\n        array = value;\n        n = size;\n      }\n      return [\n        d3Array.bisectLeft(array, range[0], 0, n),\n        d3Array.bisectRight(array, range[1], 0, n)\n      ];\n    }\n\n    return {\n      insert:  insert,\n      remove:  remove,\n      bisect:  bisect,\n      reindex: reindex,\n      index:   function() { return index; },\n      size:    function() { return size; }\n    };\n  }\n\n  function sort(values, index) {\n    values.sort.call(index, function(a, b) {\n      var x = values[a],\n          y = values[b];\n      return x < y ? -1 : x > y ? 1 : 0;\n    });\n    return d3Array.permute(values, index);\n  }\n\n  function merge(base, value0, index0, n0, value1, index1, n1, value, index) {\n    var i0 = 0, i1 = 0, i;\n\n    for (i=0; i0 < n0 && i1 < n1; ++i) {\n      if (value0[i0] < value1[i1]) {\n        value[i] = value0[i0];\n        index[i] = index0[i0++];\n      } else {\n        value[i] = value1[i1];\n        index[i] = index1[i1++] + base;\n      }\n    }\n\n    for (; i0 < n0; ++i0, ++i) {\n      value[i] = value0[i0];\n      index[i] = index0[i0];\n    }\n\n    for (; i1 < n1; ++i1, ++i) {\n      value[i] = value1[i1];\n      index[i] = index1[i1] + base;\n    }\n  }\n\n  /**\n   * An indexed multi-dimensional filter.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Array<function(object): *>} params.fields - An array of dimension accessors to filter.\n   * @param {Array} params.query - An array of per-dimension range queries.\n   */\n  function CrossFilter(params) {\n    vegaDataflow.Transform.call(this, Bitmaps(), params);\n    this._indices = null;\n    this._dims = null;\n  }\n\n  CrossFilter.Definition = {\n    \"type\": \"CrossFilter\",\n    \"metadata\": {},\n    \"params\": [\n      { \"name\": \"fields\", \"type\": \"field\", \"array\": true, \"required\": true },\n      { \"name\": \"query\", \"type\": \"array\", \"array\": true, \"required\": true,\n        \"content\": {\"type\": \"number\", \"array\": true, \"length\": 2} }\n    ]\n  };\n\n  var prototype = vegaUtil.inherits(CrossFilter, vegaDataflow.Transform);\n\n  prototype.transform = function(_, pulse) {\n    if (!this._dims) {\n      return this.init(_, pulse);\n    } else {\n      var init = _.modified('fields')\n            || _.fields.some(function(f) { return pulse.modified(f.fields); });\n\n      return init\n        ? this.reinit(_, pulse)\n        : this.eval(_, pulse);\n    }\n  };\n\n  prototype.init = function(_, pulse) {\n    var fields = _.fields,\n        query = _.query,\n        indices = this._indices = {},\n        dims = this._dims = [],\n        m = query.length,\n        i = 0, key, index;\n\n    // instantiate indices and dimensions\n    for (; i<m; ++i) {\n      key = fields[i].fname;\n      index = indices[key] || (indices[key] = SortedIndex());\n      dims.push(Dimension(index, i, query[i]));\n    }\n\n    return this.eval(_, pulse);\n  };\n\n  prototype.reinit = function(_, pulse) {\n    var output = pulse.materialize().fork(),\n        fields = _.fields,\n        query = _.query,\n        indices = this._indices,\n        dims = this._dims,\n        bits = this.value,\n        curr = bits.curr(),\n        prev = bits.prev(),\n        all = bits.all(),\n        out = (output.rem = output.add),\n        mod = output.mod,\n        m = query.length,\n        adds = {}, add, index, key,\n        mods, remMap, modMap, i, n, f;\n\n    // set prev to current state\n    prev.set(curr);\n\n    // if pulse has remove tuples, process them first\n    if (pulse.rem.length) {\n      remMap = this.remove(_, pulse, output);\n    }\n\n    // if pulse has added tuples, add them to state\n    if (pulse.add.length) {\n      bits.add(pulse.add);\n    }\n\n    // if pulse has modified tuples, create an index map\n    if (pulse.mod.length) {\n      modMap = {};\n      for (mods=pulse.mod, i=0, n=mods.length; i<n; ++i) {\n        modMap[mods[i]._index] = 1;\n      }\n    }\n\n    // re-initialize indices as needed, update curr bitmap\n    for (i=0; i<m; ++i) {\n      f = fields[i];\n      if (!dims[i] || _.modified('fields', i) || pulse.modified(f.fields)) {\n        key = f.fname;\n        if (!(add = adds[key])) {\n          indices[key] = index = SortedIndex();\n          adds[key] = add = index.insert(f, pulse.source, 0);\n        }\n        dims[i] = Dimension(index, i, query[i]).onAdd(add, curr);\n      }\n    }\n\n    // visit each tuple\n    // if filter state changed, push index to add/rem\n    // else if in mod and passes a filter, push index to mod\n    for (i=0, n=bits.data().length; i<n; ++i) {\n      if (remMap[i]) { // skip if removed tuple\n        continue;\n      } else if (prev[i] !== curr[i]) { // add if state changed\n        out.push(i);\n      } else if (modMap[i] && curr[i] !== all) { // otherwise, pass mods through\n        mod.push(i);\n      }\n    }\n\n    bits.mask = (1 << m) - 1;\n    return output;\n  };\n\n  prototype.eval = function(_, pulse) {\n    var output = pulse.materialize().fork(),\n        m = this._dims.length,\n        mask = 0;\n\n    if (pulse.rem.length) {\n      this.remove(_, pulse, output);\n      mask |= (1 << m) - 1;\n    }\n\n    if (_.modified('query') && !_.modified('fields')) {\n      mask |= this.update(_, pulse, output);\n    }\n\n    if (pulse.add.length) {\n      this.insert(_, pulse, output);\n      mask |= (1 << m) - 1;\n    }\n\n    if (pulse.mod.length) {\n      this.modify(pulse, output);\n      mask |= (1 << m) - 1;\n    }\n\n    this.value.mask = mask;\n    return output;\n  };\n\n  prototype.insert = function(_, pulse, output) {\n    var tuples = pulse.add,\n        bits = this.value,\n        dims = this._dims,\n        indices = this._indices,\n        fields = _.fields,\n        adds = {},\n        out = output.add,\n        k = bits.size(),\n        n = k + tuples.length,\n        m = dims.length, j, key, add;\n\n    // resize bitmaps and add tuples as needed\n    bits.resize(n, m);\n    bits.add(tuples);\n\n    var curr = bits.curr(),\n        prev = bits.prev(),\n        all  = bits.all();\n\n    // add to dimensional indices\n    for (j=0; j<m; ++j) {\n      key = fields[j].fname;\n      add = adds[key] || (adds[key] = indices[key].insert(fields[j], tuples, k));\n      dims[j].onAdd(add, curr);\n    }\n\n    // set previous filters, output if passes at least one filter\n    for (; k<n; ++k) {\n      prev[k] = all;\n      if (curr[k] !== all) out.push(k);\n    }\n  };\n\n  prototype.modify = function(pulse, output) {\n    var out = output.mod,\n        bits = this.value,\n        curr = bits.curr(),\n        all  = bits.all(),\n        tuples = pulse.mod,\n        i, n, k;\n\n    for (i=0, n=tuples.length; i<n; ++i) {\n      k = tuples[i]._index;\n      if (curr[k] !== all) out.push(k);\n    }\n  };\n\n  prototype.remove = function(_, pulse, output) {\n    var indices = this._indices,\n        bits = this.value,\n        curr = bits.curr(),\n        prev = bits.prev(),\n        all  = bits.all(),\n        map = {},\n        out = output.rem,\n        tuples = pulse.rem,\n        i, n, k, f;\n\n    // process tuples, output if passes at least one filter\n    for (i=0, n=tuples.length; i<n; ++i) {\n      k = tuples[i]._index;\n      map[k] = 1; // build index map\n      prev[k] = (f = curr[k]);\n      curr[k] = all;\n      if (f !== all) out.push(k);\n    }\n\n    // remove from dimensional indices\n    for (k in indices) {\n      indices[k].remove(n, map);\n    }\n\n    this.reindex(pulse, n, map);\n    return map;\n  };\n\n  // reindex filters and indices after propagation completes\n  prototype.reindex = function(pulse, num, map) {\n    var indices = this._indices,\n        bits = this.value;\n\n    pulse.runAfter(function() {\n      var indexMap = bits.remove(num, map);\n      for (var key in indices) indices[key].reindex(indexMap);\n    });\n  };\n\n  prototype.update = function(_, pulse, output) {\n    var dims = this._dims,\n        query = _.query,\n        stamp = pulse.stamp,\n        m = dims.length,\n        mask = 0, i, q;\n\n    // survey how many queries have changed\n    output.filters = 0;\n    for (q=0; q<m; ++q) {\n      if (_.modified('query', q)) { i = q; ++mask; }\n    }\n\n    if (mask === 1) {\n      // only one query changed, use more efficient update\n      mask = dims[i].one;\n      this.incrementOne(dims[i], query[i], output.add, output.rem);\n    } else {\n      // multiple queries changed, perform full record keeping\n      for (q=0, mask=0; q<m; ++q) {\n        if (!_.modified('query', q)) continue;\n        mask |= dims[q].one;\n        this.incrementAll(dims[q], query[q], stamp, output.add);\n        output.rem = output.add; // duplicate add/rem for downstream resolve\n      }\n    }\n\n    return mask;\n  };\n\n  prototype.incrementAll = function(dim, query, stamp, out) {\n    var bits = this.value,\n        seen = bits.seen(),\n        curr = bits.curr(),\n        prev = bits.prev(),\n        index = dim.index(),\n        old = dim.bisect(dim.range),\n        range = dim.bisect(query),\n        lo1 = range[0],\n        hi1 = range[1],\n        lo0 = old[0],\n        hi0 = old[1],\n        one = dim.one,\n        i, j, k;\n\n    // Fast incremental update based on previous lo index.\n    if (lo1 < lo0) {\n      for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n        k = index[i];\n        if (seen[k] !== stamp) {\n          prev[k] = curr[k];\n          seen[k] = stamp;\n          out.push(k);\n        }\n        curr[k] ^= one;\n      }\n    } else if (lo1 > lo0) {\n      for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n        k = index[i];\n        if (seen[k] !== stamp) {\n          prev[k] = curr[k];\n          seen[k] = stamp;\n          out.push(k);\n        }\n        curr[k] ^= one;\n      }\n    }\n\n    // Fast incremental update based on previous hi index.\n    if (hi1 > hi0) {\n      for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n        k = index[i];\n        if (seen[k] !== stamp) {\n          prev[k] = curr[k];\n          seen[k] = stamp;\n          out.push(k);\n        }\n        curr[k] ^= one;\n      }\n    } else if (hi1 < hi0) {\n      for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n        k = index[i];\n        if (seen[k] !== stamp) {\n          prev[k] = curr[k];\n          seen[k] = stamp;\n          out.push(k);\n        }\n        curr[k] ^= one;\n      }\n    }\n\n    dim.range = query.slice();\n  };\n\n  prototype.incrementOne = function(dim, query, add, rem) {\n    var bits = this.value,\n        curr = bits.curr(),\n        index = dim.index(),\n        old = dim.bisect(dim.range),\n        range = dim.bisect(query),\n        lo1 = range[0],\n        hi1 = range[1],\n        lo0 = old[0],\n        hi0 = old[1],\n        one = dim.one,\n        i, j, k;\n\n    // Fast incremental update based on previous lo index.\n    if (lo1 < lo0) {\n      for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n        k = index[i];\n        curr[k] ^= one;\n        add.push(k);\n      }\n    } else if (lo1 > lo0) {\n      for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n        k = index[i];\n        curr[k] ^= one;\n        rem.push(k);\n      }\n    }\n\n    // Fast incremental update based on previous hi index.\n    if (hi1 > hi0) {\n      for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n        k = index[i];\n        curr[k] ^= one;\n        add.push(k);\n      }\n    } else if (hi1 < hi0) {\n      for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n        k = index[i];\n        curr[k] ^= one;\n        rem.push(k);\n      }\n    }\n\n    dim.range = query.slice();\n  };\n\n  /**\n   * Selectively filters tuples by resolving against a filter bitmap.\n   * Useful for processing the output of a cross-filter transform.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {object} params.ignore - A bit mask indicating which filters to ignore.\n   * @param {object} params.filter - The per-tuple filter bitmaps. Typically this\n   *   parameter value is a reference to a {@link CrossFilter} transform.\n   */\n  function ResolveFilter(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  ResolveFilter.Definition = {\n    \"type\": \"ResolveFilter\",\n    \"metadata\": {},\n    \"params\": [\n      { \"name\": \"ignore\", \"type\": \"number\", \"required\": true,\n        \"description\": \"A bit mask indicating which filters to ignore.\" },\n      { \"name\": \"filter\", \"type\": \"object\", \"required\": true,\n        \"description\": \"Per-tuple filter bitmaps from a CrossFilter transform.\" }\n    ]\n  };\n\n  var prototype$1 = vegaUtil.inherits(ResolveFilter, vegaDataflow.Transform);\n\n  prototype$1.transform = function(_, pulse) {\n    var ignore = ~(_.ignore || 0), // bit mask where zeros -> dims to ignore\n        bitmap = _.filter,\n        mask = bitmap.mask;\n\n    // exit early if no relevant filter changes\n    if ((mask & ignore) === 0) return pulse.StopPropagation;\n\n    var output = pulse.fork(pulse.ALL),\n        data = bitmap.data(),\n        curr = bitmap.curr(),\n        prev = bitmap.prev(),\n        pass = function(k) {\n          return !(curr[k] & ignore) ? data[k] : null;\n        };\n\n    // propagate all mod tuples that pass the filter\n    output.filter(output.MOD, pass);\n\n    // determine add & rem tuples via filter functions\n    // for efficiency, we do *not* populate new arrays,\n    // instead we add filter functions applied downstream\n\n    if (!(mask & (mask-1))) { // only one filter changed\n      output.filter(output.ADD, pass);\n      output.filter(output.REM, function(k) {\n        return (curr[k] & ignore) === mask ? data[k] : null;\n      });\n\n    } else { // multiple filters changed\n      output.filter(output.ADD, function(k) {\n        var c = curr[k] & ignore,\n            f = !c && (c ^ (prev[k] & ignore));\n        return f ? data[k] : null;\n      });\n      output.filter(output.REM, function(k) {\n        var c = curr[k] & ignore,\n            f = c && !(c ^ (c ^ (prev[k] & ignore)));\n        return f ? data[k] : null;\n      });\n    }\n\n    // add filter to source data in case of reflow...\n    return output.filter(output.SOURCE, function(t) { return pass(t._index); });\n  };\n\n  exports.crossfilter = CrossFilter;\n  exports.resolvefilter = ResolveFilter;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","factory","define","amd","self","vega","transforms","d3","d3Array","vegaDataflow","vegaUtil","array8","n","Uint8Array","array16","Uint16Array","array32","Uint32Array","Bitmaps","width","data","seen","curr","array","prev","length","copy","constructor","set","add","i","j","t","_index","push","remove","num","map","Array","reindex","size","reset","k","all","one","clear","resize","m","Math","max","Dimension","index","query","bit","zero","range","slice","bisect","onAdd","added","dim","value","idx","lo","hi","n1","SortedIndex","insert","key","base","n0","addv","addi","sort","oldv","oldi","i0","i1","value1","bisectLeft","bisectRight","values","call","a","b","x","y","permute","CrossFilter","params","Transform","_dims","_indices","ResolveFilter","Definition","prototype","inherits","transform","prototype.transform","_","pulse","modified","fields","some","f","reinit","eval","init","prototype.init","indices","dims","fname","prototype.reinit","output","materialize","fork","bits","out","rem","mod","adds","remMap","modMap","mods","source","mask","prototype.eval","update","modify","prototype.insert","tuples","prototype.modify","prototype.remove","prototype.reindex","runAfter","indexMap","prototype.update","stamp","q","filters","incrementOne","incrementAll","prototype.incrementAll","old","lo1","hi1","lo0","hi0","min","prototype.incrementOne","prototype$1","prototype$1.transform","ignore","bitmap","filter","StopPropagation","ALL","pass","MOD","ADD","c","REM","SOURCE","crossfilter","resolvefilter","Object","defineProperty"]
}
