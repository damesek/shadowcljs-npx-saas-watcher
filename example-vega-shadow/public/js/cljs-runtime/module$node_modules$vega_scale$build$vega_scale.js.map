{
"version":3,
"file":"module$node_modules$vega_scale$build$vega_scale.js",
"lineCount":31,
"mappings":"AAAAA,cAAA,gDAAA,CAAoE,QAAQ,CAACC,eAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,gBAA/B,CAAuCC,YAAvC,CAAqD,CAChI,SAAS,CAACL,MAAD,CAASM,OAAT,CAAkB,CACP,QAAnB,GAAA,MAAOF,iBAAP,EAAiD,WAAjD,GAA+B,MAAOD,OAAtC,CAA+DG,OAAA,CAAQF,gBAAR,CAAiBF,OAAA,CAAQ,+CAAR,CAAjB,CAAuCA,OAAA,CAAQ,0CAAR,CAAvC,CAA2DA,OAAA,CAAQ,4CAAR,CAA3D,CAAgFA,OAAA,CAAQ,4CAAR,CAAhF,CAAqGA,OAAA,CAAQ,wDAAR,CAArG,CAA/D;AACkB,UAAlB,GAAA,MAAOK,OAAP,EAAgCA,MAAAC,IAAhC,CAA6CD,MAAA,CAAO,4DAAA,MAAA,CAAA,GAAA,CAAP,CAAsFD,OAAtF,CAA7C,EACCN,MAAA,CAASA,MAAT,EAAmBS,IAAnB,CAAyBH,OAAA,CAAQN,MAAAU,KAAR,CAAsB,EAAtB,CAA0BV,MAAAU,KAA1B,CAAuCV,MAAAW,GAAvC,CAAkDX,MAAAW,GAAlD,CAA6DX,MAAAW,GAA7D,CAAwEX,MAAAW,GAAxE,CAD1B,CAF0B,CAA3B,CAAA,CAIC,IAJD,CAIO,QAAS,CAACP,OAAD,CAAUQ,QAAV,CAAoBC,MAApB,CAA4BC,OAA5B,CAAqCC,CAArC,CAAwCC,GAAxC,CAA6C,CAE5DC,QAASA,UAAS,CAACC,KAAD,CAAQC,YAAR,CAAsBC,YAAtB,CAAoC,CAChDC,YAAAA,CAAQH,KAARG,CAAgBF,YAAhBE,CAA8C,CAA9CA,CAA+BD,YACnC,OAAOF,MAAA,CAAiB,CAAR,CAAAG,YAAA,CAAYA,YAAZ,CAAoB,CAA7B,CAAkC,CAFW,CA2DtDC,QAASA,aAAY,CAACC,GAAD,CAAM,CACzB,MAAOA,IAAP,EAAcA,GAAAC,WAAA,CA5CGC,YA4CH,CADW,CAI3BC,QAASA,YAAW,CAACH,GAAD,CAAM,CACxB,MAAOA,IAAP;AAAcA,GAAAC,WAAA,CA/CEG,WA+CF,CADU,CAoE1BC,QAASA,YAAW,CAACC,KAAD,CAAQ,CAC1B,MAAO,SAAQ,CAACC,CAAD,CAAI,CAAA,IACbC,GAAKD,CAAA,CAAE,CAAF,CACLE,EAAAA,CAAKF,CAAA,CAAE,CAAF,CAGT,IAAIE,CAAJ,CAASD,EAAT,CAAa,CACX,IAAAE,EAAIF,EACJA,GAAA,CAAKC,CACLA,EAAA,CAAKC,CAHM,CAMb,MAAO,CACLJ,KAAAK,OAAA,CAAaH,EAAb,CADK,CAELF,KAAAK,OAAA,CAAaF,CAAb,CAFK,CAXU,CADO,CAmB5BG,QAASA,kBAAiB,CAACN,KAAD,CAAQ,CAChC,MAAO,SAAQ,CAACC,CAAD,CAAI,CAAA,IACbM,MAAQP,KAAAO,MAAA,EADK,CAEbL,GAAKD,CAAA,CAAE,CAAF,CACLE,EAAAA,CAAKF,CAAA,CAAE,CAAF,CAHQ,KAIbO,IAAO,EAJM,CAIQC,CAEzB,IAAIN,CAAJ,CAASD,EAAT,CAAa,CACX,IAAAE,EAAIF,EACJA,GAAA,CAAKC,CACLA,EAAA,CAAKC,CAHM,CAMRM,CAAA,CAAE,CAAP,KAAUD,CAAV,CAAYF,KAAAI,OAAZ,CAA0BD,CAA1B,CAA4BD,CAA5B,CAA+B,EAAEC,CAAjC,CACE,GAAIH,KAAA,CAAMG,CAAN,CAAJ,EAAgBR,EAAhB,EAAsBK,KAAA,CAAMG,CAAN,CAAtB,EAAkCP,CAAlC,CAAsC,CAC1B,CAAV,CAAIK,GAAJ,GAAaA,GAAb,CAAmBE,CAAnB,CACA,KAAAE,IAAMF,CAF8B,CAMxC,GAAI,EAAM,CAAN,CAAAF,GAAA,CAAJ,CAKA,MAHAN,GAGO,CAHFF,KAAAa,aAAA,CAAmBN,KAAA,CAAMC,GAAN,CAAnB,CAGE,CAFPL,CAEO,CAFFH,KAAAa,aAAA,CAAmBN,KAAA,CAAMK,GAAN,CAAnB,CAEE,CAAA,CACKE,IAAAA,EAAV,GAAAZ,EAAA,CAAG,CAAH,CAAA,CAAsBA,EAAA,CAAG,CAAH,CAAtB,CAA8BA,EAAA,CAAG,CAAH,CADzB,CAEKY,IAAAA,EAAV;AAAAX,CAAA,CAAG,CAAH,CAAA,CAAsBA,CAAA,CAAG,CAAH,CAAtB,CAA8BA,CAAA,CAAG,CAAH,CAFzB,CAxBU,CADa,CAgClCY,QAASA,KAAI,EAAG,CAcdC,QAASA,QAAO,EAAG,CAAA,IACbP,EAAIQ,MAAA,EAAAN,OADS,CAEbO,QAAUX,KAAA,CAAM,CAAN,CAAVW,CAAqBX,KAAA,CAAM,CAAN,CAFR,CAGbY,MAAQZ,KAAA,CAAMW,OAAN,CAAgB,CAAhB,CAHK,CAIbE,KAAOb,KAAA,CAAM,CAAN,CAAUW,OAAV,CAJM,CAKb1B,MAAQJ,SAAA,CAAUqB,CAAV,CAAanB,YAAb,CAA2BC,YAA3B,CAEZ8B,KAAA,EAAQD,IAAR,CAAeD,KAAf,GAAyB3B,KAAzB,EAAkC,CAAlC,CACI8B,MAAJ,GACED,IADF,CACSE,IAAAC,MAAA,CAAWH,IAAX,CADT,CAGAF,MAAA,GAAUC,IAAV,CAAiBD,KAAjB,CAAyBE,IAAzB,EAAiCZ,CAAjC,CAAqCnB,YAArC,GAAsDmC,KACtDC,UAAA,CAAYL,IAAZ,EAAoB,CAApB,CAAwB/B,YAAxB,CACIgC,MAAJ,GACEH,KACA,CADQI,IAAAD,MAAA,CAAWH,KAAX,CACR,CAAAO,SAAA,CAAYH,IAAAD,MAAA,CAAWI,SAAX,CAFd,CAIIC,EAAAA,CAAS1C,OAAAsB,MAAA,CAAcE,CAAd,CAAAmB,IAAA,CAAqB,QAAQ,CAAClB,CAAD,CAAI,CAAE,MAAOS,MAAP,CAAeE,IAAf,CAAsBX,CAAxB,CAAjC,CACb,OAAOmB,aAAA,CAAaX,OAAA,CAAUS,CAAAT,QAAA,EAAV,CAA6BS,CAA1C,CAlBU,CAdL,IACV3B;AAAQd,CAAA4C,aAAA,EAAAC,QAAA,CAAyBjB,IAAAA,EAAzB,CADE,CAEVG,OAASjB,KAAAiB,OAFC,CAGVY,aAAe7B,KAAAO,MAHL,CAIVA,MAAQ,CAAC,CAAD,CAAI,CAAJ,CAJE,CAKVc,IALU,CAMVK,SANU,CAOVJ,MAAQ,CAAA,CAPE,CAQVhC,aAAe,CARL,CASVC,aAAe,CATL,CAUVkC,MAAQ,EAEZ,QAAOzB,KAAA+B,QAuBP/B,MAAAiB,OAAA,CAAee,QAAQ,CAAC/B,CAAD,CAAI,CACzB,MAAIgC,UAAAtB,OAAJ,EACEM,MAAA,CAAOhB,CAAP,CACO,CAAAe,OAAA,EAFT,EAISC,MAAA,EALgB,CAS3BjB,MAAAO,MAAA,CAAc2B,QAAQ,CAACjC,CAAD,CAAI,CACxB,MAAIgC,UAAAtB,OAAJ,EACEJ,KACO,CADC,CAAC,CAACN,CAAA,CAAE,CAAF,CAAF,CAAQ,CAACA,CAAA,CAAE,CAAF,CAAT,CACD,CAAAe,OAAA,EAFT,EAIST,KAAA4B,MAAA,EALe,CAS1BnC,MAAAoC,WAAA,CAAmBC,QAAQ,CAACpC,CAAD,CAAI,CAC7BM,KAAA,CAAQ,CAAC,CAACN,CAAA,CAAE,CAAF,CAAF,CAAQ,CAACA,CAAA,CAAE,CAAF,CAAT,CACRqB,MAAA,CAAQ,CAAA,CACR,OAAON,QAAA,EAHsB,CAM/BhB,MAAA0B,UAAA,CAAkBY,QAAQ,EAAG,CAC3B,MAAOZ,UADoB,CAI7B1B,MAAAqB,KAAA,CAAakB,QAAQ,EAAG,CACtB,MAAOlB,KADe,CAIxBrB;KAAAsB,MAAA,CAAckB,QAAQ,CAACvC,CAAD,CAAI,CACxB,MAAIgC,UAAAtB,OAAJ,EACEW,KACO,CADC,CAAC,CAACrB,CACH,CAAAe,OAAA,EAFT,EAISM,KALe,CAS1BtB,MAAAyC,QAAA,CAAgBC,QAAQ,CAACzC,CAAD,CAAI,CAC1B,MAAIgC,UAAAtB,OAAJ,EAEErB,YACO,CAFPC,YAEO,CAFQgC,IAAAX,IAAA,CAAS,CAAT,CAAYW,IAAAf,IAAA,CAAS,CAAT,CAAYP,CAAZ,CAAZ,CAER,CAAAe,OAAA,EAHT,EAKS1B,YANiB,CAU5BU,MAAAV,aAAA,CAAqBqD,QAAQ,CAAC1C,CAAD,CAAI,CAC/B,MAAIgC,UAAAtB,OAAJ,EACErB,YACO,CADQiC,IAAAX,IAAA,CAAS,CAAT,CAAYW,IAAAf,IAAA,CAAS,CAAT,CAAYP,CAAZ,CAAZ,CACR,CAAAe,OAAA,EAFT,EAIS1B,YALsB,CASjCU,MAAAT,aAAA,CAAqBqD,QAAQ,CAAC3C,CAAD,CAAI,CAC/B,MAAIgC,UAAAtB,OAAJ,EACEpB,YACO,CADQgC,IAAAX,IAAA,CAAS,CAAT,CAAYW,IAAAf,IAAA,CAAS,CAAT,CAAYP,CAAZ,CAAZ,CACR,CAAAe,OAAA,EAFT,EAISzB,YALsB,CASjCS,MAAAyB,MAAA,CAAcoB,QAAQ,CAAC5C,CAAD,CAAI,CACxB,MAAIgC,UAAAtB,OAAJ,EACEc,KACO,CADCF,IAAAX,IAAA,CAAS,CAAT;AAAYW,IAAAf,IAAA,CAAS,CAAT,CAAYP,CAAZ,CAAZ,CACD,CAAAe,OAAA,EAFT,EAISS,KALe,CAS1BzB,MAAAD,YAAA,CAAoB+C,QAAQ,CAAC7C,CAAD,CAAI,CAE9B,GAAY,IAAZ,EAAIA,CAAA,CAAE,CAAF,CAAJ,EAA4B,IAA5B,EAAoBA,CAAA,CAAE,CAAF,CAApB,CAAA,CAF8B,IAI1BC,GAAK,CAACD,CAAA,CAAE,CAAF,CAJoB,CAK1BE,GAAK,CAACF,CAAA,CAAE,CAAF,CALoB,CAO1B0B,OAAS,CADTT,CACS,CADCX,KAAA,CAAM,CAAN,CACD,CADYA,KAAA,CAAM,CAAN,CACZ,EAAUsB,YAAA,EAAAX,QAAA,EAAV,CAAqCW,YAAA,EAPpB,CAQ1BpB,EAAIkB,MAAAhB,OAAJF,CAAoB,CAGxB,IAAIP,EAAJ,GAAWA,EAAX,EAAiBC,EAAjB,GAAwBA,EAAxB,CAAA,CAGA,GAAIA,EAAJ,CAASD,EAAT,CAAa,CACX,IAAAE,EAAIF,EACJA,GAAA,CAAKC,EACLA,GAAA,CAAKC,CAHM,CAKb,GAAI,EAAAD,EAAA,CAAKwB,MAAA,CAAO,CAAP,CAAL,EAAkBzB,EAAlB,CAAuBK,KAAA,CAAM,CAAN,CAAQW,CAAR,CAAvB,CAAJ,CAAA,CAGA,IAAA6B,EAAIxB,IAAAX,IAAA,CAAS,CAAT,CAAY3B,OAAA+D,YAAA,CAAoBrB,MAApB,CAA4BzB,EAA5B,CAAZ,CAA8C,CAA9C,CACJ+C,GAAA,CAAI/C,EAAA,GAAKC,EAAL,CAAU4C,CAAV,CAAc9D,OAAA+D,YAAA,CAAoBrB,MAApB,CAA4BxB,EAA5B,CAAd,CAAgD,CAGhDD,GAAJ,CAASyB,MAAA,CAAOoB,CAAP,CAAT,CAAqBrB,SAArB,CAAiC,KAAjC,EAAwC,EAAEqB,CAEtC7B,EAAJ,GAEEd,CAEA,CAFI2C,CAEJ,CADAA,CACA,CADItC,CACJ,CADQwC,EACR,CAAAA,EAAA,CAAIxC,CAAJ,CAAQL,CAJV,CAMA,OAAQ2C,EAAD,CAAKE,EAAL,CAAUnC,IAAAA,EAAV,CAAsBG,MAAA,EAAAkB,MAAA,CAAeY,CAAf,CAAkBE,EAAlB,CAAoB,CAApB,CAf7B,CARA,CATA,CAF8B,CAqChCjD,MAAAK,OAAA,CAAe6C,QAAQ,CAACjD,CAAD,CAAI,CAEzB,MAAO,CADHkD,CACG;AADKnD,KAAAD,YAAA,CAAkB,CAACE,CAAD,CAAIA,CAAJ,CAAlB,CACL,EAAQkD,CAAA,CAAM,CAAN,CAAR,CAAmBA,CAFD,CAK3BnD,MAAAoD,KAAA,CAAaC,QAAQ,EAAG,CACtB,MAAOtC,KAAA,EAAAE,OAAA,CACKA,MAAA,EADL,CAAAV,MAAA,CAEIA,KAFJ,CAAAe,MAAA,CAGIA,KAHJ,CAAAhC,aAAA,CAIWA,YAJX,CAAAC,aAAA,CAKWA,YALX,CAAAkC,MAAA,CAMIA,KANJ,CADe,CAUxB,OAAOT,QAAA,EArKO,CAwKhBsC,QAASA,SAAQ,CAACtD,KAAD,CAAQ,CACvB,IAAIoD,KAAOpD,KAAAoD,KAEXpD,MAAAyC,QAAA,CAAgBzC,KAAAT,aAChB,QAAOS,KAAAV,aAEPU,MAAAoD,KAAA,CAAaC,QAAQ,EAAG,CACtB,MAAOC,SAAA,CAASF,IAAA,EAAT,CADe,CAIxB,OAAOpD,MAVgB,CAmBzBuD,QAASA,QAAO,CAACtD,CAAD,CAAI,CAClB,MAAO2B,IAAA4B,KAAA,CAASvD,CAAT,CAAY,QAAQ,CAACwD,CAAD,CAAI,CAAE,MAAO,CAACA,CAAV,CAAxB,CADW,CAMpBC,QAASA,gBAAe,EAAG,CAIzB1D,QAASA,MAAK,CAACyD,CAAD,CAAI,CAChB,MAAY,KAAL,EAAAA,CAAA,EAAaA,CAAb,GAAmBA,CAAnB,CACH3C,IAAAA,EADG,CAEHP,KAAA,EAAOtB,OAAA0E,OAAA,CAAe1C,MAAf;AAAuBwC,CAAvB,CAAP,CAAmC,CAAnC,EAAwClD,KAAAI,OAAxC,CAHY,CAJO,IACrBM,OAAS,EADY,CAErBV,MAAQ,EAQZP,MAAAiB,OAAA,CAAee,QAAQ,CAAC/B,CAAD,CAAI,CACzB,MAAIgC,UAAAtB,OAAJ,EACEM,MACOjB,CADEuD,OAAA,CAAQtD,CAAR,CACFD,CAAAA,KAFT,EAISiB,MAAAkB,MAAA,EALgB,CAS3BnC,MAAAO,MAAA,CAAc2B,QAAQ,CAACjC,CAAD,CAAI,CACxB,MAAIgC,UAAAtB,OAAJ,EACEJ,KACOP,CADCmC,KAAAqB,KAAA,CAAWvD,CAAX,CACDD,CAAAA,KAFT,EAISO,KAAA4B,MAAA,EALe,CAS1BnC,MAAA4D,WAAA,CAAmBC,QAAQ,CAACxE,KAAD,CAAQyE,SAAR,CAAmB,CAC5C,MAAO5E,EAAA0E,WAAA,CAAa3C,MAAA,CAAO,CAAP,CAAb,CAAwBlC,QAAAgF,KAAA,CAAc9C,MAAd,CAAxB,CAAwD,IAAT,EAAA5B,KAAA,CAAgB,EAAhB,CAAqBA,KAApE,CAA2EyE,SAA3E,CADqC,CAI9C9D,MAAAoD,KAAA,CAAaC,QAAQ,EAAG,CACtB,MAAOK,gBAAA,EAAAzC,OAAA,CAAyBjB,KAAAiB,OAAA,EAAzB,CAAAV,MAAA,CAA+CP,KAAAO,MAAA,EAA/C,CADe,CAIxB,OAAOP,MApCkB,CA0C3BgE,QAASA,OAAM,CAACC,IAAD,CAAOC,WAAP,CAAoB,CACjC,MAAOlE,SAAc,EAAG,CACtB,IAAImE;AAAID,WAAA,EAEHC,EAAApE,YAAL,GACEoE,CAAApE,YADF,CACkBoE,CAAA9D,OAAA,CAAWN,WAAA,CAAYoE,CAAZ,CAAX,CACZA,CAAAtD,aAAA,CAAiBP,iBAAA,CAAkB6D,CAAlB,CAAjB,CACArD,IAAAA,EAHN,CAMAqD,EAAAF,KAAA,CAASA,IACT,OAAOE,EAVe,CADS,CAenCnE,QAASA,eAAK,CAACiE,IAAD,CAAOjE,KAAP,CAAc,CAC1B,MAAuB,EAAvB,CAAIiC,SAAAtB,OAAJ,EACEyD,MAAA,CAAOH,IAAP,CACO,CADQD,MAAA,CAAOC,IAAP,CAAajE,KAAb,CACR,CAAA,IAFT,EAISjB,QAAAsF,eAAA,CAAwBD,MAAxB,CAAgCH,IAAhC,CAAA,CAAwCG,MAAA,CAAOH,IAAP,CAAxC,CAAuDnD,IAAAA,EALtC,CA6D5BwD,QAASA,kBAAiB,CAACC,MAAD,CAASN,IAAT,CAAeO,KAAf,CAAsB,CAC9C,MAAOrF,IAAAsF,UAAA,CAAcC,WAAA,CAAYT,IAAZ,EAAoB,KAApB,CAA2BO,KAA3B,CAAd,CAAiDD,MAAjD,CADuC,CAgChDG,QAASA,YAAW,CAACT,IAAD,CAAOO,KAAP,CAAc,CAC5BG,IAAAA,CAASxF,GAAA,CAAIyF,MAAA,CAAOX,IAAP,CAAJ,CACb,OAAiB,KAAV,EAACO,KAAD,EAAkBG,IAAlB,EAA4BA,IAAAH,MAA5B,CACHG,IAAAH,MAAA,CAAaA,KAAb,CADG;AAEHG,IAJ4B,CAOlCC,QAASA,OAAM,CAACX,IAAD,CAAO,CACpB,MAAO,aAAP,CAAuBA,IAAAY,YAAA,EAAAC,MAAA,CACd,GADc,CAAAlD,IAAA,CAEhB,QAAQ,CAACuC,CAAD,CAAI,CAAE,MAAOA,EAAA,CAAE,CAAF,CAAAY,YAAA,EAAP,CAA4BZ,CAAAhC,MAAA,CAAQ,CAAR,CAA9B,CAFI,CAAA6C,KAAA,CAGf,EAHe,CADH,CAsFtBT,QAASA,gBAAM,CAACU,OAAD,CAAU,CAEvB,IAFuB,IACnBxE,EAAIwE,OAAAtE,OAAJF,CAAqB,CAArBA,CAAyB,CADN,CACSyE,EAAQC,KAAJ,CAAU1E,CAAV,CADb,CAC2BC,EAAI,CACtD,CAAOA,CAAP,CAAWD,CAAX,CAAA,CAAcyE,CAAA,CAAExE,CAAF,CAAA,CAAO,GAAP,CAAauE,OAAA9C,MAAA,CAAkB,CAAlB,CAAczB,CAAd,CAA2B,CAA3B,CAAqB,EAAEA,CAAvB,CAC3B,OAAOwE,EAHgB,CAMzBE,QAASA,MAAK,CAACnF,CAAD,CAAIoF,CAAJ,CAAO,CACnB,IAAKC,IAAIA,CAAT,GAAcrF,EAAd,CAAiBsF,eAAA,CAAOD,CAAP,CAAUD,CAAA,CAAEpF,CAAA,CAAEqF,CAAF,CAAF,CAAV,CADE,CAQrBC,QAASA,gBAAM,CAACC,IAAD,CAAOD,MAAP,CAAe,CAC5BC,IAAA,CAAOA,IAAP,EAAeA,IAAAX,YAAA,EACf,OAAuB,EAAvB,CAAI5C,SAAAtB,OAAJ,EACE8E,OAAA,CAAQD,IAAR,CACO,CADSD,MACT,CAAA,IAFT,EAISE,OAAA,CAAQD,IAAR,CANmB,CAhhB9B,IAAIE,KAAO,CACTC,YAAa3G,MAAA4G,gBADJ;AAETC,OAAa7G,MAAA8G,WAFJ,CAGTC,OAAa/G,MAAAgH,WAHJ,CAITC,KAAajH,MAAAkH,SAJJ,CAKTC,IAAanH,MAAAoH,QALJ,CAMTC,KAAarH,MAAAsH,SANJ,CAOTC,MAAavH,MAAAwH,UAPJ,CAQTC,KAAazH,MAAA0H,SARJ,CAAX,CAWIC,IAAM,CACRhB,YAAa3G,MAAA4H,eADL,CAERf,OAAa7G,MAAA6H,UAFL,CAGRd,OAAa/G,MAAA8H,UAHL,CAIRb,KAAajH,MAAA+H,QAJL,CAKRZ,IAAanH,MAAAgI,OALL,CAMRX,KAAarH,MAAAiI,QANL,CAORV,MAAavH,MAAAkI,SAPL,CAQRT,KAAazH,MAAAmI,QARL,CAXV,CAuQIvF,IAAMuD,KAAAiC,UAAAxF,IAvQV,CA6QIO,MAAQgD,KAAAiC,UAAAjF,MAoEZ,OAAA,CAAa,EAAb,KAAIiC,QAAS,MAAA,SAAA,CAEMlF,CAAAmI,cAFN,CAAA,MAAA,OAAA,CAKMnI,CAAAoI,YALN,CAAA,MAAA,IAAA,CAMMpI,CAAAqI,SANN,CAAA,MAAA,IAAA;AAOMrI,CAAAsI,SAPN,CAAA,MAAA,KAAA,CAQMtI,CAAAuI,UARN,CAAA,MAAA,OAAA,CASMvI,CAAAwI,YATN,CAAA,MAAA,KAAA,CAUMxI,CAAAyI,UAVN,CAAA,MAAA,IAAA,CAWMzI,CAAA0I,SAXN,CAAA,MAAA,WAAA,CAce1I,CAAA2I,gBAdf,CAAA,MAAA,CAeV,mBAfU,CAAA,CAee3I,CAAA2I,gBAff,CAAA,MAAA,CAgBV,gBAhBU,CAAA,CAgBe3I,CAAA4I,mBAhBf,CAAA,MAAA,CAiBV,gBAjBU,CAAA,CAiBe5I,CAAA6I,mBAjBf,CAAA,MAAA,CAkBV,iBAlBU,CAAA,CAkBe7I,CAAA8I,oBAlBf,CAAA,MAAA,CAmBV,mBAnBU,CAAA,CAmBe9I,CAAA+I,sBAnBf,CAAA,MAAA,CAsBV,kBAtBU,CAAA,CAsBe/I,CAAAgJ,eAtBf,CAAA,MAAA,CAuBV,eAvBU,CAAA,CAuBehJ,CAAAiJ,kBAvBf,CAAA,MAAA,CAwBV,eAxBU,CAAA,CAwBejJ,CAAAkJ,kBAxBf;AAAA,MAAA,CAyBV,gBAzBU,CAAA,CAyBelJ,CAAAmJ,mBAzBf,CAAA,MAAA,CA0BV,kBA1BU,CAAA,CA0BenJ,CAAAoJ,qBA1Bf,CAAA,MAAA,SAAA,CA6BMpJ,CAAAqJ,cA7BN,CAAA,MAAA,SAAA,CA8BMrJ,CAAAsJ,cA9BN,CAAA,MAAA,UAAA,CA+BMtJ,CAAAuJ,eA/BN,CAAA,MAAA,CA/ZMC,aA+ZN,CAAA,CAkCMhF,eAlCN,CAAA,MAAA,QAAA,CAmCMxE,CAAA4C,aAnCN,CAAA,MAAA,KAAA,CAoCMf,IApCN,CAAA,MAAA,MAAA,CA9Eb4H,QAAc,EAAG,CACf,MAAOrF,SAAA,CAASvC,IAAA,EAAAzB,aAAA,CAAoB,CAApB,CAAT,CADQ,CA8EJ,CAAA,MAAT8E,CAAJ,CAwCS1E,YAAT,KAASA,YAAT,GAAgB0E,OAAhB,CACEpE,cAAA,CAAMN,YAAN,CAAW0E,MAAA,CAAO1E,YAAP,CAAX,CAGF,KAAMkJ,WAAa,CAAC,OAAD,CAAU,MAAV,CAAkB,UAAlB,CAA8B,UAA9B,CAAnB,CA+IMnD;AAAU,EAChBL,MAAA,CA5BiByD,CACfC,WAAY,8DADGD,CAEfE,WAAY,0HAFGF,CAGfG,YAAa,0HAHEH,CAIfI,YAAa,0HAJEJ,CAKfK,UAAW,8DALIL;AAMfM,UAAW,0HANIN,CAOfO,OAAQ,kDAPOP,CAQfQ,MAAO,kDARQR,CASfS,OAAQ,0EATOT,CAUfU,QAAS,wDAVMV,CAWfW,QAAS,kDAXMX,CAYfY,KAAM,wDAZSZ;AAafa,KAAM,kDAbSb,CAcfc,KAAM,0EAdSd,CA4BjB,CAAgBtE,eAAhB,CACAa,MAAA,CA3FmBwE,CACjBC,MAAO,oEADUD,CAEjBE,OAAQ,oEAFSF,CAGjBG,MAAO,oEAHUH,CAIjBI,QAAS,oEAJQJ,CAKjBK,QAAS,oEALQL;AAMjBM,KAAM,oEANWN,CAQjBO,UAAW,oEARMP,CASjBQ,WAAY,oEATKR,CAUjBS,UAAW,oEAVMT,CAWjBU,UAAW,oEAXMV,CAYjBW,WAAY,oEAZKX,CAajBY,gBAAiB,oEAbAZ;AAcjBa,UAAW,oEAdMb,CAejBc,UAAW,oEAfMd,CAgBjBe,YAAa,oEAhBIf,CAiBjBgB,kBAAmB,oEAjBFhB,CAkBjBiB,gBAAiB,oEAlBAjB,CAoBjBkB,WAAY,oEApBKlB,CAqBjBmB,eAAgB,oEArBCnB;AAsBjBoB,YAAa,oEAtBIpB,CAuBjBqB,aAAc,oEAvBGrB,CAwBjBsB,QAAS,oEAxBQtB,CAyBjBuB,QAAS,oEAzBQvB,CA0BjBwB,gBAAiB,oEA1BAxB,CA2BjByB,cAAe,oEA3BEzB,CA4BjB0B,eAAgB,oEA5BC1B;AA6BjB2B,gBAAiB,oEA7BA3B,CA8BjB4B,SAAU,oEA9BO5B,CAgCjB6B,QAAS,4LAhCQ7B,CAiCjB8B,MAAO,4LAjCU9B;AAkCjB+B,QAAS,4LAlCQ/B,CAmCjBgC,OAAQ,4LAnCShC,CAqCjBiC,QAAS,4LArCQjC;AAsCjBkC,QAAS,4LAtCQlC,CAwCjBmC,OAAQ,oEAxCSnC,CAyCjBoC,UAAW,wDAzCMpC,CA0CjBqC,MAAO,oEA1CUrC,CA2CjBsC,UAAW,oEA3CMtC,CA6CjBuC,UAAW,oEA7CMvC;AA8CjBwC,WAAY,oEA9CKxC,CA+CjByC,QAAS,oEA/CQzC,CAiDjB0C,aAAc,8DAjDG1C,CAkDjB2C,cAAe,8DAlDE3C,CAmDjB4C,WAAY,wDAnDK5C,CAoDjB6C,YAAa,8DApDI7C,CAqDjB8C,cAAe,8DArDE9C;AAuDjB+C,SAAU,8DAvDO/C,CAwDjBgD,SAAU,8DAxDOhD,CAyDjBiD,UAAW,8DAzDMjD,CA0DjBkD,UAAW,4CA1DMlD,CA2DjBmD,QAAS,wDA3DQnD,CA2FnB,CAAkB,QAAA,CAAA3J,CAAA,CAAK,CAAA,MAAAqE,kBAAA,CAAkBC,eAAA,CAAOtE,CAAP,CAAlB,CAAA,CAAvB,CAYA+M,OAAAC,eAAA,CAAsB1O,OAAtB,CAA+B,eAA/B,CAAgD,CAC9C2O,WAAY,CAAA,CADkC,CAE9CC,IAAKA,QAAS,EAAG,CACf,MAAOjO,EAAAkO,cADQ,CAF6B,CAAhD,CAMAJ,OAAAC,eAAA,CAAsB1O,OAAtB;AAA+B,YAA/B,CAA6C,CAC3C2O,WAAY,CAAA,CAD+B,CAE3CC,IAAKA,QAAS,EAAG,CACf,MAAOjO,EAAA0E,WADQ,CAF0B,CAA7C,CAMArF,QAAA8O,KAAA,CArnBaA,MAsnBb9O,QAAAmK,WAAA,CArnBmBA,aAsnBnBnK,QAAAuB,UAAA,CA/nBkBA,WAgoBlBvB,QAAA+O,SAAA,CA5oBiBA,UA6oBjB/O,QAAAgP,OAAA,CA3oBeA,QA4oBfhP,QAAAiP,IAAA,CA3oBYA,KA4oBZjP,QAAAkP,QAAA,CA7nBgBA,SA8nBhBlP,QAAAmP,MAAA,CA7nBcA,OA8nBdnP,QAAAoP,IAAA,CA7oBYA,KA8oBZpP,QAAAqP,SAAA,CApoBiBA,UAqoBjBrP,QAAAsP,SAAA,CApoBiBA,UAqoBjBtP,QAAAqB,WAAA,CAzoBmBA,YA0oBnBrB,QAAAuP,KAAA,CAhpBaA,MAipBbvP,QAAAwP,OAAA,CAhpBeA,QAipBfxP,QAAAyP,UAAA,CAvoBkBA,WAwoBlBzP,QAAA0P,KAAA,CAhpBaA,MAipBb1P,QAAA2P,IAAA,CAhpBYA,KAipBZ3P,QAAAa,UAAA;AAAoBA,SACpBb,QAAAmG,YAAA,CAAsBA,WACtBnG,QAAA+F,kBAAA,CAA4BA,iBAC5B/F,QAAA4P,iBAAA,CA3LAA,QAAyB,CAACC,YAAD,CAAe7N,KAAf,CAAsB,CAAA,IACzCY,MAAQZ,KAAA,CAAM,CAAN,CADiC,CAEzC8N,KAAOtP,QAAAgF,KAAA,CAAcxD,KAAd,CAAP8N,CAA8BlN,KAClC,OAAO,SAAQ,CAACT,CAAD,CAAI,CAAE,MAAO0N,aAAA,CAAajN,KAAb,CAAqBT,CAArB,CAAyB2N,IAAzB,CAAT,CAH0B,CA4L/C9P,QAAA+P,aAAA,CAxlBAA,QAAqB,CAAC5O,GAAD,CAAM,CACzB,OAAQA,GAAR,EACE,KAtEW6N,QAsEX,CACA,KAtEQC,KAsER,CACA,KAtEQG,KAsER,CACA,KAtESG,MAsET,CACA,KAtEWC,QAsEX,CACA,KArESE,MAqET,CACA,KArEQC,KAqER,CACA,KApEetO,YAoEf,CACE,MAAO,CAAA,CATX,CAWA,MAAO,CAAA,CAZkB,CAylB3BrB,QAAAgQ,WAAA,CA1kBAA,QAAmB,CAAC7O,GAAD,CAAM,CACvB,MAjEiBgJ,aAiEjB,GAAOhJ,GAAP,EApEc+N,SAoEd,GACK/N,GADL,EAlEW2N,MAkEX;AAEK3N,GAFL,EAnEYgO,OAmEZ,GAGKhO,GAJkB,CA2kBzBnB,QAAAiQ,eAAA,CApkBAA,QAAuB,CAAC9O,GAAD,CAAM,CAC3B,MAxEiBgJ,aAwEjB,GAAOhJ,GAAP,EA/EekO,UA+Ef,GACKlO,GADL,EA9EemO,UA8Ef,GAEKnO,GAFL,EA7EgBsO,WA6EhB,GAGKtO,GAJsB,CAqkB7BnB,QAAAsB,YAAA,CAAsBA,WACtBtB,QAAAkQ,gBAAA,CApmBAA,QAAwB,CAAC/O,GAAD,CAAM,CAC5B,MAAOD,aAAA,CAAaC,GAAb,CAAP,EAA4BG,WAAA,CAAYH,GAAZ,CADA,CAqmB9BnB,QAAAmQ,cAAA,CAjmBAA,QAAsB,CAAChP,GAAD,CAAM,CAC1B,MAhEU8N,KAgEV,GAAO9N,GAAP,EAAsBA,GAAAiP,SAAA,CAAa,MAAb,CADI,CAkmB5BpQ,QAAAqQ,WAAA,CAlnBAA,QAAmB,CAAClP,GAAD,CAAM,CACvB,MArCekO,UAqCf,GAAOlO,GADgB,CAmnBzBnB,QAAAkB,aAAA,CAAuBA,YACvBlB,QAAAsQ,WAAA,CAxnBAA,QAAmB,CAACnP,GAAD,CAAM,CACvB,MAvCWuO,MAuCX,GAAOvO,GAAP,EAtCUwO,KAsCV,GAAuBxO,GADA,CAynBzBnB,QAAAuQ,iBAAA;AAhpBAA,QAAyB,CAAC7K,IAAD,CAAO,CAC9B,OAAQA,IAAR,EACE,KAzBaqJ,UAyBb,CACA,KAxBWC,QAwBX,CACA,KAxBQC,KAwBR,CACA,KAxBQG,KAwBR,CACA,KAxBSG,MAwBT,CACA,KAxBWC,QAwBX,CACA,KAvBSE,MAuBT,CACA,KAvBQC,KAuBR,CACA,KAtBetO,YAsBf,CACA,KApBagO,UAoBb,CACA,KApBaC,UAoBb,CACA,KApBcG,WAoBd,CACA,KAnBYP,SAmBZ,CACA,KAnBUC,OAmBV,CACA,KAnBSL,MAmBT,CACA,KAnBe3E,aAmBf,CACE,MAAO,CAAA,CAjBX,CAmBA,MAAO,CAAA,CApBuB,CAipBhCnK,QAAAwQ,qBAAA,CA5LAA,QAA6B,CAACX,YAAD,CAAe/O,KAAf,CAAsB,CAGjD,IAHiD,IAC7C2P,QAAc7J,KAAJ,CAAU9F,KAAV,CADmC,CAE7CoB,EAAIpB,KAAJoB,CAAY,CAFiC,CAGxCC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBrB,KAApB,CAAA,CAA4B2P,OAAA,CAAQtO,CAAR,CAAA,CAAa0N,YAAA,CAAa,EAAE1N,CAAf,CAAmBD,CAAnB,CACzC,OAAOuO,QAJ0C,CA6LnDzQ,QAAAyB,MAAA,CAAgBA,cAChBzB,QAAA0Q,UAAA,CAvLAA,QAAkB,CAACjP,KAAD,CAAQ,CACxB,IAAMI,EAAIJ,KAAAiE,KACJE;KAAAA,CAAInE,KAAAoD,KAAA,EACVe,MAAAF,KAAA,CAAS7D,CACT,OAAO+D,MAJiB,CAwL1B5F,QAAA2Q,cAAA,CAjLAA,QAAsB,CAACC,OAAD,CAAU3O,GAAV,CAAeI,GAAf,CAAoB,CAAA,IACpCwO,MAAQxO,GAARwO,CAAc5O,GADsB,CACdJ,CAE1B,IAAKgP,KAAL,EAAeC,MAAAC,SAAA,CAAgBF,KAAhB,CAAf,CAEO,CACL1O,KAAA,CAAI6O,CAACnP,CAADmP,CAAKJ,OAAAlL,KAALsL,SAAA,CAA2B,GAA3B,CACJnP,EAAA,CAAQ,CAAJ,CAAAM,KAAA,CAAQN,CAAR,CAAYA,CAAA+B,MAAA,CAAQzB,KAAR,CAAY,CAAZ,CAChB,KAAAyD,EAAInE,cAAA,CAAMI,CAAN,CAAA,EAAAa,OAAA,CAAkB,CAACT,GAAD,CAAMI,GAAN,CAAlB,CAAAL,MAAA,CAAoC,CAAC,CAAD,CAAI,CAAJ,CAApC,CACJqI,WAAA4G,QAAA,CAAmB,QAAA,CAAAC,CAAA,CAAK,CAAA,MAAAN,QAAA,CAAQM,CAAR,CAAA,CAAatL,CAAA,CAAEsL,CAAF,CAAA,CAAKN,OAAA,CAAQM,CAAR,CAAA,EAAL,CAAb,CAAkC,CAAlC,CAAxB,CACA,OAAOtL,EALF,CADL,MAAOpF,SAAA2Q,SAAA,CAAkB,EAAlB,CAJ+B,CAkL1CnR,QAAAgH,OAAA,CAAiBA,eACjBhH,QAAAoR,aAAA,CApjBAA,QAAqB,CAACC,IAAD,CAAO3L,IAAP,CAAa,CAC1B7D,IAAAA,CAjHI8N,KAiHC,GAAAjK,IAAA,CAAe0C,GAAf,CAAqBjB,IAChC,OAAO3G,SAAAsF,eAAA,CAAwBjE,IAAxB;AAA2BwP,IAA3B,CAAP,EAA2CxP,IAAA,CAAEwP,IAAF,CAFX,CAsjBlC5C,OAAAC,eAAA,CAAsB1O,OAAtB,CAA+B,YAA/B,CAA6C,CAAE4E,MAAO,CAAA,CAAT,CAA7C,CAtrB4D,CAJ7D,CADgI;",
"sources":["node_modules/vega-scale/build/vega-scale.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_scale$build$vega_scale\"] = function(global,process,require,module,exports,shadow$shims) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('d3-time'), require('d3-array'), require('d3-scale'), require('d3-interpolate')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'd3-time', 'd3-array', 'd3-scale', 'd3-interpolate'], factory) :\n  (global = global || self, factory(global.vega = {}, global.vega, global.d3, global.d3, global.d3, global.d3));\n}(this, function (exports, vegaUtil, d3Time, d3Array, $, $$1) { 'use strict';\n\n  function bandSpace(count, paddingInner, paddingOuter) {\n    var space = count - paddingInner + paddingOuter * 2;\n    return count ? (space > 0 ? space : 1) : 0;\n  }\n\n  const Identity = 'identity';\n\n  const Linear = 'linear';\n  const Log = 'log';\n  const Pow = 'pow';\n  const Sqrt = 'sqrt';\n  const Symlog = 'symlog';\n\n  const Time = 'time';\n  const UTC = 'utc';\n\n  const Sequential = 'sequential';\n  const Diverging = 'diverging';\n\n  const Quantile = 'quantile';\n  const Quantize = 'quantize';\n  const Threshold = 'threshold';\n\n  const Ordinal = 'ordinal';\n  const Point = 'point';\n  const Band = 'band';\n  const BinOrdinal = 'bin-ordinal';\n\n  function isValidScaleType(type) {\n    switch (type) {\n      case Identity:\n      case Linear:\n      case Log:\n      case Pow:\n      case Sqrt:\n      case Symlog:\n      case Time:\n      case UTC:\n      case Sequential:\n      case Quantile:\n      case Quantize:\n      case Threshold:\n      case Ordinal:\n      case Point:\n      case Band:\n      case BinOrdinal:\n        return true;\n    }\n    return false;\n  }\n\n  function isTemporal(key) {\n    return key === Time || key === UTC;\n  }\n\n  function isQuantile(key) {\n    return key === Quantile;\n  }\n\n  function isSequential(key) {\n    return key && key.startsWith(Sequential);\n  }\n\n  function isDiverging(key) {\n    return key && key.startsWith(Diverging);\n  }\n\n  function isInterpolating(key) {\n    return isSequential(key) || isDiverging(key);\n  }\n\n  function isLogarithmic(key) {\n    return key === Log || key.endsWith('-log');\n  }\n\n  function isContinuous(key) {\n    switch (key) {\n      case Linear:\n      case Log:\n      case Pow:\n      case Sqrt:\n      case Symlog:\n      case Time:\n      case UTC:\n      case Sequential:\n        return true;\n    }\n    return false;\n  }\n\n  function isDiscrete(key) {\n    return key === BinOrdinal\n      || key === Ordinal\n      || key === Band\n      || key === Point;\n  }\n\n  function isDiscretizing(key) {\n    return key === BinOrdinal\n      || key === Quantile\n      || key === Quantize\n      || key === Threshold;\n  }\n\n  var time = {\n    millisecond: d3Time.timeMillisecond,\n    second:      d3Time.timeSecond,\n    minute:      d3Time.timeMinute,\n    hour:        d3Time.timeHour,\n    day:         d3Time.timeDay,\n    week:        d3Time.timeWeek,\n    month:       d3Time.timeMonth,\n    year:        d3Time.timeYear\n  };\n\n  var utc = {\n    millisecond: d3Time.utcMillisecond,\n    second:      d3Time.utcSecond,\n    minute:      d3Time.utcMinute,\n    hour:        d3Time.utcHour,\n    day:         d3Time.utcDay,\n    week:        d3Time.utcWeek,\n    month:       d3Time.utcMonth,\n    year:        d3Time.utcYear\n  };\n\n  function timeInterval(unit, type) {\n    const t = (type === UTC ? utc : time);\n    return vegaUtil.hasOwnProperty(t, unit) && t[unit];\n  }\n\n  function invertRange(scale) {\n    return function(_) {\n      var lo = _[0],\n          hi = _[1],\n          t;\n\n      if (hi < lo) {\n        t = lo;\n        lo = hi;\n        hi = t;\n      }\n\n      return [\n        scale.invert(lo),\n        scale.invert(hi)\n      ];\n    }\n  }\n\n  function invertRangeExtent(scale) {\n    return function(_) {\n      var range = scale.range(),\n          lo = _[0],\n          hi = _[1],\n          min = -1, max, t, i, n;\n\n      if (hi < lo) {\n        t = lo;\n        lo = hi;\n        hi = t;\n      }\n\n      for (i=0, n=range.length; i<n; ++i) {\n        if (range[i] >= lo && range[i] <= hi) {\n          if (min < 0) min = i;\n          max = i;\n        }\n      }\n\n      if (min < 0) return undefined;\n\n      lo = scale.invertExtent(range[min]);\n      hi = scale.invertExtent(range[max]);\n\n      return [\n        lo[0] === undefined ? lo[1] : lo[0],\n        hi[1] === undefined ? hi[0] : hi[1]\n      ];\n    }\n  }\n\n  function band() {\n    var scale = $.scaleOrdinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = range[1] < range[0],\n          start = range[reverse - 0],\n          stop = range[1 - reverse],\n          space = bandSpace(n, paddingInner, paddingOuter);\n\n      step = (stop - start) / (space || 1);\n      if (round) {\n        step = Math.floor(step);\n      }\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) {\n        start = Math.round(start);\n        bandwidth = Math.round(bandwidth);\n      }\n      var values = d3Array.range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      if (arguments.length) {\n        domain(_);\n        return rescale();\n      } else {\n        return domain();\n      }\n    };\n\n    scale.range = function(_) {\n      if (arguments.length) {\n        range = [+_[0], +_[1]];\n        return rescale();\n      } else {\n        return range.slice();\n      }\n    };\n\n    scale.rangeRound = function(_) {\n      range = [+_[0], +_[1]];\n      round = true;\n      return rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      if (arguments.length) {\n        round = !!_;\n        return rescale();\n      } else {\n        return round;\n      }\n    };\n\n    scale.padding = function(_) {\n      if (arguments.length) {\n        paddingOuter = Math.max(0, Math.min(1, _));\n        paddingInner = paddingOuter;\n        return rescale();\n      } else {\n        return paddingInner;\n      }\n    };\n\n    scale.paddingInner = function(_) {\n      if (arguments.length) {\n        paddingInner = Math.max(0, Math.min(1, _));\n        return rescale();\n      } else {\n        return paddingInner;\n      }\n    };\n\n    scale.paddingOuter = function(_) {\n      if (arguments.length) {\n        paddingOuter = Math.max(0, Math.min(1, _));\n        return rescale();\n      } else {\n        return paddingOuter;\n      }\n    };\n\n    scale.align = function(_) {\n      if (arguments.length) {\n        align = Math.max(0, Math.min(1, _));\n        return rescale();\n      } else {\n        return align;\n      }\n    };\n\n    scale.invertRange = function(_) {\n      // bail if range has null or undefined values\n      if (_[0] == null || _[1] == null) return;\n\n      var lo = +_[0],\n          hi = +_[1],\n          reverse = range[1] < range[0],\n          values = reverse ? ordinalRange().reverse() : ordinalRange(),\n          n = values.length - 1, a, b, t;\n\n      // bail if either range endpoint is invalid\n      if (lo !== lo || hi !== hi) return;\n\n      // order range inputs, bail if outside of scale range\n      if (hi < lo) {\n        t = lo;\n        lo = hi;\n        hi = t;\n      }\n      if (hi < values[0] || lo > range[1-reverse]) return;\n\n      // binary search to index into scale range\n      a = Math.max(0, d3Array.bisectRight(values, lo) - 1);\n      b = lo===hi ? a : d3Array.bisectRight(values, hi) - 1;\n\n      // increment index a if lo is within padding gap\n      if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n      if (reverse) {\n        // map + swap\n        t = a;\n        a = n - b;\n        b = n - t;\n      }\n      return (a > b) ? undefined : domain().slice(a, b+1);\n    };\n\n    scale.invert = function(_) {\n      var value = scale.invertRange([_, _]);\n      return value ? value[0] : value;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point() {\n    return pointish(band().paddingInner(1));\n  }\n\n  var map = Array.prototype.map;\n\n  function numbers(_) {\n    return map.call(_, function(x) { return +x; });\n  }\n\n  var slice = Array.prototype.slice;\n\n  function scaleBinOrdinal() {\n    var domain = [],\n        range = [];\n\n    function scale(x) {\n      return x == null || x !== x\n        ? undefined\n        : range[(d3Array.bisect(domain, x) - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (arguments.length) {\n        domain = numbers(_);\n        return scale;\n      } else {\n        return domain.slice();\n      }\n    };\n\n    scale.range = function(_) {\n      if (arguments.length) {\n        range = slice.call(_);\n        return scale;\n      } else {\n        return range.slice();\n      }\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return $.tickFormat(domain[0], vegaUtil.peek(domain), count == null ? 10 : count, specifier);\n    };\n\n    scale.copy = function() {\n      return scaleBinOrdinal().domain(scale.domain()).range(scale.range());\n    };\n\n    return scale;\n  }\n\n  /**\n   * Augment scales with their type and needed inverse methods.\n   */\n  function create(type, constructor) {\n    return function scale() {\n      var s = constructor();\n\n      if (!s.invertRange) {\n        s.invertRange = s.invert ? invertRange(s)\n          : s.invertExtent ? invertRangeExtent(s)\n          : undefined;\n      }\n\n      s.type = type;\n      return s;\n    };\n  }\n\n  function scale(type, scale) {\n    if (arguments.length > 1) {\n      scales[type] = create(type, scale);\n      return this;\n    } else {\n      return vegaUtil.hasOwnProperty(scales, type) ? scales[type] : undefined;\n    }\n  }\n\n  var scales = {\n    // identity scale\n    [Identity]:      $.scaleIdentity,\n\n    // continuous scales\n    [Linear]:        $.scaleLinear,\n    [Log]:           $.scaleLog,\n    [Pow]:           $.scalePow,\n    [Sqrt]:          $.scaleSqrt,\n    [Symlog]:        $.scaleSymlog,\n    [Time]:          $.scaleTime,\n    [UTC]:           $.scaleUtc,\n\n    // sequential scales\n    [Sequential]:             $.scaleSequential, // backwards compat\n    [Sequential+'-'+Linear]:  $.scaleSequential,\n    [Sequential+'-'+Log]:     $.scaleSequentialLog,\n    [Sequential+'-'+Pow]:     $.scaleSequentialPow,\n    [Sequential+'-'+Sqrt]:    $.scaleSequentialSqrt,\n    [Sequential+'-'+Symlog]:  $.scaleSequentialSymlog,\n\n    // diverging scales\n    [Diverging+'-'+Linear]:   $.scaleDiverging,\n    [Diverging+'-'+Log]:      $.scaleDivergingLog,\n    [Diverging+'-'+Pow]:      $.scaleDivergingPow,\n    [Diverging+'-'+Sqrt]:     $.scaleDivergingSqrt,\n    [Diverging+'-'+Symlog]:   $.scaleDivergingSymlog,\n\n    // discretizing scales\n    [Quantile]:      $.scaleQuantile,\n    [Quantize]:      $.scaleQuantize,\n    [Threshold]:     $.scaleThreshold,\n\n    // discrete scales\n    [BinOrdinal]:    scaleBinOrdinal,\n    [Ordinal]:       $.scaleOrdinal,\n    [Band]:          band,\n    [Point]:         point\n  };\n\n  for (var key in scales) {\n    scale(key, scales[key]);\n  }\n\n  const scaleProps = ['clamp', 'base', 'constant', 'exponent'];\n\n  function interpolateRange(interpolator, range) {\n    var start = range[0],\n        span = vegaUtil.peek(range) - start;\n    return function(i) { return interpolator(start + i * span); };\n  }\n\n  function interpolateColors(colors, type, gamma) {\n    return $$1.piecewise(interpolate(type || 'rgb', gamma), colors);\n  }\n\n  function quantizeInterpolator(interpolator, count) {\n    var samples = new Array(count),\n        n = count + 1;\n    for (var i = 0; i < count;) samples[i] = interpolator(++i / n);\n    return samples;\n  }\n\n  function scaleCopy(scale) {\n    const t = scale.type,\n          s = scale.copy();\n    s.type = t;\n    return s;\n  }\n\n  function scaleFraction(scale$1, min, max) {\n    var delta = max - min, i, t, s;\n\n    if (!delta || !Number.isFinite(delta)) {\n      return vegaUtil.constant(0.5);\n    } else {\n      i = (t = scale$1.type).indexOf('-');\n      t = i < 0 ? t : t.slice(i + 1);\n      s = scale(t)().domain([min, max]).range([0, 1]);\n      scaleProps.forEach(m => scale$1[m] ? s[m](scale$1[m]()) : 0);\n      return s;\n    }\n  }\n\n  function interpolate(type, gamma) {\n    var interp = $$1[method(type)];\n    return (gamma != null && interp && interp.gamma)\n      ? interp.gamma(gamma)\n      : interp;\n  }\n\n  function method(type) {\n    return 'interpolate' + type.toLowerCase()\n      .split('-')\n      .map(function(s) { return s[0].toUpperCase() + s.slice(1); })\n      .join('');\n  }\n\n  const continuous = {\n    blues: 'cfe1f2bed8eca8cee58fc1de74b2d75ba3cf4592c63181bd206fb2125ca40a4a90',\n    greens: 'd3eecdc0e6baabdda594d3917bc77d60ba6c46ab5e329a512089430e7735036429',\n    greys: 'e2e2e2d4d4d4c4c4c4b1b1b19d9d9d8888887575756262624d4d4d3535351e1e1e',\n    oranges: 'fdd8b3fdc998fdb87bfda55efc9244f87f2cf06b18e4580bd14904b93d029f3303',\n    purples: 'e2e1efd4d4e8c4c5e0b4b3d6a3a0cc928ec3827cb97566ae684ea25c3696501f8c',\n    reds: 'fdc9b4fcb49afc9e80fc8767fa7051f6573fec3f2fdc2a25c81b1db21218970b13',\n\n    blueGreen: 'd5efedc1e8e0a7ddd18bd2be70c6a958ba9144ad77319c5d2089460e7736036429',\n    bluePurple: 'ccddecbad0e4a8c2dd9ab0d4919cc98d85be8b6db28a55a6873c99822287730f71',\n    greenBlue: 'd3eecec5e8c3b1e1bb9bd8bb82cec269c2ca51b2cd3c9fc7288abd1675b10b60a1',\n    orangeRed: 'fddcaffdcf9bfdc18afdad77fb9562f67d53ee6545e24932d32d1ebf130da70403',\n    purpleBlue: 'dbdaebc8cee4b1c3de97b7d87bacd15b9fc93a90c01e7fb70b70ab056199045281',\n    purpleBlueGreen: 'dbd8eac8cee4b0c3de93b7d872acd1549fc83892bb1c88a3097f8702736b016353',\n    purpleRed: 'dcc9e2d3b3d7ce9eccd186c0da6bb2e14da0e23189d91e6fc61159ab07498f023a',\n    redPurple: 'fccfccfcbec0faa9b8f98faff571a5ec539ddb3695c41b8aa908808d0179700174',\n    yellowGreen: 'e4f4acd1eca0b9e2949ed68880c97c62bb6e47aa5e3297502083440e723b036034',\n    yellowOrangeBrown: 'feeaa1fedd84fecc63feb746fca031f68921eb7215db5e0bc54c05ab3d038f3204',\n    yellowOrangeRed: 'fee087fed16ffebd59fea849fd903efc7335f9522bee3423de1b20ca0b22af0225',\n\n    blueOrange: '134b852f78b35da2cb9dcae1d2e5eff2f0ebfce0bafbbf74e8932fc5690d994a07',\n    brownBlueGreen: '704108a0651ac79548e3c78af3e6c6eef1eac9e9e48ed1c74da79e187a72025147',\n    purpleGreen: '5b1667834792a67fb6c9aed3e6d6e8eff0efd9efd5aedda971bb75368e490e5e29',\n    purpleOrange: '4114696647968f83b7b9b4d6dadbebf3eeeafce0bafbbf74e8932fc5690d994a07',\n    redBlue: '8c0d25bf363adf745ef4ae91fbdbc9f2efeed2e5ef9dcae15da2cb2f78b3134b85',\n    redGrey: '8c0d25bf363adf745ef4ae91fcdccbfaf4f1e2e2e2c0c0c0969696646464343434',\n    yellowGreenBlue: 'eff9bddbf1b4bde5b594d5b969c5be45b4c22c9ec02182b82163aa23479c1c3185',\n    redYellowBlue: 'a50026d4322cf16e43fcac64fedd90faf8c1dcf1ecabd6e875abd04a74b4313695',\n    redYellowGreen: 'a50026d4322cf16e43fcac63fedd8df9f7aed7ee8ea4d86e64bc6122964f006837',\n    pinkYellowGreen: '8e0152c0267edd72adf0b3d6faddedf5f3efe1f2cab6de8780bb474f9125276419',\n    spectral: '9e0142d13c4bf0704afcac63fedd8dfbf8b0e0f3a1a9dda269bda94288b55e4fa2',\n\n    viridis: '440154470e61481a6c482575472f7d443a834144873d4e8a39568c35608d31688e2d708e2a788e27818e23888e21918d1f988b1fa08822a8842ab07f35b77943bf7154c56866cc5d7ad1518fd744a5db36bcdf27d2e21be9e51afde725',\n    magma: '0000040404130b0924150e3720114b2c11603b0f704a107957157e651a80721f817f24828c29819a2e80a8327db6377ac43c75d1426fde4968e95462f1605df76f5cfa7f5efc8f65fe9f6dfeaf78febf84fece91fddea0fcedaffcfdbf',\n    inferno: '0000040403130c0826170c3b240c4f330a5f420a68500d6c5d126e6b176e781c6d86216b932667a12b62ae305cbb3755c73e4cd24644dd513ae65c30ed6925f3771af8850ffb9506fca50afcb519fac62df6d645f2e661f3f484fcffa4',\n    plasma: '0d088723069033059742039d5002a25d01a66a00a87801a88405a7900da49c179ea72198b12a90ba3488c33d80cb4779d35171da5a69e16462e76e5bed7953f2834cf68f44fa9a3dfca636fdb32ffec029fcce25f9dc24f5ea27f0f921',\n\n    rainbow: '6e40aa883eb1a43db3bf3cafd83fa4ee4395fe4b83ff576eff6659ff7847ff8c38f3a130e2b72fcfcc36bee044aff05b8ff4576ff65b52f6673af27828ea8d1ddfa319d0b81cbecb23abd82f96e03d82e14c6edb5a5dd0664dbf6e40aa',\n    sinebow: 'ff4040fc582af47218e78d0bd5a703bfbf00a7d5038de70b72f41858fc2a40ff402afc5818f4720be78d03d5a700bfbf03a7d50b8de71872f42a58fc4040ff582afc7218f48d0be7a703d5bf00bfd503a7e70b8df41872fc2a58ff4040',\n\n    browns: 'eedbbdecca96e9b97ae4a865dc9856d18954c7784cc0673fb85536ad44339f3632',\n    tealBlues: 'bce4d89dd3d181c3cb65b3c245a2b9368fae347da0306a932c5985',\n    teals: 'bbdfdfa2d4d58ac9c975bcbb61b0af4da5a43799982b8b8c1e7f7f127273006667',\n    warmGreys: 'dcd4d0cec5c1c0b8b4b3aaa7a59c9998908c8b827f7e7673726866665c5a59504e',\n\n    goldGreen: 'f4d166d5ca60b6c35c98bb597cb25760a6564b9c533f8f4f33834a257740146c36',\n    goldOrange: 'f4d166f8be5cf8aa4cf5983bf3852aef701be2621fd65322c54923b142239e3a26',\n    goldRed: 'f4d166f6be59f9aa51fc964ef6834bee734ae56249db5247cf4244c43141b71d3e',\n\n    lightGreyRed: 'efe9e6e1dad7d5cbc8c8bdb9bbaea9cd967ddc7b43e15f19df4011dc000b',\n    lightGreyTeal: 'e4eaead6dcddc8ced2b7c2c7a6b4bc64b0bf22a6c32295c11f85be1876bc',\n    lightMulti: 'e0f1f2c4e9d0b0de9fd0e181f6e072f6c053f3993ef77440ef4a3c',\n    lightOrange: 'f2e7daf7d5baf9c499fab184fa9c73f68967ef7860e8645bde515bd43d5b',\n    lightTealBlue: 'e3e9e0c0dccf9aceca7abfc859afc0389fb9328dad2f7ca0276b95255988',\n\n    darkBlue: '3232322d46681a5c930074af008cbf05a7ce25c0dd38daed50f3faffffff',\n    darkGold: '3c3c3c584b37725e348c7631ae8b2bcfa424ecc31ef9de30fff184ffffff',\n    darkGreen: '3a3a3a215748006f4d048942489e4276b340a6c63dd2d836ffeb2cffffaa',\n    darkMulti: '3737371f5287197d8c29a86995ce3fffe800ffffff',\n    darkRed: '3434347036339e3c38cc4037e75d1eec8620eeab29f0ce32ffeb2c'\n  };\n\n  const discrete = {\n    category10: '1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf',\n    category20: '1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5',\n    category20b: '393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6',\n    category20c: '3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9',\n    tableau10: '4c78a8f58518e4575672b7b254a24beeca3bb279a2ff9da69d755dbab0ac',\n    tableau20: '4c78a89ecae9f58518ffbf7954a24b88d27ab79a20f2cf5b43989483bcb6e45756ff9d9879706ebab0acd67195fcbfd2b279a2d6a5c99e765fd8b5a5',\n    accent: '7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666',\n    dark2: '1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666',\n    paired: 'a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928',\n    pastel1: 'fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2',\n    pastel2: 'b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc',\n    set1: 'e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999',\n    set2: '66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3',\n    set3: '8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f'\n  };\n\n  function colors(palette) {\n    var n = palette.length / 6 | 0, c = new Array(n), i = 0;\n    while (i < n) c[i] = '#' + palette.slice(i * 6, ++i * 6);\n    return c;\n  }\n\n  function apply(_, f) {\n    for (let k in _) scheme(k, f(_[k]));\n  }\n\n  const schemes = {};\n  apply(discrete, colors);\n  apply(continuous, _ => interpolateColors(colors(_)));\n\n  function scheme(name, scheme) {\n    name = name && name.toLowerCase();\n    if (arguments.length > 1) {\n      schemes[name] = scheme;\n      return this;\n    } else {\n      return schemes[name];\n    }\n  }\n\n  Object.defineProperty(exports, 'scaleImplicit', {\n    enumerable: true,\n    get: function () {\n      return $.scaleImplicit;\n    }\n  });\n  Object.defineProperty(exports, 'tickFormat', {\n    enumerable: true,\n    get: function () {\n      return $.tickFormat;\n    }\n  });\n  exports.Band = Band;\n  exports.BinOrdinal = BinOrdinal;\n  exports.Diverging = Diverging;\n  exports.Identity = Identity;\n  exports.Linear = Linear;\n  exports.Log = Log;\n  exports.Ordinal = Ordinal;\n  exports.Point = Point;\n  exports.Pow = Pow;\n  exports.Quantile = Quantile;\n  exports.Quantize = Quantize;\n  exports.Sequential = Sequential;\n  exports.Sqrt = Sqrt;\n  exports.Symlog = Symlog;\n  exports.Threshold = Threshold;\n  exports.Time = Time;\n  exports.UTC = UTC;\n  exports.bandSpace = bandSpace;\n  exports.interpolate = interpolate;\n  exports.interpolateColors = interpolateColors;\n  exports.interpolateRange = interpolateRange;\n  exports.isContinuous = isContinuous;\n  exports.isDiscrete = isDiscrete;\n  exports.isDiscretizing = isDiscretizing;\n  exports.isDiverging = isDiverging;\n  exports.isInterpolating = isInterpolating;\n  exports.isLogarithmic = isLogarithmic;\n  exports.isQuantile = isQuantile;\n  exports.isSequential = isSequential;\n  exports.isTemporal = isTemporal;\n  exports.isValidScaleType = isValidScaleType;\n  exports.quantizeInterpolator = quantizeInterpolator;\n  exports.scale = scale;\n  exports.scaleCopy = scaleCopy;\n  exports.scaleFraction = scaleFraction;\n  exports.scheme = scheme;\n  exports.timeInterval = timeInterval;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","factory","define","amd","self","vega","d3","vegaUtil","d3Time","d3Array","$","$$1","bandSpace","count","paddingInner","paddingOuter","space","isSequential","key","startsWith","Sequential","isDiverging","Diverging","invertRange","scale","_","lo","hi","t","invert","invertRangeExtent","range","min","n","i","length","max","invertExtent","undefined","band","rescale","domain","reverse","start","stop","step","round","Math","floor","align","bandwidth","values","map","ordinalRange","scaleOrdinal","unknown","scale.domain","arguments","scale.range","slice","rangeRound","scale.rangeRound","scale.bandwidth","scale.step","scale.round","padding","scale.padding","scale.paddingInner","scale.paddingOuter","scale.align","scale.invertRange","a","bisectRight","b","scale.invert","value","copy","scale.copy","pointish","numbers","call","x","scaleBinOrdinal","bisect","tickFormat","scale.tickFormat","specifier","peek","create","type","constructor","s","scales","hasOwnProperty","interpolateColors","colors","gamma","piecewise","interpolate","interp","method","toLowerCase","split","toUpperCase","join","palette","c","Array","apply","f","k","scheme","name","schemes","time","millisecond","timeMillisecond","second","timeSecond","minute","timeMinute","hour","timeHour","day","timeDay","week","timeWeek","month","timeMonth","year","timeYear","utc","utcMillisecond","utcSecond","utcMinute","utcHour","utcDay","utcWeek","utcMonth","utcYear","prototype","scaleIdentity","scaleLinear","scaleLog","scalePow","scaleSqrt","scaleSymlog","scaleTime","scaleUtc","scaleSequential","scaleSequentialLog","scaleSequentialPow","scaleSequentialSqrt","scaleSequentialSymlog","scaleDiverging","scaleDivergingLog","scaleDivergingPow","scaleDivergingSqrt","scaleDivergingSymlog","scaleQuantile","scaleQuantize","scaleThreshold","BinOrdinal","point","scaleProps","discrete","category10","category20","category20b","category20c","tableau10","tableau20","accent","dark2","paired","pastel1","pastel2","set1","set2","set3","continuous","blues","greens","greys","oranges","purples","reds","blueGreen","bluePurple","greenBlue","orangeRed","purpleBlue","purpleBlueGreen","purpleRed","redPurple","yellowGreen","yellowOrangeBrown","yellowOrangeRed","blueOrange","brownBlueGreen","purpleGreen","purpleOrange","redBlue","redGrey","yellowGreenBlue","redYellowBlue","redYellowGreen","pinkYellowGreen","spectral","viridis","magma","inferno","plasma","rainbow","sinebow","browns","tealBlues","teals","warmGreys","goldGreen","goldOrange","goldRed","lightGreyRed","lightGreyTeal","lightMulti","lightOrange","lightTealBlue","darkBlue","darkGold","darkGreen","darkMulti","darkRed","Object","defineProperty","enumerable","get","scaleImplicit","Band","Identity","Linear","Log","Ordinal","Point","Pow","Quantile","Quantize","Sqrt","Symlog","Threshold","Time","UTC","interpolateRange","interpolator","span","isContinuous","isDiscrete","isDiscretizing","isInterpolating","isLogarithmic","endsWith","isQuantile","isTemporal","isValidScaleType","quantizeInterpolator","samples","scaleCopy","scaleFraction","scale$1","delta","Number","isFinite","indexOf","forEach","m","constant","timeInterval","unit"]
}
