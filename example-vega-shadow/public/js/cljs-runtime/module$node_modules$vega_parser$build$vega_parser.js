shadow$provide.module$node_modules$vega_parser$build$vega_parser=function(global$jscomp$0,process,require,module,exports$jscomp$0,shadow$shims){(function(global,factory){"object"===typeof exports$jscomp$0&&"undefined"!==typeof module?factory(exports$jscomp$0,require("module$node_modules$vega_util$build$vega_util"),require("module$node_modules$vega_expression$build$vega_expression"),require("module$node_modules$vega_functions$build$vega_functions"),require("module$node_modules$vega_event_selector$build$vega_event_selector"),
require("module$node_modules$vega_scale$build$vega_scale"),require("module$node_modules$vega_dataflow$build$vega_dataflow")):"function"===typeof define&&define.amd?define("exports vega-util vega-expression vega-functions vega-event-selector vega-scale vega-dataflow".split(" "),factory):(global=global||self,factory(global.vega={},global.vega,global.vega,global.vega,global.vega,global.vega,global.vega))})(this,function(exports,vegaUtil,vegaExpression,vegaFunctions,vegaEventSelector,vegaScale,vegaDataflow){function parseAutosize(spec,
config){spec=spec||config.autosize;return vegaUtil.isObject(spec)?spec:{type:spec||"pad"}}function parsePadding(spec,config){spec=spec||config.padding;vegaUtil.isObject(spec)?spec={top:+spec.top||0,bottom:+spec.bottom||0,left:+spec.left||0,right:+spec.right||0}:(spec=+spec||0,spec={top:spec,bottom:spec,left:spec,right:spec});return spec}function outerError(prefix,name){vegaUtil.error(prefix+' for "outer" push: '+vegaUtil.stringValue(name))}function parseSignal(signal,scope){var name=signal.name;if("outer"===
signal.push)scope.signals[name]||outerError("No prior signal definition",name),OUTER_INVALID.forEach(function(prop){void 0!==signal[prop]&&outerError("Invalid property ",prop)});else{var op=scope.addSignal(name,signal.value);!1===signal.react&&(op.react=!1);signal.bind&&scope.addBinding(name,signal.bind)}}function parseExpression(expr,scope,preamble){var params={};try{expr=vegaUtil.isString(expr)?expr:vegaUtil.stringValue(expr)+"";var ast=vegaExpression.parse(expr)}catch(err){vegaUtil.error("Expression parse error: "+
expr)}ast.visit(function(node){if(node.type===vegaExpression.CallExpression){var name=node.callee.name,visit=vegaFunctions.codegenParams.visitors[name];visit&&visit(name,node.arguments,scope,params)}});expr=vegaFunctions.codeGenerator(ast);expr.globals.forEach(function(name){var signalName=vegaFunctions.SignalPrefix+name;!vegaUtil.hasOwnProperty(params,signalName)&&scope.getSignal(name)&&(params[signalName]=scope.signalRef(name))});return{$expr:preamble?preamble+"return("+expr.code+");":expr.code,
$fields:expr.fields,$params:params}}function Entry(type,value,params,parent){this.id=-1;this.type=type;this.value=value;this.params=params;parent&&(this.parent=parent)}function ref$jscomp$0(op){var ref={$ref:op.id};0>op.id&&(op.refs=op.refs||[]).push(ref);return ref}function fieldRef(field,name){return name?{$field:field,$name:name}:{$field:field}}function keyRef(fields,flat){fields={$key:fields};flat&&(fields.$flat=!0);return fields}function aggrField(op,field){return(op&&op.signal?"$"+op.signal:
op||"")+(op&&field?"_":"")+(field&&field.signal?"$"+field.signal:field||"")}function hasSignal(_){if(_&&_.signal)return!0;if(vegaUtil.isObject(_))for(var key in _)if(hasSignal(_[key]))return!0;return!1}function value$jscomp$0(specValue,defaultValue){return null!=specValue?specValue:defaultValue}function deref(v){return v&&v.signal||v}function parseStream(stream,scope){return(stream.merge?mergeStream:stream.stream?nestedStream:stream.type?eventStream:vegaUtil.error("Invalid stream specification: "+
vegaUtil.stringValue(stream)))(stream,scope)}function eventSource(source){return"scope"===source?"view":source||"view"}function mergeStream(stream,scope){var list=stream.merge.map(function(s){return parseStream(s,scope)});stream=streamParameters({merge:list},stream,scope);return scope.addStream(stream).id}function nestedStream(stream,scope){var id=parseStream(stream.stream,scope);stream=streamParameters({stream:id},stream,scope);return scope.addStream(stream).id}function eventStream(stream,scope){if("timer"===
stream.type){var id=scope.event("timer",stream.throttle);stream={between:stream.between,filter:stream.filter}}else id=scope.event(eventSource(stream.source),stream.type);stream=streamParameters({stream:id},stream,scope);return 1===Object.keys(stream).length?id:scope.addStream(stream).id}function streamParameters(entry,stream,scope){var param=stream.between;param&&(2!==param.length&&vegaUtil.error('Stream "between" parameter must have 2 entries: '+vegaUtil.stringValue(stream)),entry.between=[parseStream(param[0],
scope),parseStream(param[1],scope)]);param=stream.filter?[].concat(stream.filter):[];(stream.marktype||stream.markname||stream.markrole)&&param.push(filterMark(stream.marktype,stream.markname,stream.markrole));"scope"===stream.source&&param.push("inScope(event.item)");param.length&&(entry.filter=parseExpression("("+param.join(")\x26\x26(")+")").$expr);null!=(param=stream.throttle)&&(entry.throttle=+param);null!=(param=stream.debounce)&&(entry.debounce=+param);stream.consume&&(entry.consume=!0);return entry}
function filterMark(type,name,role){return"event.item"+(type&&"*"!==type?"\x26\x26event.item.mark.marktype\x3d\x3d\x3d'"+type+"'":"")+(role?"\x26\x26event.item.mark.role\x3d\x3d\x3d'"+role+"'":"")+(name?"\x26\x26event.item.mark.name\x3d\x3d\x3d'"+name+"'":"")}function parseUpdate(spec,scope,target){var events=spec.events,update=spec.update,encode=spec.encode,sources=[],entry={target:target};events||vegaUtil.error("Signal update missing events specification.");vegaUtil.isString(events)&&(events=vegaEventSelector.selector(events,
scope.isSubscope()?"scope":"view"));events=vegaUtil.array(events).filter(function(s){return s.signal||s.scale?(sources.push(s),0):1});1<sources.length&&(sources=[mergeSources(sources)]);events.length&&sources.push(1<events.length?{merge:events}:events[0]);null!=encode&&(update&&vegaUtil.error("Signal encode and update are mutually exclusive."),update="encode(item(),"+vegaUtil.stringValue(encode)+")");entry.update=vegaUtil.isString(update)?parseExpression(update,scope,"var datum\x3devent.item\x26\x26event.item.datum;"):
null!=update.expr?parseExpression(update.expr,scope,"var datum\x3devent.item\x26\x26event.item.datum;"):null!=update.value?update.value:null!=update.signal?{$expr:"_.value",$params:{value:scope.signalRef(update.signal)}}:vegaUtil.error("Invalid signal update specification.");spec.force&&(entry.options={force:!0});sources.forEach(function(source){scope.addUpdate(vegaUtil.extend(streamSource(source,scope),entry))})}function streamSource(stream,scope){return{source:stream.signal?scope.signalRef(stream.signal):
stream.scale?scope.scaleRef(stream.scale):parseStream(stream,scope)}}function mergeSources(sources){return{signal:"["+sources.map(function(s){return s.scale?'scale("'+s.scale+'")':s.signal})+"]"}}function parseSignalUpdates(signal,scope){var op=scope.getSignal(signal.name),expr=signal.update;signal.init&&(expr?vegaUtil.error("Signals can not include both init and update expressions."):(expr=signal.init,op.initonly=!0));expr&&(expr=parseExpression(expr,scope),op.update=expr.$expr,op.params=expr.$params);
signal.on&&signal.on.forEach(function(_){parseUpdate(_,scope,op.id)})}function transform$jscomp$0(name){return function(params,value,parent){return new Entry(name,value,params||void 0,parent)}}function parseLiteral(v,scope){return vegaUtil.isObject(v)?v.signal?scope.signalRef(v.signal):vegaUtil.error("Unsupported object: "+vegaUtil.stringValue(v)):v}function parseArray(v$jscomp$0,scope){return v$jscomp$0.signal?scope.signalRef(v$jscomp$0.signal):v$jscomp$0.map(function(v){return parseLiteral(v,scope)})}
function dataLookupError(name){vegaUtil.error("Can not find data set: "+vegaUtil.stringValue(name))}function parseScaleDomain(domain,spec,scope){if(domain)return domain.signal?scope.signalRef(domain.signal):(vegaUtil.isArray(domain)?explicitDomain:domain.fields?multipleDomain:singularDomain)(domain,spec,scope);null==spec.domainMin&&null==spec.domainMax||vegaUtil.error("No scale domain defined for domainMin/domainMax to override.")}function explicitDomain(domain,spec,scope){return domain.map(function(v){return parseLiteral(v,
scope)})}function singularDomain(domain,spec,scope){var data=scope.getData(domain.data);data||dataLookupError(domain.data);return vegaScale.isDiscrete(spec.type)?data.valuesRef(scope,domain.field,parseSort(domain.sort,!1)):vegaScale.isQuantile(spec.type)?data.domainRef(scope,domain.field):data.extentRef(scope,domain.field)}function multipleDomain(domain,spec,scope){var data$jscomp$0=domain.data,fields=domain.fields.reduce(function(dom,d){if(vegaUtil.isString(d))d={data:data$jscomp$0,field:d};else if(vegaUtil.isArray(d)||
d.signal){var data=d;d="_:vega:_"+FIELD_REF_ID++;var coll=Collect({});vegaUtil.isArray(data)?coll.value={$ingest:data}:data.signal&&(data="setdata("+vegaUtil.stringValue(d)+","+data.signal+")",coll.params.input=scope.signalRef(data));scope.addDataPipeline(d,[coll,Sieve({})]);d={data:d,field:"data"}}dom.push(d);return dom},[]);return(vegaScale.isDiscrete(spec.type)?ordinalMultipleDomain:vegaScale.isQuantile(spec.type)?quantileMultipleDomain:numericMultipleDomain)(domain,scope,fields)}function ordinalMultipleDomain(domain,
scope,fields){var sort=parseSort(domain.sort,!0);domain=fields.map(function(f){var data=scope.getData(f.data);data||dataLookupError(f.data);return data.countsRef(scope,f.field,sort)});domain={groupby:keyFieldRef,pulse:domain};if(sort){fields=sort.op||"count";var v=sort.field?aggrField(fields,sort.field):"count";domain.ops=[MULTIDOMAIN_SORT_OPS[fields]];domain.fields=[scope.fieldRef(v)];domain.as=[v]}fields=scope.add(Aggregate(domain));domain=scope.add(Collect({pulse:ref$jscomp$0(fields)}));v=scope.add(Values({field:keyFieldRef,
sort:scope.sortRef(sort),pulse:ref$jscomp$0(domain)}));return ref$jscomp$0(v)}function parseSort(sort,multidomain){sort&&(sort.field||sort.op?sort.field||"count"===sort.op?multidomain&&sort.field&&sort.op&&!MULTIDOMAIN_SORT_OPS[sort.op]&&vegaUtil.error("Multiple domain scales can not be sorted using "+sort.op):vegaUtil.error("No field provided for sort aggregate op: "+sort.op):vegaUtil.isObject(sort)?sort.field="key":sort={field:"key"});return sort}function quantileMultipleDomain(domain,scope,fields){domain=
fields.map(function(f){var data=scope.getData(f.data);data||dataLookupError(f.data);return data.domainRef(scope,f.field)});return ref$jscomp$0(scope.add(MultiValues({values:domain})))}function numericMultipleDomain(domain,scope,fields){domain=fields.map(function(f){var data=scope.getData(f.data);data||dataLookupError(f.data);return data.extentRef(scope,f.field)});return ref$jscomp$0(scope.add(MultiExtent({extents:domain})))}function parseScaleRange(spec,scope,params){var range=spec.range,config=scope.config.range;
if(range.signal)return scope.signalRef(range.signal);if(vegaUtil.isString(range)){if(config&&vegaUtil.hasOwnProperty(config,range))return spec=vegaUtil.extend({},spec,{range:config[range]}),parseScaleRange(spec,scope,params);"width"===range?range=[0,{signal:"width"}]:"height"===range?range=vegaScale.isDiscrete(spec.type)?[0,{signal:"height"}]:[{signal:"height"},0]:vegaUtil.error("Unrecognized scale range value: "+vegaUtil.stringValue(range))}else{if(range.scheme){params.scheme=vegaUtil.isArray(range.scheme)?
parseArray(range.scheme,scope):parseLiteral(range.scheme,scope);range.extent&&(params.schemeExtent=parseArray(range.extent,scope));range.count&&(params.schemeCount=parseLiteral(range.count,scope));return}if(range.step){params.rangeStep=parseLiteral(range.step,scope);return}if(vegaScale.isDiscrete(spec.type)&&!vegaUtil.isArray(range))return parseScaleDomain(range,spec,scope);vegaUtil.isArray(range)||vegaUtil.error("Unsupported range type: "+vegaUtil.stringValue(range))}return range.map(function(v){return(vegaUtil.isArray(v)?
parseArray:parseLiteral)(v,scope)})}function parseParameter(_$jscomp$0,name,scope){return vegaUtil.isArray(_$jscomp$0)?_$jscomp$0.map(function(_){return parseParameter(_,name,scope)}):vegaUtil.isObject(_$jscomp$0)?_$jscomp$0.signal?scope.signalRef(_$jscomp$0.signal):"fit"===name?_$jscomp$0:vegaUtil.error("Unsupported parameter object: "+vegaUtil.stringValue(_$jscomp$0)):_$jscomp$0}function color$jscomp$0(enc,scope,params,fields){function color(type,x,y,z){x=entry$1(null,x,scope,params,fields);y=entry$1(null,
y,scope,params,fields);z=entry$1(null,z,scope,params,fields);return"this."+type+"("+[x,y,z].join()+").toString()"}return enc.c?color("hcl",enc.h,enc.c,enc.l):enc.h||enc.s?color("hsl",enc.h,enc.s,enc.l):enc.l||enc.a?color("lab",enc.l,enc.a,enc.b):enc.r||enc.g||enc.b?color("rgb",enc.r,enc.g,enc.b):null}function expression(code,scope,params,fields){code=parseExpression(code,scope);code.$fields.forEach(function(name){fields[name]=1});vegaUtil.extend(params,code.$params);return code.$expr}function resolve(ref,
scope,params,fields){if(ref.signal){var object="datum";var level=expression(ref.signal,scope,params,fields)}else if(ref.group||ref.parent){level=Math.max(1,ref.level||1);for(object="item";0<level--;)object+=".mark.group";ref.parent?(level=ref.parent,object+=".datum"):level=ref.group}else ref.datum?(object="datum",level=ref.datum):vegaUtil.error("Invalid field reference: "+vegaUtil.stringValue(ref));ref.signal||(vegaUtil.isString(level)?(fields[level]=1,level=vegaUtil.splitAccessPath(level).map(vegaUtil.stringValue).join("][")):
level=resolve(level,scope,params,fields));return object+"["+level+"]"}function getScale(name,scope,params,fields){if(vegaUtil.isString(name)){var scaleName=vegaFunctions.ScalePrefix+name;vegaUtil.hasOwnProperty(params,scaleName)||(params[scaleName]=scope.scaleRef(name));scaleName=vegaUtil.stringValue(scaleName)}else{for(scaleName in scope.scales)params[vegaFunctions.ScalePrefix+scaleName]=scope.scaleRef(scaleName);scaleName=vegaUtil.stringValue(vegaFunctions.ScalePrefix)+"+";name=name.signal?"("+
expression(name.signal,scope,params,fields)+")":resolve(vegaUtil.isObject(name)?name:{datum:name},scope,params,fields);scaleName+=name}return"_["+scaleName+"]"}function property$jscomp$0(property,scope,params,fields){return vegaUtil.isObject(property)?"("+entry$1(null,property,scope,params,fields)+")":property}function entry$1(channel,enc,scope,params,fields){if(null!=enc.gradient)return"this.gradient("+getScale(enc.gradient,scope,params,fields)+","+vegaUtil.stringValue(enc.start)+","+vegaUtil.stringValue(enc.stop)+
","+vegaUtil.stringValue(enc.count)+")";enc.signal?channel=expression(enc.signal,scope,params,fields):enc.color?channel=color$jscomp$0(enc.color,scope,params,fields):null!=enc.field?(channel=enc.field,channel=resolve(vegaUtil.isObject(channel)?channel:{datum:channel},scope,params,fields)):channel=void 0!==enc.value?vegaUtil.stringValue(enc.value):void 0;if(null!=enc.scale){var scale=getScale(enc.scale,scope,params,fields);if(null!=enc.range){var interp=+enc.range;var func=scale+".range()";channel=
0===interp?func+"[0]":"($\x3d"+func+","+(1===interp?"$[$.length-1]":"$[0]+"+interp+"*($[$.length-1]-$[0])")+")"}else{void 0!==channel&&(channel=scale+"("+channel+")");if(interp=enc.band){var flag=enc.scale;vegaUtil.isString(flag)?(flag=scope.scaleType(flag),flag="band"===flag||"point"===flag?1:0):flag=-1;interp=flag}interp&&(func=scale+".bandwidth",interp=+enc.band,interp=func+"()"+(1===interp?"":"*"+interp),0>flag&&(interp="("+func+"?"+interp+":0)"),channel=(channel?channel+"+":"")+interp,enc.extra&&
(channel="(datum.extra?"+scale+"(datum.extra.value):"+channel+")"));null==channel&&(channel="0")}}void 0===channel&&(channel=null);null!=enc.exponent&&(channel="Math.pow("+channel+","+property$jscomp$0(enc.exponent,scope,params,fields)+")");null!=enc.mult&&(channel+="*"+property$jscomp$0(enc.mult,scope,params,fields));null!=enc.offset&&(channel+="+"+property$jscomp$0(enc.offset,scope,params,fields));enc.round&&(channel="Math.round("+channel+")");return channel}function set$jscomp$0(obj,key,value){obj=
obj+"["+vegaUtil.stringValue(key)+"]";return"$\x3d"+value+";if("+obj+"!\x3d\x3d$)"+obj+"\x3d$,m\x3d1;"}function rule$jscomp$0(channel,rules,scope,params,fields){var code="";rules.forEach(function(rule){var value=entry$1(channel,rule,scope,params,fields);code+=rule.test?expression(rule.test,scope,params,fields)+"?"+value+":":value});":"===vegaUtil.peek(code)&&(code+="null");return set$jscomp$0("o",channel,code)}function encoder(_){return vegaUtil.isObject(_)&&!vegaUtil.isArray(_)?vegaUtil.extend({},
_):{value:_}}function addEncode(object,name,value,set){return null!=value?(vegaUtil.isObject(value)&&!vegaUtil.isArray(value)?object.update[name]=value:object[set||"enter"][name]={value:value},1):0}function addEncoders(object,enter,update){for(var name in enter)addEncode(object,name,enter[name]);for(var name$326 in update)addEncode(object,name$326,update[name$326],"update")}function extendEncode(encode,extra,skip){for(var name in extra)skip&&vegaUtil.hasOwnProperty(skip,name)||(encode[name]=vegaUtil.extend(encode[name]||
{},extra[name]));return encode}function encoders(encode,type,role,style,scope$jscomp$0,params$jscomp$0){var enc,key;params$jscomp$0=params$jscomp$0||{};params$jscomp$0.encoders={$encode:enc={}};encode=applyDefaults(encode,type,role,style,scope$jscomp$0.config);for(key in encode){role=enc;style=key;var channel=void 0;var JSCompiler_inline_result=encode[key];var marktype=type,params=params$jscomp$0,scope=scope$jscomp$0,fields={},code="var o\x3ditem,datum\x3do.datum,m\x3d0,$;";for(channel in JSCompiler_inline_result){var value=
JSCompiler_inline_result[channel];vegaUtil.isArray(value)?code+=rule$jscomp$0(channel,value,scope,params,fields):(value=entry$1(channel,value,scope,params,fields),code+=set$jscomp$0("o",channel,value))}channel=code;params="";Skip$1[marktype]||(JSCompiler_inline_result.x2&&(JSCompiler_inline_result.x?(Swap[marktype]&&(params+="if(o.x\x3eo.x2)$\x3do.x,o.x\x3do.x2,o.x2\x3d$;"),params+="o.width\x3do.x2-o.x;"):params+="o.x\x3do.x2-(o.width||0);"),JSCompiler_inline_result.xc&&(params+="o.x\x3do.xc-(o.width||0)/2;"),
JSCompiler_inline_result.y2&&(JSCompiler_inline_result.y?(Swap[marktype]&&(params+="if(o.y\x3eo.y2)$\x3do.y,o.y\x3do.y2,o.y2\x3d$;"),params+="o.height\x3do.y2-o.y;"):params+="o.y\x3do.y2-(o.height||0);"),JSCompiler_inline_result.yc&&(params+="o.y\x3do.yc-(o.height||0)/2;"));marktype=params;code=channel+marktype;JSCompiler_inline_result={$expr:code+"return m;",$fields:Object.keys(fields),$output:Object.keys(JSCompiler_inline_result)};role[style]=JSCompiler_inline_result}return params$jscomp$0}function applyDefaults(encode,
type,role,style,config){var defaults={},enter={},update,key$jscomp$0;if("legend"==role||0===String(role).indexOf("axis"))role=null;role="frame"===role?config.group:"mark"===role?vegaUtil.extend({},config.mark,config[type]):null;for(key$jscomp$0 in role)(type=has(key$jscomp$0,encode)||("fill"===key$jscomp$0||"stroke"===key$jscomp$0)&&(has("fill",encode)||has("stroke",encode)))||applyDefault(defaults,key$jscomp$0,role[key$jscomp$0]);vegaUtil.array(style).forEach(function(name){name=config.style&&config.style[name];
for(var key in name)has(key,encode)||applyDefault(defaults,key,name[key])});encode=vegaUtil.extend({},encode);for(key$jscomp$0 in defaults)role=defaults[key$jscomp$0],role.signal?(update=update||{})[key$jscomp$0]=role:enter[key$jscomp$0]=role;encode.enter=vegaUtil.extend(enter,encode.enter);update&&(encode.update=vegaUtil.extend(update,encode.update));return encode}function applyDefault(defaults,key,value){defaults[key]=value&&value.signal?{signal:value.signal}:{value:value}}function has(key,encode){return encode&&
(encode.enter&&encode.enter[key]||encode.update&&encode.update[key])}function guideMark(type,role,style,key,dataRef,encode,extras){return{type:type,name:extras?extras.name:void 0,role:role,style:extras&&extras.style||style,key:key,from:dataRef,interactive:!(!extras||!extras.interactive),encode:extendEncode(encode,extras,Skip)}}function lookup$jscomp$0(spec,config){var _=function(name){return value$jscomp$0(spec[name],config[name])};_.isVertical=function(s){return"vertical"===value$jscomp$0(spec.direction,
config.direction||(s?config.symbolDirection:config.gradientDirection))};_.gradientLength=function(){return value$jscomp$0(spec.gradientLength,config.gradientLength||config.gradientWidth)};_.gradientThickness=function(){return value$jscomp$0(spec.gradientThickness,config.gradientThickness||config.gradientHeight)};_.entryColumns=function(){return value$jscomp$0(spec.columns,value$jscomp$0(config.columns,+_.isVertical(!0)))};return _}function getEncoding(name,encode){return(name=encode&&(encode.update&&
encode.update[name]||encode.enter&&encode.enter[name]))&&name.signal?name:name?name.value:null}function anchorExpr(s,e,m){return'item.anchor \x3d\x3d\x3d "start" ? '+s+' : item.anchor \x3d\x3d\x3d "end" ? '+e+" : "+m}function legendGradient(spec,scale,config,userEncode){spec=lookup$jscomp$0(spec,config);var vertical=spec.isVertical();config=spec.gradientThickness();var length=spec.gradientLength(),enter;if(vertical){vertical=[0,1];var stop=[0,0];var width=config;config=length}else vertical=[0,0],
stop=[1,0],width=length;scale={enter:enter={opacity:zero$jscomp$0,x:zero$jscomp$0,y:zero$jscomp$0,width:encoder(width),height:encoder(config)},update:vegaUtil.extend({},enter,{opacity:one,fill:{gradient:scale,start:vertical,stop:stop}}),exit:{opacity:zero$jscomp$0}};addEncoders(scale,{stroke:spec("gradientStrokeColor"),strokeWidth:spec("gradientStrokeWidth")},{opacity:spec("gradientOpacity")});return guideMark("rect","legend-gradient",null,void 0,void 0,scale,userEncode)}function legendGradientDiscrete(spec,
scale,config,userEncode,dataRef){spec=lookup$jscomp$0(spec,config);var vertical=spec.isVertical();config=spec.gradientThickness();var length=spec.gradientLength(),encode,v,uu,vv,adjust="";vertical?(encode="y",uu="y2",v="x",vv="width",adjust="1-"):(encode="x",uu="x2",v="y",vv="height");scale={opacity:zero$jscomp$0,fill:{scale:scale,field:"value"}};scale[encode]={signal:adjust+"datum.perc",mult:length};scale[v]=zero$jscomp$0;scale[uu]={signal:adjust+"datum.perc2",mult:length};scale[vv]=encoder(config);
encode={enter:scale,update:vegaUtil.extend({},scale,{opacity:one}),exit:{opacity:zero$jscomp$0}};addEncoders(encode,{stroke:spec("gradientStrokeColor"),strokeWidth:spec("gradientStrokeWidth")},{opacity:spec("gradientOpacity")});return guideMark("rect","legend-band",null,"value",dataRef,encode,userEncode)}function legendGradientLabels(spec,config,userEncode,dataRef){var _=lookup$jscomp$0(spec,config),vertical=_.isVertical(),thickness=encoder(_.gradientThickness()),length=_.gradientLength(),overlap=
_("labelOverlap"),separation=_("labelSeparation"),enter,update,adjust="";var encode={enter:enter={opacity:zero$jscomp$0},update:update={opacity:one,text:{field:"label"}},exit:{opacity:zero$jscomp$0}};addEncoders(encode,{fill:_("labelColor"),fillOpacity:_("labelOpacity"),font:_("labelFont"),fontSize:_("labelFontSize"),fontStyle:_("labelFontStyle"),fontWeight:_("labelFontWeight"),limit:value$jscomp$0(spec.labelLimit,config.gradientLabelLimit)});vertical?(enter.align={value:"left"},enter.baseline=update.baseline=
{signal:'datum.perc\x3c\x3d0?"bottom":datum.perc\x3e\x3d1?"top":"middle"'},_="y",vertical="x",adjust="1-"):(enter.align=update.align={signal:'datum.perc\x3c\x3d0?"left":datum.perc\x3e\x3d1?"right":"center"'},enter.baseline={value:"top"},_="x",vertical="y");enter[_]=update[_]={signal:adjust+"datum.perc",mult:length};enter[vertical]=update[vertical]=thickness;thickness.offset=value$jscomp$0(spec.labelOffset,config.gradientLabelOffset)||0;spec=guideMark("text","legend-label","guide-label","value",dataRef,
encode,userEncode);overlap&&(spec.overlap={separation:separation,method:overlap,order:"datum.index"});return spec}function guideGroup(role,style,name,dataRef,interactive,encode,marks,layout){return{type:"group",name:name,role:role,style:style,from:dataRef,interactive:interactive||!1,encode:encode,marks:marks,layout:layout}}function legendSymbolGroups(spec,config,userEncode,dataRef,columns){var _=lookup$jscomp$0(spec,config),entries=userEncode.entries,interactive=!(!entries||!entries.interactive),
name=entries?entries.name:void 0,height=_("clipHeight"),symbolOffset=_("symbolOffset"),valueRef={data:"value"},encode={},xSignal=columns+" ? datum.offset : datum.size",yEncode=height?encoder(height):{field:"size"},ncols="max(1, "+columns+")",enter,update;yEncode.mult=.5;encode={enter:enter={opacity:zero$jscomp$0,x:{signal:xSignal,mult:.5,offset:symbolOffset},y:yEncode},update:update={opacity:one,x:enter.x,y:enter.y},exit:{opacity:zero$jscomp$0}};spec.fill||addEncoders(encode,{fill:config.symbolBaseFillColor,
stroke:config.symbolBaseStrokeColor});addEncoders(encode,{fill:_("symbolFillColor"),shape:_("symbolType"),size:_("symbolSize"),stroke:_("symbolStrokeColor"),strokeDash:_("symbolDash"),strokeDashOffset:_("symbolDashOffset"),strokeWidth:_("symbolStrokeWidth")},{opacity:_("symbolOpacity")});LegendScales.forEach(function(scale){spec[scale]&&(update[scale]=enter[scale]={scale:spec[scale],field:"value"})});config=guideMark("symbol","legend-symbol",null,"value",valueRef,encode,userEncode.symbols);height&&
(config.clip=!0);encode=encoder(symbolOffset);encode.offset=_("labelOffset");encode={enter:enter={opacity:zero$jscomp$0,x:{signal:xSignal,offset:encode},y:yEncode},update:update={opacity:one,text:{field:"label"},x:enter.x,y:enter.y},exit:{opacity:zero$jscomp$0}};addEncoders(encode,{align:_("labelAlign"),baseline:_("labelBaseline"),fill:_("labelColor"),fillOpacity:_("labelOpacity"),font:_("labelFont"),fontSize:_("labelFontSize"),fontStyle:_("labelFontStyle"),fontWeight:_("labelFontWeight"),limit:_("labelLimit")});
userEncode=guideMark("text","legend-label","guide-label","value",valueRef,encode,userEncode.labels);encode={enter:{noBound:{value:!height},width:zero$jscomp$0,height:height?encoder(height):zero$jscomp$0,opacity:zero$jscomp$0},exit:{opacity:zero$jscomp$0},update:update={opacity:one,row:{signal:null},column:{signal:null}}};_.isVertical(!0)?(_="ceil(item.mark.items.length / "+ncols+")",update.row.signal="datum.index%"+_,update.column.signal="floor(datum.index / "+_+")",_={field:["row","datum.index"]}):
(update.row.signal="floor(datum.index / "+ncols+")",update.column.signal="datum.index % "+ncols,_={field:"datum.index"});update.column.signal=columns+"?"+update.column.signal+":datum.index";dataRef={facet:{data:dataRef,name:"value",groupby:"index"}};spec=guideGroup("scope",null,name,dataRef,interactive,extendEncode(encode,entries,Skip),[config,userEncode]);spec.sort=_;return spec}function legendSymbolLayout(spec,config){spec=lookup$jscomp$0(spec,config);return{align:spec("gridAlign"),columns:spec.entryColumns(),
center:{row:!0,column:!1},padding:{row:spec("rowPadding"),column:spec("columnPadding")}}}function legendTitle(spec,config,userEncode,dataRef){config=lookup$jscomp$0(spec,config);var encode={enter:{opacity:zero$jscomp$0},update:{opacity:one,x:{field:{group:"padding"}},y:{field:{group:"padding"}}},exit:{opacity:zero$jscomp$0}};addEncoders(encode,{orient:config("titleOrient"),_anchor:config("titleAnchor"),anchor:{signal:'item._anchor || ((item.orient \x3d\x3d\x3d "left" || item.orient \x3d\x3d\x3d "right") ? "middle" : "start")'},
angle:{signal:'datum.vgrad \x26\x26 (item.orient \x3d\x3d\x3d "left" || item.orient \x3d\x3d\x3d "right") ? (item.orient \x3d\x3d\x3d "left" ? -90 : 90) : 0'},align:{signal:exprAlign},baseline:{signal:exprBaseline},text:spec.title,fill:config("titleColor"),fillOpacity:config("titleOpacity"),font:config("titleFont"),fontSize:config("titleFontSize"),fontStyle:config("titleFontStyle"),fontWeight:config("titleFontWeight"),limit:config("titleLimit"),lineHeight:config("titleLineHeight")},{align:config("titleAlign"),
baseline:config("titleBaseline")});return guideMark("text","legend-title","guide-title",null,dataRef,encode,userEncode)}function clip$jscomp$0(clip,scope){var expr;vegaUtil.isObject(clip)&&(clip.signal?expr=clip.signal:clip.path?expr="pathShape("+param$jscomp$0(clip.path)+")":clip.sphere&&(expr="geoShape("+param$jscomp$0(clip.sphere)+', {type: "Sphere"})'));return expr?scope.signalRef(expr):!!clip}function param$jscomp$0(value){return vegaUtil.isObject(value)&&value.signal?value.signal:vegaUtil.stringValue(value)}
function getRole(spec){var role=spec.role||"";return role.indexOf("axis")&&role.indexOf("legend")&&role.indexOf("title")?"group"===spec.type?"scope":role||"mark":role}function definition(spec){return{marktype:spec.type,name:spec.name||void 0,role:spec.role||getRole(spec),zindex:+spec.zindex||void 0}}function interactive(spec,scope){return spec&&spec.signal?scope.signalRef(spec.signal):!1===spec?!1:!0}function parseTransform(spec,scope){var def=vegaDataflow.definition(spec.type);def||vegaUtil.error("Unrecognized transform type: "+
vegaUtil.stringValue(spec.type));var t=def.type.toLowerCase();var params=parseParameters(def,spec,scope);t=new Entry(t,null,params,void 0);spec.signal&&scope.addSignal(spec.signal,scope.proxy(t));t.metadata=def.metadata||{};return t}function parseParameters(def,spec,scope){var params={},n;var i=0;for(n=def.params.length;i<n;++i){var pdef=def.params[i];params[pdef.name]=parseParameter$1(pdef,spec,scope)}return params}function parseParameter$1(def,spec,scope){var type=def.type,value=spec[def.name];
if("index"===type)return parseIndexParameter(def,spec,scope);if(void 0===value)def.required&&vegaUtil.error("Missing required "+vegaUtil.stringValue(spec.type)+" parameter: "+vegaUtil.stringValue(def.name));else return"param"===type?parseSubParameters(def,spec,scope):"projection"===type?scope.projectionRef(spec[def.name]):!def.array||value&&value.signal?parameterValue(def,value,scope):value.map(function(v){return parameterValue(def,v,scope)})}function parameterValue(def,value,scope){var type=def.type;
return value&&value.signal?"expr"===type?vegaUtil.error("Expression references can not be signals."):"field"===type?scope.fieldRef(value):"compare"===type?scope.compareRef(value):scope.signalRef(value.signal):(def=def.expr||"field"===type)&&value&&value.expr?scope.exprRef(value.expr,value.as):def&&value&&value.field?fieldRef(value.field,value.as):"expr"===type?parseExpression(value,scope):"data"===type?ref$jscomp$0(scope.getData(value).values):"field"===type?fieldRef(value):"compare"===type?scope.compareRef(value):
value}function parseIndexParameter(def,spec,scope){vegaUtil.isString(spec.from)||vegaUtil.error('Lookup "from" parameter must be a string literal.');return scope.getData(spec.from).lookupRef(scope,spec.key)}function parseSubParameters(def,spec,scope){spec=spec[def.name];return def.array?(vegaUtil.isArray(spec)||vegaUtil.error("Expected an array of sub-parameters. Instead: "+vegaUtil.stringValue(spec)),spec.map(function(v){return parseSubParameter(def,v,scope)})):parseSubParameter(def,spec,scope)}
function parseSubParameter(def,value,scope){var k,n;var i=0;for(n=def.params.length;i<n;++i){var pdef=def.params[i];for(k in pdef.key)if(pdef.key[k]!==value[k]){pdef=null;break}if(pdef)break}pdef||vegaUtil.error("Unsupported parameter: "+vegaUtil.stringValue(value));def=vegaUtil.extend(parseParameters(pdef,value,scope),pdef.key);return ref$jscomp$0(scope.add(Params(def)))}function parseData(from,group,scope){var facet,parent;if(!from)var dataRef=ref$jscomp$0(scope.add(Collect(null,[{}])));else if(facet=
from.facet)if(group||vegaUtil.error("Only group marks can be faceted."),null!=facet.field)dataRef=parent=getDataRef(facet,scope);else{from.data?parent=ref$jscomp$0(scope.getData(from.data).aggregate):(group=parseTransform(vegaUtil.extend({type:"aggregate",groupby:vegaUtil.array(facet.groupby)},facet.aggregate),scope),group.params.key=scope.keyRef(facet.groupby),group.params.pulse=getDataRef(facet,scope),dataRef=parent=ref$jscomp$0(scope.add(group)));var key=scope.keyRef(facet.groupby,!0)}dataRef||
(dataRef=getDataRef(from,scope));return{key:key,pulse:dataRef,parent:parent}}function getDataRef(from,scope){return from.$ref?from:from.data&&from.data.$ref?from.data:ref$jscomp$0(scope.getData(from.data).output)}function DataScope(scope,input,output,values,aggr){this.scope=scope;this.input=input;this.output=output;this.values=values;this.aggregate=aggr;this.index={}}function fieldKey(field){return vegaUtil.isString(field)?field:null}function addSortField(scope,p,sort){var as=aggrField(sort.op,sort.field),
s;if(p.ops)for(var i=0,n=p.as.length;i<n;++i){if(p.as[i]===as)return}else p.ops=["count"],p.fields=[null],p.as=["count"];sort.op&&(p.ops.push((s=sort.op.signal)?scope.signalRef(s):sort.op),p.fields.push(scope.fieldRef(sort.field)),p.as.push(as))}function cache$jscomp$0(scope,ds,name,optype,field,counts,index){name=ds[name]||(ds[name]={});var sort=vegaUtil.isObject(counts)?("descending"===counts.order?"-":"+")+aggrField(counts.op,counts.field):"";var k=fieldKey(field);if(null!=k){scope=ds.scope;k+=
sort?"|"+sort:"";var v=name[k]}v||(v=counts?{field:keyFieldRef,pulse:ds.countsRef(scope,field,counts)}:{field:scope.fieldRef(field),pulse:ref$jscomp$0(ds.output)},sort&&(v.sort=scope.sortRef(counts)),scope=scope.add(new Entry(optype,void 0,v,void 0)),index&&(ds.index[field]=scope),v=ref$jscomp$0(scope),null!=k&&(name[k]=v));return v}function parseFacet(spec,scope,group){var facet=spec.from.facet,name=facet.name,data=getDataRef(facet,scope),op;facet.name||vegaUtil.error("Facet must have a name: "+
vegaUtil.stringValue(facet));facet.data||vegaUtil.error("Facet must reference a data set: "+vegaUtil.stringValue(facet));facet.field?op=scope.add(PreFacet({field:scope.fieldRef(facet.field),pulse:data})):facet.groupby?op=scope.add(Facet({key:scope.keyRef(facet.groupby),group:ref$jscomp$0(scope.proxy(group.parent)),pulse:data})):vegaUtil.error("Facet must specify groupby or field: "+vegaUtil.stringValue(facet));scope=scope.fork();group=scope.add(Collect());facet=scope.add(Sieve({pulse:ref$jscomp$0(group)}));
scope.addData(name,new DataScope(scope,group,group,facet));scope.addSignal("parent",null);op.params.subflow={$subflow:parseSpec(spec,scope).toRuntime()}}function parseSubflow(spec,scope,input){input=scope.add(PreFacet({pulse:input.pulse}));scope=scope.fork();scope.add(Sieve());scope.addSignal("parent",null);input.params.subflow={$subflow:parseSpec(spec,scope).toRuntime()}}function parseTrigger(spec,scope,name){var remove=spec.remove,insert=spec.insert,toggle=spec.toggle,modify=spec.modify,values=
spec.values,op=scope.add(new Entry("operator",void 0,void 0,void 0));spec="if("+spec.trigger+',modify("'+name+'",'+[insert,remove,toggle,modify,values].map(function(_){return null==_?"null":_}).join(",")+"),0)";scope=parseExpression(spec,scope);op.update=scope.$expr;op.params=scope.$params}function parseMark(spec,scope){var role=getRole(spec),group="group"===spec.type,facet=spec.from&&spec.from.facet,layout=spec.layout||"scope"===role||"frame"===role,nested="mark"===role||layout||facet,overlap=spec.overlap,
store,enc;var input=parseData(spec.from,group,scope);var op=scope.add(DataJoin({key:input.key||(spec.key?fieldRef(spec.key):void 0),pulse:input.pulse,clean:!group}));var joinRef=ref$jscomp$0(op);op=store=scope.add(Collect({pulse:joinRef}));op=scope.add(Mark({markdef:definition(spec),interactive:interactive(spec.interactive,scope),clip:clip$jscomp$0(spec.clip,scope),context:{$context:!0},groups:scope.lookup(),parent:scope.signals.parent?scope.signalRef("parent"):null,index:scope.markpath(),pulse:ref$jscomp$0(op)}));
var bound=ref$jscomp$0(op);op=enc=scope.add(Encode(encoders(spec.encode,spec.type,role,spec.style,scope,{mod:!1,pulse:bound})));op.params.parent=scope.encode();spec.transform&&spec.transform.forEach(function(_){_=parseTransform(_,scope);var md=_.metadata;(md.generates||md.changes)&&vegaUtil.error("Mark transforms should not generate new data.");md.nomod||(enc.params.mod=!0);_.params.pulse=ref$jscomp$0(op);scope.add(op=_)});spec.sort&&(op=scope.add(SortItems({sort:scope.compareRef(spec.sort),pulse:ref$jscomp$0(op)})));
role=ref$jscomp$0(op);if(facet||layout){layout=scope.add(ViewLayout({layout:scope.objectProperty(spec.layout),legends:scope.legends,mark:bound,pulse:role}));var layoutRef=ref$jscomp$0(layout)}bound=scope.add(Bound({mark:bound,pulse:layoutRef||role}));var boundRef=ref$jscomp$0(bound);if(group){if(nested){var ops=scope.operators;ops.pop();layout&&ops.pop()}scope.pushState(role,layoutRef||boundRef,joinRef);facet?parseFacet(spec,scope,input):nested?parseSubflow(spec,scope,input):parseSpec(spec,scope);
scope.popState();nested&&(layout&&ops.push(layout),ops.push(bound))}overlap&&(boundRef=parseOverlap(overlap,boundRef,scope));group=scope.add(Render({pulse:boundRef}));facet=scope.add(Sieve({pulse:ref$jscomp$0(group)},void 0,scope.parent()));if(null!=spec.name){var name=spec.name;scope.addData(name,new DataScope(scope,store,group,facet));spec.on&&spec.on.forEach(function(on){(on.insert||on.remove||on.toggle)&&vegaUtil.error("Marks only support modify triggers.");parseTrigger(on,scope,name)})}}function parseOverlap(overlap,
source,scope){var method=overlap.method,bound=overlap.bound,sep=overlap.separation;source={separation:sep&&sep.signal?scope.signalRef(sep.signal):sep,method:method&&method.signal?scope.signalRef(method.signal):method,pulse:source};overlap.order&&(source.sort=scope.compareRef({field:overlap.order}));bound&&(overlap=bound.tolerance,source.boundTolerance=overlap&&overlap.signal?scope.signalRef(overlap.signal):+overlap,source.boundScale=scope.scaleRef(bound.scale),source.boundOrient=bound.orient);return ref$jscomp$0(scope.add(Overlap(source)))}
function parseLegend(spec,scope){var config=scope.config.legend,encode=spec.encode||{},legendEncode=encode.legend||{},name=legendEncode.name||void 0,interactive=legendEncode.interactive,style=legendEncode.style,_=lookup$jscomp$0(spec,config),params,scale=LegendScales.reduce(function(a,b){return a||spec[b]},0);scale||vegaUtil.error("Missing valid scale for legend.");var children=legendType(spec,scope.scaleType(scale));var datum={title:null!=spec.title,type:children,vgrad:"symbol"!==children&&_.isVertical()};
var dataRef=ref$jscomp$0(scope.add(Collect(null,[datum])));legendEncode=extendEncode(buildLegendEncode(_,config),legendEncode,Skip);var entryRef=ref$jscomp$0(scope.add(LegendEntries(params={type:children,scale:scope.scaleRef(scale),count:scope.objectProperty(_("tickCount")),limit:scope.property(_("symbolLimit")),values:scope.objectProperty(spec.values),minstep:scope.property(spec.tickMinStep),formatType:scope.property(spec.formatType),formatSpecifier:scope.property(spec.format)})));if("gradient"===
children)children=[legendGradient(spec,scale,config,encode.gradient),legendGradientLabels(spec,config,encode.labels,entryRef)],params.count=params.count||scope.signalRef("max(2,2*floor(("+deref(_.gradientLength())+")/100))");else if("discrete"===children)children=[legendGradientDiscrete(spec,scale,config,encode.gradient,entryRef),legendGradientLabels(spec,config,encode.labels,entryRef)];else{var entryLayout=legendSymbolLayout(spec,config);children=[legendSymbolGroups(spec,config,encode,entryRef,deref(entryLayout.columns))];
params.size=sizeExpression(spec,scope,children[0].marks)}children=[guideGroup("legend-entry",null,null,dataRef,interactive,{enter:{x:{value:0},y:{value:0}}},children,entryLayout)];datum.title&&children.push(legendTitle(spec,config,encode.title,dataRef));config=guideGroup("legend",style,name,dataRef,interactive,legendEncode,children);spec.zindex&&(config.zindex=spec.zindex);return parseMark(config,scope)}function legendType(spec,scaleType){var type=spec.type||"symbol";spec.type||1!==scaleCount(spec)||
!spec.fill&&!spec.stroke||(type=vegaScale.isContinuous(scaleType)?"gradient":vegaScale.isDiscretizing(scaleType)?"discrete":"symbol");return"gradient"!==type?type:vegaScale.isDiscretizing(scaleType)?"discrete":"gradient"}function scaleCount(spec){return LegendScales.reduce(function(count,type){return count+(spec[type]?1:0)},0)}function buildLegendEncode(_,config){var encode={enter:{},update:{}};addEncoders(encode,{orient:_("orient"),offset:_("offset"),padding:_("padding"),titlePadding:_("titlePadding"),
cornerRadius:_("cornerRadius"),fill:_("fillColor"),stroke:_("strokeColor"),strokeWidth:config.strokeWidth,strokeDash:config.strokeDash,x:_("legendX"),y:_("legendY")});return encode}function sizeExpression(spec,scope,marks){var size=deref(getChannel("size",spec,marks));spec=deref(getChannel("strokeWidth",spec,marks));(marks=getEncoding("fontSize",marks[1].encode))||(marks=(marks=scope.config.style["guide-label"])&&marks.fontSize);marks=deref(marks);return parseExpression("max(ceil(sqrt("+size+")+"+
spec+"),"+marks+")",scope)}function getChannel(name,spec,marks){return spec[name]?'scale("'+spec[name]+'",datum)':getEncoding(name,marks[0].encode)}function parseTitle(spec,scope){spec=vegaUtil.isString(spec)?{text:spec}:spec;var _=lookup$jscomp$0(spec,scope.config.title),encode=spec.encode||{},userEncode=encode.group||{},name=userEncode.name||void 0,interactive=userEncode.interactive,style=userEncode.style,children=[];var dataRef=ref$jscomp$0(scope.add(Collect(null,[{}])));children.push(buildTitle(spec,
_,titleEncode(spec),dataRef));spec.subtitle&&children.push(buildSubTitle(spec,_,encode.subtitle,dataRef));encode={enter:{},update:{}};addEncoders(encode,{orient:_("orient"),anchor:_("anchor"),align:{signal:alignExpr},angle:{signal:'item.orient\x3d\x3d\x3d"left"?-90:item.orient\x3d\x3d\x3d"right"?90:0'},limit:_("limit"),frame:_("frame"),offset:_("offset")||0,padding:_("subtitlePadding")});_=extendEncode(encode,userEncode,Skip);name=guideGroup("title",style,name,dataRef,interactive,_,children);spec.zindex&&
(name.zindex=spec.zindex);return parseMark(name,scope)}function titleEncode(spec){var encode=spec.encode;return encode&&encode.title||vegaUtil.extend({name:spec.name,interactive:spec.interactive,style:spec.style},encode)}function buildTitle(spec,_,userEncode,dataRef){var zero={value:0};zero={enter:{opacity:zero},update:{opacity:{value:1}},exit:{opacity:zero}};addEncoders(zero,{text:spec.text,align:{signal:"item.mark.group.align"},angle:{signal:"item.mark.group.angle"},limit:{signal:"item.mark.group.limit"},
baseline:"top",dx:_("dx"),dy:_("dy"),fill:_("color"),font:_("font"),fontSize:_("fontSize"),fontStyle:_("fontStyle"),fontWeight:_("fontWeight"),lineHeight:_("lineHeight")},{align:_("align"),angle:_("angle"),baseline:_("baseline")});return guideMark("text","title-text","group-title",null,dataRef,zero,userEncode)}function buildSubTitle(spec,_,userEncode,dataRef){var zero={value:0};zero={enter:{opacity:zero},update:{opacity:{value:1}},exit:{opacity:zero}};addEncoders(zero,{text:spec.subtitle,align:{signal:"item.mark.group.align"},
angle:{signal:"item.mark.group.angle"},limit:{signal:"item.mark.group.limit"},baseline:"top",dx:_("dx"),dy:_("dy"),fill:_("subtitleColor"),font:_("subtitleFont"),fontSize:_("subtitleFontSize"),fontStyle:_("subtitleFontStyle"),fontWeight:_("subtitleFontWeight"),lineHeight:_("subtitleLineHeight")},{align:_("align"),angle:_("angle"),baseline:_("baseline")});return guideMark("text","title-subtitle","group-subtitle",null,dataRef,zero,userEncode)}function parseData$1(data,scope){var transforms=[];data.transform&&
data.transform.forEach(function(tx){transforms.push(parseTransform(tx,scope))});data.on&&data.on.forEach(function(on){parseTrigger(on,scope,data.name)});scope.addDataPipeline(data.name,analyze(data,scope,transforms))}function analyze(data,scope,ops){var output=[],source=null,modify=!1,generate=!1,upstream,n;data.values?hasSignal(data.values)||hasSignal(data.format)?(output.push(load(scope,data)),output.push(source=collect())):output.push(source=collect({$ingest:data.values,$format:data.format})):
data.url?hasSignal(data.url)||hasSignal(data.format)?(output.push(load(scope,data)),output.push(source=collect())):output.push(source=collect({$request:data.url,$format:data.format})):data.source&&(source=upstream=vegaUtil.array(data.source).map(function(d){return ref$jscomp$0(scope.getData(d).output)}),output.push(null));data=0;for(n=ops.length;data<n;++data){var t=ops[data];var m=t.metadata;source||m.source||output.push(source=collect());output.push(t);m.generates&&(generate=!0);m.modifies&&!generate&&
(modify=!0);m.source?source=t:m.changes&&(source=null)}upstream&&(n=upstream.length-1,output[0]=Relay({derive:modify,pulse:n?upstream:upstream[0]}),(modify||n)&&output.splice(1,0,collect()));source||output.push(collect());output.push(Sieve({}));return output}function collect(values){values=Collect({},values);values.metadata={source:!0};return values}function load(scope,data){return Load({url:data.url?scope.property(data.url):void 0,values:data.values?scope.property(data.values):void 0,format:scope.objectProperty(data.format)})}
function axisDomain(spec,config,userEncode,dataRef){var _=lookup$jscomp$0(spec,config),orient=spec.orient,enter,update;config={enter:enter={opacity:zero$jscomp$0},update:update={opacity:one},exit:{opacity:zero$jscomp$0}};addEncoders(config,{stroke:_("domainColor"),strokeDash:_("domainDash"),strokeDashOffset:_("domainDashOffset"),strokeWidth:_("domainWidth"),strokeOpacity:_("domainOpacity")});if("top"===orient||"bottom"===orient){_="x";var v="y"}else _="y",v="x";orient=_+"2";enter[v]=zero$jscomp$0;
update[_]=enter[_]={scale:spec.scale,range:0};update[orient]=enter[orient]={scale:spec.scale,range:1};return guideMark("rule","axis-domain",null,null,dataRef,config,userEncode)}function axisGrid(spec,config,userEncode,dataRef){var _=lookup$jscomp$0(spec,config),orient=spec.orient;config=spec.gridScale;var sign="left"===orient||"top"===orient?1:-1;a:{var offset=spec.offset;if(1!==sign)if(vegaUtil.isObject(offset)){for(var entry=offset=vegaUtil.extend({},offset);null!=entry.mult;)if(vegaUtil.isObject(entry.mult))entry=
entry.mult=vegaUtil.extend({},entry.mult);else{entry.mult*=sign;break a}entry.mult=sign}else offset=sign*(offset||0)}var enter,exit,update;entry={enter:enter={opacity:zero$jscomp$0},update:update={opacity:one},exit:exit={opacity:zero$jscomp$0}};addEncoders(entry,{stroke:_("gridColor"),strokeDash:_("gridDash"),strokeDashOffset:_("gridDashOffset"),strokeOpacity:_("gridOpacity"),strokeWidth:_("gridWidth")});spec={scale:spec.scale,field:"value",band:_("bandPosition"),round:_("tickRound"),extra:_("tickExtra"),
offset:_("tickOffset")};if("top"===orient||"bottom"===orient){orient="x";_="y";var s="height"}else orient="y",_="x",s="width";var v2=_+"2";update[orient]=enter[orient]=exit[orient]=spec;config?(update[_]=enter[_]={scale:config,range:0,mult:sign,offset:offset},update[v2]=enter[v2]={scale:config,range:1,mult:sign,offset:offset}):(update[_]=enter[_]={value:0,offset:offset},update[v2]=enter[v2]={signal:s,mult:sign,offset:offset});return guideMark("rule","axis-grid",null,"value",dataRef,entry,userEncode)}
function axisTicks(spec,config,userEncode,dataRef,size){var _=lookup$jscomp$0(spec,config);config=spec.orient;var sign="left"===config||"top"===config?-1:1,enter,exit,update;var encode={enter:enter={opacity:zero$jscomp$0},update:update={opacity:one},exit:exit={opacity:zero$jscomp$0}};addEncoders(encode,{stroke:_("tickColor"),strokeDash:_("tickDash"),strokeDashOffset:_("tickDashOffset"),strokeOpacity:_("tickOpacity"),strokeWidth:_("tickWidth")});size=encoder(size);size.mult=sign;spec={scale:spec.scale,
field:"value",band:_("bandPosition"),round:_("tickRound"),extra:_("tickExtra"),offset:_("tickOffset")};"top"===config||"bottom"===config?(update.y=enter.y=zero$jscomp$0,update.y2=enter.y2=size,update.x=enter.x=exit.x=spec):(update.x=enter.x=zero$jscomp$0,update.x2=enter.x2=size,update.y=enter.y=exit.y=spec);return guideMark("rule","axis-tick",null,"value",dataRef,encode,userEncode)}function flushExpr(scale,threshold,a,b,c){return{signal:'flush(range("'+scale+'"), scale("'+scale+'", datum.value), '+
threshold+","+a+","+b+","+c+")"}}function axisLabels(spec,config,userEncode,dataRef,size){var _=lookup$jscomp$0(spec,config);config=spec.orient;var sign="left"===config||"top"===config?-1:1,isXAxis="top"===config||"bottom"===config,scale=spec.scale;spec=deref(_("labelFlush"));var flushOffset=deref(_("labelFlushOffset")),flushOn=0===spec||!!spec,labelAlign=_("labelAlign"),labelBaseline=_("labelBaseline"),enter;var tickSize=encoder(size);tickSize.mult=sign;tickSize.offset=encoder(_("labelPadding")||
0);tickSize.offset.mult=sign;var tickPos={scale:scale,field:"value",band:.5,offset:_("tickOffset")};isXAxis?(size=labelAlign||(flushOn?flushExpr(scale,spec,'"left"','"right"','"center"'):"center"),sign=labelBaseline||("top"===config?"bottom":"top"),labelAlign=!labelAlign):(size=labelAlign||("right"===config?"left":"right"),sign=labelBaseline||(flushOn?flushExpr(scale,spec,'"top"','"bottom"','"middle"'):"middle"),labelAlign=!labelBaseline);labelAlign=labelAlign&&flushOn&&flushOffset?flushExpr(scale,
spec,"-("+flushOffset+")",flushOffset,0):null;spec={enter:enter={opacity:zero$jscomp$0,x:isXAxis?tickPos:tickSize,y:isXAxis?tickSize:tickPos},update:{opacity:one,text:{field:"label"},x:enter.x,y:enter.y},exit:{opacity:zero$jscomp$0,x:enter.x,y:enter.y}};enter={};addEncoders(spec,(enter[isXAxis?"dx":"dy"]=labelAlign,enter.align=size,enter.baseline=sign,enter.angle=_("labelAngle"),enter.fill=_("labelColor"),enter.fillOpacity=_("labelOpacity"),enter.font=_("labelFont"),enter.fontSize=_("labelFontSize"),
enter.fontWeight=_("labelFontWeight"),enter.fontStyle=_("labelFontStyle"),enter.limit=_("labelLimit"),enter));isXAxis=_("labelBound");enter=_("labelOverlap");_=_("labelSeparation");spec=guideMark("text","axis-label","guide-label","value",dataRef,spec,userEncode);if(enter||isXAxis)spec.overlap={separation:_,method:enter,order:"datum.index",bound:isXAxis?{scale:scale,orient:config,tolerance:isXAxis}:null};return spec}function axisTitle(spec,config,userEncode,dataRef){config=lookup$jscomp$0(spec,config);
var orient=spec.orient,sign="left"===orient||"top"===orient?-1:1,horizontal="top"===orient||"bottom"===orient,enter,update;var encode={enter:enter={opacity:zero$jscomp$0,anchor:encoder(config("titleAnchor")),align:{signal:alignExpr}},update:update=vegaUtil.extend({},enter,{opacity:one,text:encoder(spec.title)}),exit:{opacity:zero$jscomp$0}};spec={signal:'lerp(range("'+spec.scale+'"), '+anchorExpr(0,1,.5)+")"};horizontal?(update.x=spec,enter.angle={value:0},enter.baseline={value:"top"===orient?"bottom":
"top"}):(update.y=spec,enter.angle={value:90*sign},enter.baseline={value:"bottom"});addEncoders(encode,{angle:config("titleAngle"),baseline:config("titleBaseline"),fill:config("titleColor"),fillOpacity:config("titleOpacity"),font:config("titleFont"),fontSize:config("titleFontSize"),fontStyle:config("titleFontStyle"),fontWeight:config("titleFontWeight"),limit:config("titleLimit"),lineHeight:config("titleLineHeight")},{align:config("titleAlign")});addEncode(encode,"x",config("titleX"),"update")||horizontal||
has("x",userEncode)||(encode.enter.auto={value:!0});!addEncode(encode,"y",config("titleY"),"update")&&horizontal&&!has("y",userEncode)&&(encode.enter.auto={value:!0});return guideMark("text","axis-title","guide-title",null,dataRef,encode,userEncode)}function parseSpec(spec,scope,preprocessed){var signals=vegaUtil.array(spec.signals),scales=vegaUtil.array(spec.scales);preprocessed||signals.forEach(function(_){return parseSignal(_,scope)});vegaUtil.array(spec.projections).forEach(function(_){var config=
scope.config.projection||{},params={},name;for(name in _)"name"!==name&&(params[name]=parseParameter(_[name],name,scope));for(name in config)null==params[name]&&(params[name]=parseParameter(config[name],name,scope));scope.addProjection(_.name,params)});scales.forEach(function(_){var type=_.type||"linear";vegaScale.isValidScaleType(type)||vegaUtil.error("Unrecognized scale type: "+vegaUtil.stringValue(type));scope.addScale(_.name,{type:type,domain:void 0})});vegaUtil.array(spec.data).forEach(function(_){return parseData$1(_,
scope)});scales.forEach(function(_){var params=scope.getScale(_.name).params,key;params.domain=parseScaleDomain(_.domain,_,scope);null!=_.range&&(params.range=parseScaleRange(_,scope,params));if(null!=_.interpolate){var interpolate=_.interpolate;params.interpolate=parseLiteral(interpolate.type||interpolate);null!=interpolate.gamma&&(params.interpolateGamma=parseLiteral(interpolate.gamma))}null!=_.nice&&(interpolate=_.nice,interpolate=vegaUtil.isObject(interpolate)?{interval:parseLiteral(interpolate.interval),
step:parseLiteral(interpolate.step)}:parseLiteral(interpolate),params.nice=interpolate);null!=_.bins&&(interpolate=_.bins,interpolate=interpolate.signal||vegaUtil.isArray(interpolate)?parseArray(interpolate,scope):scope.objectProperty(interpolate),params.bins=interpolate);for(key in _)vegaUtil.hasOwnProperty(params,key)||"name"===key||(params[key]=parseLiteral(_[key],scope))});(preprocessed||signals).forEach(function(_){return parseSignalUpdates(_,scope)});vegaUtil.array(spec.axes).forEach(function(_$jscomp$0){var config=
scope.config;var orient=_$jscomp$0.orient,xy="top"===orient||"bottom"===orient?config.axisX:config.axisY;orient=config["axis"+orient[0].toUpperCase()+orient.slice(1)];var band="band"===scope.scaleType(_$jscomp$0.scale)&&config.axisBand;config=xy||orient||band?vegaUtil.extend({},config.axis,xy,orient,band):config.axis;xy=_$jscomp$0.encode||{};orient=xy.axis||{};band=orient.name||void 0;var interactive=orient.interactive,style=orient.style,_=lookup$jscomp$0(_$jscomp$0,config);var datum={orient:_$jscomp$0.orient,
ticks:!!_("ticks"),labels:!!_("labels"),grid:!!_("grid"),domain:!!_("domain"),title:null!=_$jscomp$0.title};var dataRef=ref$jscomp$0(scope.add(Collect({},[datum])));orient=extendEncode({update:{offset:encoder(_("offset")||0),position:encoder(value$jscomp$0(_$jscomp$0.position,0)),titlePadding:encoder(_("titlePadding")),minExtent:encoder(_("minExtent")),maxExtent:encoder(_("maxExtent")),range:{signal:'abs(span(range("'+_$jscomp$0.scale+'")))'}}},xy.axis,Skip);var ticksRef=ref$jscomp$0(scope.add(AxisTicks({scale:scope.scaleRef(_$jscomp$0.scale),
extra:scope.property(_("tickExtra")),count:scope.objectProperty(_$jscomp$0.tickCount),values:scope.objectProperty(_$jscomp$0.values),minstep:scope.property(_$jscomp$0.tickMinStep),formatType:scope.property(_$jscomp$0.formatType),formatSpecifier:scope.property(_$jscomp$0.format)})));var children=[];datum.grid&&children.push(axisGrid(_$jscomp$0,config,xy.grid,ticksRef));if(datum.ticks){var size=_("tickSize");children.push(axisTicks(_$jscomp$0,config,xy.ticks,ticksRef,size))}datum.labels&&(size=datum.ticks?
size:0,children.push(axisLabels(_$jscomp$0,config,xy.labels,ticksRef,size)));datum.domain&&children.push(axisDomain(_$jscomp$0,config,xy.domain,dataRef));datum.title&&children.push(axisTitle(_$jscomp$0,config,xy.title,dataRef));size=guideGroup("axis",style,band,dataRef,interactive,orient,children);_$jscomp$0.zindex&&(size.zindex=_$jscomp$0.zindex);return parseMark(size,scope)});vegaUtil.array(spec.marks).forEach(function(_){return parseMark(_,scope)});vegaUtil.array(spec.legends).forEach(function(_){return parseLegend(_,
scope)});spec.title&&parseTitle(spec.title,scope);scope.parseLambdas();return scope}function addSignals(scope,signals,config){vegaUtil.array(signals).forEach(function(_){defined[_.name]||parseSignal(_,scope)});if(!config)return signals;var out=vegaUtil.array(signals).slice();vegaUtil.array(config).forEach(function(_){scope.hasOwnSignal(_.name)||(parseSignal(_,scope),out.push(_))});return out}function Scope$1(config){this.config=config;this.bindings=[];this.field={};this.signals={};this.lambdas={};
this.scales={};this.events={};this.data={};this.streams=[];this.updates=[];this.operators=[];this.eventConfig=this.background=null;this._subid=this._id=0;this._nextsub=[0];this._parent=[];this._encode=[];this._lookup=[];this._markpath=[]}function Subscope(scope){this.config=scope.config;this.legends=scope.legends;this.field=Object.create(scope.field);this.signals=Object.create(scope.signals);this.lambdas=Object.create(scope.lambdas);this.scales=Object.create(scope.scales);this.events=Object.create(scope.events);
this.data=Object.create(scope.data);this.streams=[];this.updates=[];this.operators=[];this._id=0;this._subid=++scope._nextsub[0];this._nextsub=scope._nextsub;this._parent=scope._parent.slice();this._encode=scope._encode.slice();this._lookup=scope._lookup.slice();this._markpath=scope._markpath}function propertyLambda(spec){return(vegaUtil.isArray(spec)?arrayLambda:objectLambda)(spec)}function arrayLambda(array){for(var code="[",i=0,n=array.length,value;i<n;++i)value=array[i],code+=(0<i?",":"")+(vegaUtil.isObject(value)?
value.signal||propertyLambda(value):vegaUtil.stringValue(value));return code+"]"}function objectLambda(obj){var code="{",i=0,key;for(key in obj){var value=obj[key];code+=(1<++i?",":"")+vegaUtil.stringValue(key)+":"+(vegaUtil.isObject(value)?value.signal||propertyLambda(value):vegaUtil.stringValue(value))}return code+"}"}function defaults(){return{padding:0,autosize:"pad",background:null,events:{defaults:{allow:["wheel"]}},group:null,mark:null,arc:{fill:"#4c78a8"},area:{fill:"#4c78a8"},image:null,
line:{stroke:"#4c78a8",strokeWidth:2},path:{stroke:"#4c78a8"},rect:{fill:"#4c78a8"},rule:{stroke:"#000"},shape:{stroke:"#4c78a8"},symbol:{fill:"#4c78a8",size:64},text:{fill:"#000",font:"sans-serif",fontSize:11},style:{"guide-label":{fill:"#000",font:"sans-serif",fontSize:10},"guide-title":{fill:"#000",font:"sans-serif",fontSize:11,fontWeight:"bold"},"group-title":{fill:"#000",font:"sans-serif",fontSize:13,fontWeight:"bold"},"group-subtitle":{fill:"#000",font:"sans-serif",fontSize:12},point:{size:30,
strokeWidth:2,shape:"circle"},circle:{size:30,strokeWidth:2},square:{size:30,strokeWidth:2,shape:"square"},cell:{fill:"transparent",stroke:"#ddd"}},title:{orient:"top",anchor:"middle",offset:4,subtitlePadding:3},axis:{minExtent:0,maxExtent:200,bandPosition:.5,domain:!0,domainWidth:1,domainColor:"#888",grid:!1,gridWidth:1,gridColor:"#ddd",labels:!0,labelAngle:0,labelLimit:180,labelPadding:2,ticks:!0,tickColor:"#888",tickOffset:0,tickRound:!0,tickSize:5,tickWidth:1,titlePadding:4},axisBand:{tickOffset:-1},
projection:{type:"mercator"},legend:{orient:"right",padding:0,gridAlign:"each",columnPadding:10,rowPadding:2,symbolDirection:"vertical",gradientDirection:"vertical",gradientLength:200,gradientThickness:16,gradientStrokeColor:"#ddd",gradientStrokeWidth:0,gradientLabelOffset:2,labelAlign:"left",labelBaseline:"middle",labelLimit:160,labelOffset:4,labelOverlap:!0,symbolLimit:30,symbolType:"circle",symbolSize:100,symbolOffset:0,symbolStrokeWidth:1.5,symbolBaseFillColor:"transparent",symbolBaseStrokeColor:"#888",
titleLimit:180,titleOrient:"top",titlePadding:5,layout:{offset:18,direction:"horizontal",left:{direction:"vertical"},right:{direction:"vertical"}}},range:{category:{scheme:"tableau10"},ordinal:{scheme:"blues"},heatmap:{scheme:"yellowgreenblue"},ramp:{scheme:"blues"},diverging:{scheme:"blueorange",extent:[1,0]},symbol:"circle square triangle-up cross diamond triangle-right triangle-down triangle-left".split(" ")}}}var OUTER_INVALID=["value","update","init","react","bind"],keyFieldRef=fieldRef("key"),
Aggregate=transform$jscomp$0("aggregate"),AxisTicks=transform$jscomp$0("axisticks"),Bound=transform$jscomp$0("bound"),Collect=transform$jscomp$0("collect"),Compare=transform$jscomp$0("compare"),DataJoin=transform$jscomp$0("datajoin"),Encode=transform$jscomp$0("encode"),Expression=transform$jscomp$0("expression"),Facet=transform$jscomp$0("facet"),Field=transform$jscomp$0("field"),Key=transform$jscomp$0("key"),LegendEntries=transform$jscomp$0("legendentries"),Load=transform$jscomp$0("load"),Mark=transform$jscomp$0("mark"),
MultiExtent=transform$jscomp$0("multiextent"),MultiValues=transform$jscomp$0("multivalues"),Overlap=transform$jscomp$0("overlap"),Params=transform$jscomp$0("params"),PreFacet=transform$jscomp$0("prefacet"),Projection=transform$jscomp$0("projection"),Proxy=transform$jscomp$0("proxy"),Relay=transform$jscomp$0("relay"),Render=transform$jscomp$0("render"),Scale=transform$jscomp$0("scale"),Sieve=transform$jscomp$0("sieve"),SortItems=transform$jscomp$0("sortitems"),ViewLayout=transform$jscomp$0("viewlayout"),
Values=transform$jscomp$0("values"),FIELD_REF_ID=0,MULTIDOMAIN_SORT_OPS={min:"min",max:"max",count:"sum"},LegendScales="size shape fill stroke strokeWidth strokeDash opacity".split(" "),Skip={name:1,style:1,interactive:1},zero$jscomp$0={value:0},one={value:1},Skip$1=vegaUtil.toSet(["rule"]),Swap=vegaUtil.toSet(["group","image","rect"]),alignExpr=anchorExpr(vegaUtil.stringValue("left"),vegaUtil.stringValue("right"),vegaUtil.stringValue("center")),baseline=anchorExpr('"top"','"bottom"','"middle"'),
exprAlign='datum.vgrad \x26\x26 item.orient \x3d\x3d\x3d "right" ? ('+anchorExpr('"right"','"left"','"center"')+') : ((item.orient \x3d\x3d\x3d "left" || item.orient \x3d\x3d\x3d "right") \x26\x26 !(datum.vgrad \x26\x26 item.orient \x3d\x3d\x3d "left")) ? "left" : '+alignExpr,exprBaseline='(item.orient \x3d\x3d\x3d "left" || item.orient \x3d\x3d\x3d "right") ? (datum.vgrad ? (item.orient \x3d\x3d\x3d "right" ? "bottom" : "top") : '+baseline+') : "top"';DataScope.fromEntries=function(scope,entries){var n=
entries.length,i=1,input=entries[0],values=entries[n-1],output=entries[n-2],aggr=null;input&&"load"===input.type&&(input=entries[1]);for(scope.add(entries[0]);i<n;++i)entries[i].params.pulse=ref$jscomp$0(entries[i-1]),scope.add(entries[i]),"aggregate"===entries[i].type&&(aggr=entries[i]);return new DataScope(scope,input,output,values,aggr)};var prototype=DataScope.prototype;prototype.countsRef=function(scope,field,sort){var cache=this.counts||(this.counts={}),k=fieldKey(field);if(null!=k){scope=this.scope;
var v=cache[k]}v?sort&&sort.field&&addSortField(scope,v.agg.params,sort):(v={groupby:scope.fieldRef(field,"key"),pulse:ref$jscomp$0(this.output)},sort&&sort.field&&addSortField(scope,v,sort),sort=scope.add(Aggregate(v)),v=scope.add(Collect({pulse:ref$jscomp$0(sort)})),v={agg:sort,ref:ref$jscomp$0(v)},null!=k&&(cache[k]=v));return v.ref};prototype.tuplesRef=function(){return ref$jscomp$0(this.values)};prototype.extentRef=function(scope,field){return cache$jscomp$0(scope,this,"extent","extent",field,
!1)};prototype.domainRef=function(scope,field){return cache$jscomp$0(scope,this,"domain","values",field,!1)};prototype.valuesRef=function(scope,field,sort){return cache$jscomp$0(scope,this,"vals","values",field,sort||!0)};prototype.lookupRef=function(scope,field){return cache$jscomp$0(scope,this,"lookup","tupleindex",field,!1)};prototype.indataRef=function(scope,field){return cache$jscomp$0(scope,this,"indata","tupleindex",field,!0,!0)};var defined=vegaUtil.toSet(["width","height","padding","autosize"]),
prototype$1=Scope$1.prototype=Subscope.prototype;prototype$1.fork=function(){return new Subscope(this)};prototype$1.isSubscope=function(){return 0<this._subid};prototype$1.toRuntime=function(){this.finish();return{background:this.background,operators:this.operators,streams:this.streams,updates:this.updates,bindings:this.bindings,eventConfig:this.eventConfig}};prototype$1.id=function(){return(this._subid?this._subid+":":0)+this._id++};prototype$1.add=function(op){this.operators.push(op);op.id=this.id();
op.refs&&(op.refs.forEach(function(ref){ref.$ref=op.id}),op.refs=null);return op};prototype$1.proxy=function(op){op=op instanceof Entry?ref$jscomp$0(op):op;return this.add(Proxy({value:op}))};prototype$1.addStream=function(stream){this.streams.push(stream);stream.id=this.id();return stream};prototype$1.addUpdate=function(update){this.updates.push(update);return update};prototype$1.finish=function(){function annotate(op,name,type){op&&(op=op.data||(op.data={}),name=op[name]||(op[name]=[]),name.push(type))}
var name$jscomp$0;this.root&&(this.root.root=!0);for(name$jscomp$0 in this.signals)this.signals[name$jscomp$0].signal=name$jscomp$0;for(name$jscomp$0 in this.scales)this.scales[name$jscomp$0].scale=name$jscomp$0;for(name$jscomp$0 in this.data){var ds=this.data[name$jscomp$0];annotate(ds.input,name$jscomp$0,"input");annotate(ds.output,name$jscomp$0,"output");annotate(ds.values,name$jscomp$0,"values");for(var field in ds.index)annotate(ds.index[field],name$jscomp$0,"index:"+field)}return this};prototype$1.pushState=
function(encode,parent,lookup){this._encode.push(ref$jscomp$0(this.add(Sieve({pulse:encode}))));this._parent.push(parent);this._lookup.push(lookup?ref$jscomp$0(this.proxy(lookup)):null);this._markpath.push(-1)};prototype$1.popState=function(){this._encode.pop();this._parent.pop();this._lookup.pop();this._markpath.pop()};prototype$1.parent=function(){return vegaUtil.peek(this._parent)};prototype$1.encode=function(){return vegaUtil.peek(this._encode)};prototype$1.lookup=function(){return vegaUtil.peek(this._lookup)};
prototype$1.markpath=function(){var p=this._markpath;return++p[p.length-1]};prototype$1.fieldRef=function(field,name){if(vegaUtil.isString(field))return fieldRef(field,name);field.signal||vegaUtil.error("Unsupported field reference: "+vegaUtil.stringValue(field));field=field.signal;var f=this.field[field];f||(f={name:this.signalRef(field)},name&&(f.as=name),this.field[field]=f=ref$jscomp$0(this.add(Field(f))));return f};prototype$1.compareRef=function(cmp){function check(_){return _&&_.signal?(signal=
!0,scope.signalRef(_.signal)):_&&_.expr?(signal=!0,scope.exprRef(_.expr)):_}var scope=this,signal=!1,fields=vegaUtil.array(cmp.field).map(check);cmp=vegaUtil.array(cmp.order).map(check);return signal?ref$jscomp$0(this.add(Compare({fields:fields,orders:cmp}))):{$compare:fields,$order:cmp}};prototype$1.keyRef=function(fields,flat){var sig=this.signals,signal=!1;fields=vegaUtil.array(fields).map(function(_){return _&&_.signal?(signal=!0,ref$jscomp$0(sig[_.signal])):_});return signal?ref$jscomp$0(this.add(Key({fields:fields,
flat:flat}))):keyRef(fields,flat)};prototype$1.sortRef=function(sort){if(!sort)return sort;var a=aggrField(sort.op,sort.field);sort=sort.order||"ascending";return sort.signal?ref$jscomp$0(this.add(Compare({fields:a,orders:this.signalRef(sort.signal)}))):{$compare:a,$order:sort}};prototype$1.event=function(source,type){var key=source+":"+type;if(!this.events[key]){var id=this.id();this.streams.push({id:id,source:source,type:type});this.events[key]=id}return this.events[key]};prototype$1.hasOwnSignal=
function(name){return vegaUtil.hasOwnProperty(this.signals,name)};prototype$1.addSignal=function(name,value){this.hasOwnSignal(name)&&vegaUtil.error("Duplicate signal name: "+vegaUtil.stringValue(name));value=value instanceof Entry?value:this.add(new Entry("operator",value,void 0,void 0));return this.signals[name]=value};prototype$1.getSignal=function(name){this.signals[name]||vegaUtil.error("Unrecognized signal name: "+vegaUtil.stringValue(name));return this.signals[name]};prototype$1.signalRef=
function(s){if(this.signals[s])return ref$jscomp$0(this.signals[s]);vegaUtil.hasOwnProperty(this.lambdas,s)||(this.lambdas[s]=this.add(new Entry("operator",null,void 0,void 0)));return ref$jscomp$0(this.lambdas[s])};prototype$1.parseLambdas=function(){for(var code=Object.keys(this.lambdas),i=0,n=code.length;i<n;++i){var s=code[i],e=parseExpression(s,this);s=this.lambdas[s];s.params=e.$params;s.update=e.$expr}};prototype$1.property=function(spec){return spec&&spec.signal?this.signalRef(spec.signal):
spec};prototype$1.objectProperty=function(spec){return spec&&vegaUtil.isObject(spec)?this.signalRef(spec.signal||propertyLambda(spec)):spec};prototype$1.exprRef=function(code,name){code={expr:parseExpression(code,this)};name&&(code.expr.$name=name);return ref$jscomp$0(this.add(Expression(code)))};prototype$1.addBinding=function(name,bind){this.bindings||vegaUtil.error("Nested signals do not support binding: "+vegaUtil.stringValue(name));this.bindings.push(vegaUtil.extend({signal:name},bind))};prototype$1.addScaleProj=
function(name,transform){vegaUtil.hasOwnProperty(this.scales,name)&&vegaUtil.error("Duplicate scale or projection name: "+vegaUtil.stringValue(name));this.scales[name]=this.add(transform)};prototype$1.addScale=function(name,params){this.addScaleProj(name,Scale(params))};prototype$1.addProjection=function(name,params){this.addScaleProj(name,Projection(params))};prototype$1.getScale=function(name){this.scales[name]||vegaUtil.error("Unrecognized scale name: "+vegaUtil.stringValue(name));return this.scales[name]};
prototype$1.projectionRef=prototype$1.scaleRef=function(name){return ref$jscomp$0(this.getScale(name))};prototype$1.projectionType=prototype$1.scaleType=function(name){return this.getScale(name).params.type};prototype$1.addData=function(name,dataScope){vegaUtil.hasOwnProperty(this.data,name)&&vegaUtil.error("Duplicate data set name: "+vegaUtil.stringValue(name));return this.data[name]=dataScope};prototype$1.getData=function(name){this.data[name]||vegaUtil.error("Undefined data set name: "+vegaUtil.stringValue(name));
return this.data[name]};prototype$1.addDataPipeline=function(name,entries){vegaUtil.hasOwnProperty(this.data,name)&&vegaUtil.error("Duplicate data set name: "+vegaUtil.stringValue(name));return this.addData(name,DataScope.fromEntries(this,entries))};exports.AxisDomainRole="axis-domain";exports.AxisGridRole="axis-grid";exports.AxisLabelRole="axis-label";exports.AxisRole="axis";exports.AxisTickRole="axis-tick";exports.AxisTitleRole="axis-title";exports.DataScope=DataScope;exports.FrameRole="frame";
exports.LegendEntryRole="legend-entry";exports.LegendLabelRole="legend-label";exports.LegendRole="legend";exports.LegendSymbolRole="legend-symbol";exports.LegendTitleRole="legend-title";exports.MarkRole="mark";exports.Scope=Scope$1;exports.ScopeRole="scope";exports.config=defaults;exports.parse=function(spec,config$jscomp$0){vegaUtil.isObject(spec)||vegaUtil.error("Input Vega specification must be an object.");config$jscomp$0=vegaUtil.mergeConfig(defaults(),config$jscomp$0,spec.config);config$jscomp$0=
new Scope$1(config$jscomp$0);var config=config$jscomp$0.config;config$jscomp$0.background=spec.background||config.background;config$jscomp$0.eventConfig=config.events;var root=ref$jscomp$0(config$jscomp$0.root=config$jscomp$0.add(new Entry("operator",void 0,void 0,void 0)));config$jscomp$0.addSignal("width",spec.width||0);config$jscomp$0.addSignal("height",spec.height||0);config$jscomp$0.addSignal("padding",parsePadding(spec.padding,config));config$jscomp$0.addSignal("autosize",parseAutosize(spec.autosize,
config));config$jscomp$0.legends=config$jscomp$0.objectProperty(config.legend&&config.legend.layout);var signals=addSignals(config$jscomp$0,spec.signals,config.signals);config=config$jscomp$0.add(Collect());var encode=extendEncode({enter:{x:{value:0},y:{value:0}},update:{width:{signal:"width"},height:{signal:"height"}}},spec.encode);encode=config$jscomp$0.add(Encode(encoders(encode,"group","frame",spec.style,config$jscomp$0,{pulse:ref$jscomp$0(config)})));var parent=config$jscomp$0.add(ViewLayout({layout:config$jscomp$0.objectProperty(spec.layout),
legends:config$jscomp$0.legends,autosize:config$jscomp$0.signalRef("autosize"),mark:root,pulse:ref$jscomp$0(encode)}));config$jscomp$0.operators.pop();config$jscomp$0.pushState(ref$jscomp$0(encode),ref$jscomp$0(parent),null);parseSpec(spec,config$jscomp$0,signals);config$jscomp$0.operators.push(parent);spec=config$jscomp$0.add(Bound({mark:root,pulse:ref$jscomp$0(parent)}));spec=config$jscomp$0.add(Render({pulse:ref$jscomp$0(spec)}));spec=config$jscomp$0.add(Sieve({pulse:ref$jscomp$0(spec)}));config$jscomp$0.addData("root",
new DataScope(config$jscomp$0,config,config,spec));return config$jscomp$0.toRuntime()};exports.signal=parseSignal;exports.signalUpdates=parseSignalUpdates;exports.stream=parseStream;Object.defineProperty(exports,"__esModule",{value:!0})})}
//# sourceMappingURL=module$node_modules$vega_parser$build$vega_parser.js.map
