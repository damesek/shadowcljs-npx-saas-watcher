{
"version":3,
"file":"module$node_modules$vega_encode$build$vega_encode.js",
"lineCount":44,
"mappings":"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",
"sources":["node_modules/vega-encode/build/vega-encode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_encode$build$vega_encode\"] = function(global,process,require,module,exports,shadow$shims) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-scale'), require('vega-util'), require('d3-time-format'), require('d3-format'), require('vega-dataflow'), require('d3-array'), require('d3-interpolate')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-scale', 'vega-util', 'd3-time-format', 'd3-format', 'vega-dataflow', 'd3-array', 'd3-interpolate'], factory) :\n  (global = global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.d3, global.d3, global.vega, global.d3, global.d3));\n}(this, function (exports, vegaScale, vegaUtil, d3TimeFormat, d3Format, vegaDataflow, d3Array, d3Interpolate) { 'use strict';\n\n  /**\n   * Determine the tick count or interval function.\n   * @param {Scale} scale - The scale for which to generate tick values.\n   * @param {*} count - The desired tick count or interval specifier.\n   * @param {number} minStep - The desired minimum step between tick values.\n   * @return {*} - The tick count or interval function.\n   */\n  function tickCount(scale, count, minStep) {\n    var step;\n\n    if (vegaUtil.isNumber(count)) {\n      if (scale.bins) {\n        count = Math.max(count, scale.bins.length);\n      }\n      if (minStep != null) {\n        count = Math.min(count, ~~(vegaUtil.span(scale.domain()) / minStep) || 1);\n      }\n    }\n\n    if (vegaUtil.isObject(count)) {\n      step = count.step;\n      count = count.interval;\n    }\n\n    if (vegaUtil.isString(count)) {\n      count = vegaScale.timeInterval(count, scale.type)\n            || vegaUtil.error('Only time and utc scales accept interval strings.');\n      if (step) count = count.every(step);\n    }\n\n    return count;\n  }\n\n  /**\n   * Filter a set of candidate tick values, ensuring that only tick values\n   * that lie within the scale range are included.\n   * @param {Scale} scale - The scale for which to generate tick values.\n   * @param {Array<*>} ticks - The candidate tick values.\n   * @param {*} count - The tick count or interval function.\n   * @return {Array<*>} - The filtered tick values.\n   */\n  function validTicks(scale, ticks, count) {\n    var range = scale.range(),\n        lo = Math.floor(range[0]),\n        hi = Math.ceil(vegaUtil.peek(range));\n\n    if (lo > hi) {\n      range = hi;\n      hi = lo;\n      lo = range;\n    }\n\n    ticks = ticks.filter(function(v) {\n      v = scale(v);\n      return lo <= v && v <= hi;\n    });\n\n    if (count > 0 && ticks.length > 1) {\n      var endpoints = [ticks[0], vegaUtil.peek(ticks)];\n      while (ticks.length > count && ticks.length >= 3) {\n        ticks = ticks.filter(function(_, i) { return !(i % 2); });\n      }\n      if (ticks.length < 3) {\n        ticks = endpoints;\n      }\n    }\n\n    return ticks;\n  }\n\n  /**\n   * Generate tick values for the given scale and approximate tick count or\n   * interval value. If the scale has a 'ticks' method, it will be used to\n   * generate the ticks, with the count argument passed as a parameter. If the\n   * scale lacks a 'ticks' method, the full scale domain will be returned.\n   * @param {Scale} scale - The scale for which to generate tick values.\n   * @param {*} [count] - The approximate number of desired ticks.\n   * @return {Array<*>} - The generated tick values.\n   */\n  function tickValues(scale, count) {\n    return scale.bins ? validTicks(scale, scale.bins)\n      : scale.ticks ? scale.ticks(count)\n      : scale.domain();\n  }\n\n  /**\n   * Generate a label format function for a scale. If the scale has a\n   * 'tickFormat' method, it will be used to generate the formatter, with the\n   * count and specifier arguments passed as parameters. If the scale lacks a\n   * 'tickFormat' method, the returned formatter performs simple string coercion.\n   * If the input scale is a logarithmic scale and the format specifier does not\n   * indicate a desired decimal precision, a special variable precision formatter\n   * that automatically trims trailing zeroes will be generated.\n   * @param {Scale} scale - The scale for which to generate the label formatter.\n   * @param {*} [count] - The approximate number of desired ticks.\n   * @param {string} [specifier] - The format specifier. Must be a legal d3\n   *   specifier string (see https://github.com/d3/d3-format#formatSpecifier).\n   * @return {function(*):string} - The generated label formatter.\n   */\n  function tickFormat(scale, count, specifier, formatType) {\n    var format = scale.tickFormat ? scale.tickFormat(count, specifier)\n      : specifier && formatType === vegaScale.Time ? d3TimeFormat.timeFormat(specifier)\n      : specifier ? d3Format.format(specifier)\n      : String;\n\n    if (vegaScale.isLogarithmic(scale.type)) {\n      var logfmt = variablePrecision(specifier);\n      format = scale.bins ? logfmt : filter(format, logfmt);\n    }\n\n    return format;\n  }\n\n  function filter(sourceFormat, targetFormat) {\n    return function(_) {\n      return sourceFormat(_) ? targetFormat(_) : '';\n    };\n  }\n\n  function variablePrecision(specifier) {\n    var s = d3Format.formatSpecifier(specifier || ',');\n\n    if (s.precision == null) {\n      s.precision = 12;\n      switch (s.type) {\n        case '%': s.precision -= 2; break;\n        case 'e': s.precision -= 1; break;\n      }\n      return trimZeroes(\n        d3Format.format(s),          // number format\n        d3Format.format('.1f')(1)[1] // decimal point character\n      );\n    } else {\n      return d3Format.format(s);\n    }\n  }\n\n  function trimZeroes(format, decimalChar) {\n    return function(x) {\n      var str = format(x),\n          dec = str.indexOf(decimalChar),\n          idx, end;\n\n      if (dec < 0) return str;\n\n      idx = rightmostDigit(str, dec);\n      end = idx < str.length ? str.slice(idx) : '';\n      while (--idx > dec) if (str[idx] !== '0') { ++idx; break; }\n\n      return str.slice(0, idx) + end;\n    };\n  }\n\n  function rightmostDigit(str, dec) {\n    var i = str.lastIndexOf('e'), c;\n    if (i > 0) return i;\n    for (i=str.length; --i > dec;) {\n      c = str.charCodeAt(i);\n      if (c >= 48 && c <= 57) return i + 1; // is digit\n    }\n  }\n\n  /**\n   * Generates axis ticks for visualizing a spatial scale.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Scale} params.scale - The scale to generate ticks for.\n   * @param {*} [params.count=10] - The approximate number of ticks, or\n   *   desired tick interval, to use.\n   * @param {Array<*>} [params.values] - The exact tick values to use.\n   *   These must be legal domain values for the provided scale.\n   *   If provided, the count argument is ignored.\n   * @param {function(*):string} [params.formatSpecifier] - A format specifier\n   *   to use in conjunction with scale.tickFormat. Legal values are\n   *   any valid d3 4.0 format specifier.\n   * @param {function(*):string} [params.format] - The format function to use.\n   *   If provided, the formatSpecifier argument is ignored.\n   */\n  function AxisTicks(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype = vegaUtil.inherits(AxisTicks, vegaDataflow.Transform);\n\n  prototype.transform = function(_, pulse) {\n    if (this.value && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        ticks = this.value,\n        scale = _.scale,\n        tally = _.count == null ? (_.values ? _.values.length : 10) : _.count,\n        count = tickCount(scale, tally, _.minstep),\n        format = _.format || tickFormat(scale, count, _.formatSpecifier, _.formatType),\n        values = _.values ? validTicks(scale, _.values, count) : tickValues(scale, count);\n\n    if (ticks) out.rem = ticks;\n\n    ticks = values.map(function(value, i) {\n      return vegaDataflow.ingest({\n        index: i / (values.length - 1 || 1),\n        value: value,\n        label: format(value)\n      });\n    });\n\n    if (_.extra && ticks.length) {\n      // add an extra tick pegged to the initial domain value\n      // this is used to generate axes with 'binned' domains\n      ticks.push(vegaDataflow.ingest({\n        index: -1,\n        extra: {value: ticks[0].value},\n        label: ''\n      }));\n    }\n\n    out.source = ticks;\n    out.add = ticks;\n    this.value = ticks;\n\n    return out;\n  };\n\n  /**\n   * Joins a set of data elements against a set of visual items.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): object} [params.item] - An item generator function.\n   * @param {function(object): *} [params.key] - The key field associating data and visual items.\n   */\n  function DataJoin(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype$1 = vegaUtil.inherits(DataJoin, vegaDataflow.Transform);\n\n  function defaultItemCreate() {\n    return vegaDataflow.ingest({});\n  }\n\n  function isExit(t) {\n    return t.exit;\n  }\n\n  prototype$1.transform = function(_, pulse) {\n    var df = pulse.dataflow,\n        out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        item = _.item || defaultItemCreate,\n        key = _.key || vegaDataflow.tupleid,\n        map = this.value;\n\n    // prevent transient (e.g., hover) requests from\n    // cascading across marks derived from marks\n    if (vegaUtil.isArray(out.encode)) {\n      out.encode = null;\n    }\n\n    if (map && (_.modified('key') || pulse.modified(key))) {\n      vegaUtil.error('DataJoin does not support modified key function or fields.');\n    }\n\n    if (!map) {\n      pulse = pulse.addAll();\n      this.value = map = vegaUtil.fastmap().test(isExit);\n      map.lookup = function(t) { return map.get(key(t)); };\n    }\n\n    pulse.visit(pulse.ADD, function(t) {\n      var k = key(t),\n          x = map.get(k);\n\n      if (x) {\n        if (x.exit) {\n          map.empty--;\n          out.add.push(x);\n        } else {\n          out.mod.push(x);\n        }\n      } else {\n        map.set(k, (x = item(t)));\n        out.add.push(x);\n      }\n\n      x.datum = t;\n      x.exit = false;\n    });\n\n    pulse.visit(pulse.MOD, function(t) {\n      var k = key(t),\n          x = map.get(k);\n\n      if (x) {\n        x.datum = t;\n        out.mod.push(x);\n      }\n    });\n\n    pulse.visit(pulse.REM, function(t) {\n      var k = key(t),\n          x = map.get(k);\n\n      if (t === x.datum && !x.exit) {\n        out.rem.push(x);\n        x.exit = true;\n        ++map.empty;\n      }\n    });\n\n    if (pulse.changed(pulse.ADD_MOD)) out.modifies('datum');\n\n    if (_.clean && map.empty > df.cleanThreshold) df.runAfter(map.clean);\n\n    return out;\n  };\n\n  /**\n   * Invokes encoding functions for visual items.\n   * @constructor\n   * @param {object} params - The parameters to the encoding functions. This\n   *   parameter object will be passed through to all invoked encoding functions.\n   * @param {object} [params.mod=false] - Flag indicating if tuples in the input\n   *   mod set that are unmodified by encoders should be included in the output.\n   * @param {object} param.encoders - The encoding functions\n   * @param {function(object, object): boolean} [param.encoders.update] - Update encoding set\n   * @param {function(object, object): boolean} [param.encoders.enter] - Enter encoding set\n   * @param {function(object, object): boolean} [param.encoders.exit] - Exit encoding set\n   */\n  function Encode(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype$2 = vegaUtil.inherits(Encode, vegaDataflow.Transform);\n\n  prototype$2.transform = function(_, pulse) {\n    var out = pulse.fork(pulse.ADD_REM),\n        fmod = _.mod || false,\n        encoders = _.encoders,\n        encode = pulse.encode;\n\n    // if an array, the encode directive includes additional sets\n    // that must be defined in order for the primary set to be invoked\n    // e.g., only run the update set if the hover set is defined\n    if (vegaUtil.isArray(encode)) {\n      if (out.changed() || encode.every(function(e) { return encoders[e]; })) {\n        encode = encode[0];\n        out.encode = null; // consume targeted encode directive\n      } else {\n        return pulse.StopPropagation;\n      }\n    }\n\n    // marshall encoder functions\n    var reenter = encode === 'enter',\n        update = encoders.update || vegaUtil.falsy,\n        enter = encoders.enter || vegaUtil.falsy,\n        exit = encoders.exit || vegaUtil.falsy,\n        set = (encode && !reenter ? encoders[encode] : update) || vegaUtil.falsy;\n\n    if (pulse.changed(pulse.ADD)) {\n      pulse.visit(pulse.ADD, function(t) { enter(t, _); update(t, _); });\n      out.modifies(enter.output);\n      out.modifies(update.output);\n      if (set !== vegaUtil.falsy && set !== update) {\n        pulse.visit(pulse.ADD, function(t) { set(t, _); });\n        out.modifies(set.output);\n      }\n    }\n\n    if (pulse.changed(pulse.REM) && exit !== vegaUtil.falsy) {\n      pulse.visit(pulse.REM, function(t) { exit(t, _); });\n      out.modifies(exit.output);\n    }\n\n    if (reenter || set !== vegaUtil.falsy) {\n      var flag = pulse.MOD | (_.modified() ? pulse.REFLOW : 0);\n      if (reenter) {\n        pulse.visit(flag, function(t) {\n          var mod = enter(t, _) || fmod;\n          if (set(t, _) || mod) out.mod.push(t);\n        });\n        if (out.mod.length) out.modifies(enter.output);\n      } else {\n        pulse.visit(flag, function(t) {\n          if (set(t, _) || fmod) out.mod.push(t);\n        });\n      }\n      if (out.mod.length) out.modifies(set.output);\n    }\n\n    return out.changed() ? out : pulse.StopPropagation;\n  };\n\n  var Symbols  = 'symbol';\n  var Discrete = 'discrete';\n  var Gradient = 'gradient';\n\n  const symbols = {\n    [vegaScale.Quantile]:  'quantiles',\n    [vegaScale.Quantize]:  'thresholds',\n    [vegaScale.Threshold]: 'domain'\n  };\n\n  const formats = {\n    [vegaScale.Quantile]:  'quantiles',\n    [vegaScale.Quantize]:  'domain'\n  };\n\n  function labelValues(scale, count) {\n    return scale.bins ? binValues(scale.bins)\n      : symbols[scale.type] ? thresholdValues(scale[symbols[scale.type]]())\n      : tickValues(scale, count);\n  }\n\n  function thresholdFormat(scale, specifier) {\n    var _ = scale[formats[scale.type]](),\n        n = _.length,\n        d = n > 1 ? _[1] - _[0] : _[0], i;\n\n    for (i=1; i<n; ++i) {\n      d = Math.min(d, _[i] - _[i-1]);\n    }\n\n    // 3 ticks times 10 for increased resolution\n    return vegaScale.tickFormat(0, d, 3 * 10, specifier);\n  }\n\n  function thresholdValues(thresholds) {\n    const values = [-Infinity].concat(thresholds);\n    values.max = +Infinity;\n\n    return values;\n  }\n\n  function binValues(bins) {\n    const values = bins.slice(0, -1);\n    values.max = vegaUtil.peek(bins);\n\n    return values;\n  }\n\n  function isDiscreteRange(scale) {\n    return symbols[scale.type] || scale.bins;\n  }\n\n  function labelFormat(scale, count, type, specifier, formatType) {\n    const format = formats[scale.type] && formatType !== vegaScale.Time\n      ? thresholdFormat(scale, specifier)\n      : tickFormat(scale, count, specifier, formatType);\n\n    return type === Symbols && isDiscreteRange(scale) ? formatRange(format)\n      : type === Discrete ? formatDiscrete(format)\n      : formatPoint(format);\n  }\n\n  function formatRange(format) {\n    return function(value, index, array) {\n      var limit = array[index + 1] || array.max || +Infinity,\n          lo = formatValue(value, format),\n          hi = formatValue(limit, format);\n      return lo && hi ? lo + '\\u2013' + hi : hi ? '< ' + hi : '\\u2265 ' + lo;\n    };\n  }\n\n  function formatDiscrete(format) {\n    return function(value, index) {\n      return index ? format(value) : null;\n    }\n  }\n\n  function formatPoint(format) {\n    return function(value) {\n      return format(value);\n    };\n  }\n\n  function formatValue(value, format) {\n    return Number.isFinite(value) ? format(value) : null;\n  }\n\n  function labelFraction(scale) {\n    var domain = scale.domain(),\n        count = domain.length - 1,\n        lo = +domain[0],\n        hi = +vegaUtil.peek(domain),\n        span = hi - lo;\n\n    if (scale.type === vegaScale.Threshold) {\n      var adjust = count ? span / count : 0.1;\n      lo -= adjust;\n      hi += adjust;\n      span = hi - lo;\n    }\n\n    return function(value) {\n      return (value - lo) / span;\n    };\n  }\n\n  /**\n   * Generates legend entries for visualizing a scale.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Scale} params.scale - The scale to generate items for.\n   * @param {*} [params.count=5] - The approximate number of items, or\n   *   desired tick interval, to use.\n   * @param {*} [params.limit] - The maximum number of entries to\n   *   include in a symbol legend.\n   * @param {Array<*>} [params.values] - The exact tick values to use.\n   *   These must be legal domain values for the provided scale.\n   *   If provided, the count argument is ignored.\n   * @param {string} [params.formatSpecifier] - A format specifier\n   *   to use in conjunction with scale.tickFormat. Legal values are\n   *   any valid D3 format specifier string.\n   * @param {function(*):string} [params.format] - The format function to use.\n   *   If provided, the formatSpecifier argument is ignored.\n   */\n  function LegendEntries(params) {\n    vegaDataflow.Transform.call(this, [], params);\n  }\n\n  var prototype$3 = vegaUtil.inherits(LegendEntries, vegaDataflow.Transform);\n\n  prototype$3.transform = function(_, pulse) {\n    if (this.value != null && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        items = this.value,\n        type  = _.type || Symbols,\n        scale = _.scale,\n        limit = +_.limit,\n        count = tickCount(scale, _.count == null ? 5 : _.count, _.minstep),\n        format = _.format || labelFormat(scale, count, type, _.formatSpecifier, _.formatType),\n        values = _.values || labelValues(scale, count),\n        domain, fraction, size, offset, ellipsis;\n\n    if (items) out.rem = items;\n\n    if (type === Symbols) {\n      if (limit && values.length > limit) {\n        pulse.dataflow.warn('Symbol legend count exceeds limit, filtering items.');\n        items = values.slice(0, limit - 1);\n        ellipsis = true;\n      } else {\n        items = values;\n      }\n\n      if (vegaUtil.isFunction(size = _.size)) {\n        // if first value maps to size zero, remove from list (vega#717)\n        if (!_.values && scale(items[0]) === 0) {\n          items = items.slice(1);\n        }\n        // compute size offset for legend entries\n        offset = items.reduce(function(max, value) {\n          return Math.max(max, size(value, _));\n        }, 0);\n      } else {\n        size = vegaUtil.constant(offset = size || 8);\n      }\n\n      items = items.map(function(value, index) {\n        return vegaDataflow.ingest({\n          index:  index,\n          label:  format(value, index, values),\n          value:  value,\n          offset: offset,\n          size:   size(value, _)\n        });\n      });\n\n      if (ellipsis) {\n        ellipsis = values[items.length];\n        items.push(vegaDataflow.ingest({\n          index:    items.length,\n          label:    `\\u2026${values.length-items.length} entries`,\n          value:    ellipsis,\n          offset:   offset,\n          size:     size(ellipsis, _)\n        }));\n      }\n    }\n\n    else if (type === Gradient) {\n      domain = scale.domain(),\n      fraction = vegaScale.scaleFraction(scale, domain[0], vegaUtil.peek(domain));\n\n      // if automatic label generation produces 2 or fewer values,\n      // use the domain end points instead (fixes vega/vega#1364)\n      if (values.length < 3 && !_.values && domain[0] !== vegaUtil.peek(domain)) {\n        values = [domain[0], vegaUtil.peek(domain)];\n      }\n\n      items = values.map(function(value, index) {\n        return vegaDataflow.ingest({\n          index: index,\n          label: format(value, index, values),\n          value: value,\n          perc:  fraction(value)\n        });\n      });\n    }\n\n    else {\n      size = values.length - 1;\n      fraction = labelFraction(scale);\n\n      items = values.map(function(value, index) {\n        return vegaDataflow.ingest({\n          index: index,\n          label: format(value, index, values),\n          value: value,\n          perc:  index ? fraction(value) : 0,\n          perc2: index === size ? 1 : fraction(values[index+1])\n        });\n      });\n    }\n\n    out.source = items;\n    out.add = items;\n    this.value = items;\n\n    return out;\n  };\n\n  var Paths = vegaUtil.fastmap({\n    'line': line,\n    'line-radial': lineR,\n    'arc': arc,\n    'arc-radial': arcR,\n    'curve': curve,\n    'curve-radial': curveR,\n    'orthogonal-horizontal': orthoX,\n    'orthogonal-vertical': orthoY,\n    'orthogonal-radial': orthoR,\n    'diagonal-horizontal': diagonalX,\n    'diagonal-vertical': diagonalY,\n    'diagonal-radial': diagonalR\n  });\n\n  function sourceX(t) { return t.source.x; }\n  function sourceY(t) { return t.source.y; }\n  function targetX(t) { return t.target.x; }\n  function targetY(t) { return t.target.y; }\n\n   /**\n    * Layout paths linking source and target elements.\n    * @constructor\n    * @param {object} params - The parameters for this operator.\n    */\n  function LinkPath(params) {\n    vegaDataflow.Transform.call(this, {}, params);\n  }\n\n  LinkPath.Definition = {\n    \"type\": \"LinkPath\",\n    \"metadata\": {\"modifies\": true},\n    \"params\": [\n      { \"name\": \"sourceX\", \"type\": \"field\", \"default\": \"source.x\" },\n      { \"name\": \"sourceY\", \"type\": \"field\", \"default\": \"source.y\" },\n      { \"name\": \"targetX\", \"type\": \"field\", \"default\": \"target.x\" },\n      { \"name\": \"targetY\", \"type\": \"field\", \"default\": \"target.y\" },\n      { \"name\": \"orient\", \"type\": \"enum\", \"default\": \"vertical\",\n        \"values\": [\"horizontal\", \"vertical\", \"radial\"] },\n      { \"name\": \"shape\", \"type\": \"enum\", \"default\": \"line\",\n        \"values\": [\"line\", \"arc\", \"curve\", \"diagonal\", \"orthogonal\"] },\n      { \"name\": \"require\", \"type\": \"signal\" },\n      { \"name\": \"as\", \"type\": \"string\", \"default\": \"path\" }\n    ]\n  };\n\n  var prototype$4 = vegaUtil.inherits(LinkPath, vegaDataflow.Transform);\n\n  prototype$4.transform = function(_, pulse) {\n    var sx = _.sourceX || sourceX,\n        sy = _.sourceY || sourceY,\n        tx = _.targetX || targetX,\n        ty = _.targetY || targetY,\n        as = _.as || 'path',\n        orient = _.orient || 'vertical',\n        shape = _.shape || 'line',\n        path = Paths.get(shape + '-' + orient) || Paths.get(shape);\n\n    if (!path) {\n      vegaUtil.error('LinkPath unsupported type: ' + _.shape\n        + (_.orient ? '-' + _.orient : ''));\n    }\n\n    pulse.visit(pulse.SOURCE, function(t) {\n      t[as] = path(sx(t), sy(t), tx(t), ty(t));\n    });\n\n    return pulse.reflow(_.modified()).modifies(as);\n  };\n\n  // -- Link Path Generation Methods -----\n\n  function line(sx, sy, tx, ty) {\n    return 'M' + sx + ',' + sy +\n           'L' + tx + ',' + ty;\n  }\n\n  function lineR(sa, sr, ta, tr) {\n    return line(\n      sr * Math.cos(sa), sr * Math.sin(sa),\n      tr * Math.cos(ta), tr * Math.sin(ta)\n    );\n  }\n\n  function arc(sx, sy, tx, ty) {\n    var dx = tx - sx,\n        dy = ty - sy,\n        rr = Math.sqrt(dx * dx + dy * dy) / 2,\n        ra = 180 * Math.atan2(dy, dx) / Math.PI;\n    return 'M' + sx + ',' + sy +\n           'A' + rr + ',' + rr +\n           ' ' + ra + ' 0 1' +\n           ' ' + tx + ',' + ty;\n  }\n\n  function arcR(sa, sr, ta, tr) {\n    return arc(\n      sr * Math.cos(sa), sr * Math.sin(sa),\n      tr * Math.cos(ta), tr * Math.sin(ta)\n    );\n  }\n\n  function curve(sx, sy, tx, ty) {\n    var dx = tx - sx,\n        dy = ty - sy,\n        ix = 0.2 * (dx + dy),\n        iy = 0.2 * (dy - dx);\n    return 'M' + sx + ',' + sy +\n           'C' + (sx+ix) + ',' + (sy+iy) +\n           ' ' + (tx+iy) + ',' + (ty-ix) +\n           ' ' + tx + ',' + ty;\n  }\n\n  function curveR(sa, sr, ta, tr) {\n    return curve(\n      sr * Math.cos(sa), sr * Math.sin(sa),\n      tr * Math.cos(ta), tr * Math.sin(ta)\n    );\n  }\n\n  function orthoX(sx, sy, tx, ty) {\n    return 'M' + sx + ',' + sy +\n           'V' + ty + 'H' + tx;\n  }\n\n  function orthoY(sx, sy, tx, ty) {\n    return 'M' + sx + ',' + sy +\n           'H' + tx + 'V' + ty;\n  }\n\n  function orthoR(sa, sr, ta, tr) {\n    var sc = Math.cos(sa),\n        ss = Math.sin(sa),\n        tc = Math.cos(ta),\n        ts = Math.sin(ta),\n        sf = Math.abs(ta - sa) > Math.PI ? ta <= sa : ta > sa;\n    return 'M' + (sr*sc) + ',' + (sr*ss) +\n           'A' + sr + ',' + sr + ' 0 0,' + (sf?1:0) +\n           ' ' + (sr*tc) + ',' + (sr*ts) +\n           'L' + (tr*tc) + ',' + (tr*ts);\n  }\n\n  function diagonalX(sx, sy, tx, ty) {\n    var m = (sx + tx) / 2;\n    return 'M' + sx + ',' + sy +\n           'C' + m  + ',' + sy +\n           ' ' + m  + ',' + ty +\n           ' ' + tx + ',' + ty;\n  }\n\n  function diagonalY(sx, sy, tx, ty) {\n    var m = (sy + ty) / 2;\n    return 'M' + sx + ',' + sy +\n           'C' + sx + ',' + m +\n           ' ' + tx + ',' + m +\n           ' ' + tx + ',' + ty;\n  }\n\n  function diagonalR(sa, sr, ta, tr) {\n    var sc = Math.cos(sa),\n        ss = Math.sin(sa),\n        tc = Math.cos(ta),\n        ts = Math.sin(ta),\n        mr = (sr + tr) / 2;\n    return 'M' + (sr*sc) + ',' + (sr*ss) +\n           'C' + (mr*sc) + ',' + (mr*ss) +\n           ' ' + (mr*tc) + ',' + (mr*ts) +\n           ' ' + (tr*tc) + ',' + (tr*ts);\n  }\n\n  /**\n   * Pie and donut chart layout.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): *} params.field - The value field to size pie segments.\n   * @param {number} [params.startAngle=0] - The start angle (in radians) of the layout.\n   * @param {number} [params.endAngle=2\u03c0] - The end angle (in radians) of the layout.\n   * @param {boolean} [params.sort] - Boolean flag for sorting sectors by value.\n   */\n  function Pie(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  Pie.Definition = {\n    \"type\": \"Pie\",\n    \"metadata\": {\"modifies\": true},\n    \"params\": [\n      { \"name\": \"field\", \"type\": \"field\" },\n      { \"name\": \"startAngle\", \"type\": \"number\", \"default\": 0 },\n      { \"name\": \"endAngle\", \"type\": \"number\", \"default\": 6.283185307179586 },\n      { \"name\": \"sort\", \"type\": \"boolean\", \"default\": false },\n      { \"name\": \"as\", \"type\": \"string\", \"array\": true, \"length\": 2, \"default\": [\"startAngle\", \"endAngle\"] }\n    ]\n  };\n\n  var prototype$5 = vegaUtil.inherits(Pie, vegaDataflow.Transform);\n\n  prototype$5.transform = function(_, pulse) {\n    var as = _.as || ['startAngle', 'endAngle'],\n        startAngle = as[0],\n        endAngle = as[1],\n        field = _.field || vegaUtil.one,\n        start = _.startAngle || 0,\n        stop = _.endAngle != null ? _.endAngle : 2 * Math.PI,\n        data = pulse.source,\n        values = data.map(field),\n        n = values.length,\n        a = start,\n        k = (stop - start) / d3Array.sum(values),\n        index = d3Array.range(n),\n        i, t, v;\n\n    if (_.sort) {\n      index.sort(function(a, b) {\n        return values[a] - values[b];\n      });\n    }\n\n    for (i=0; i<n; ++i) {\n      v = values[index[i]];\n      t = data[index[i]];\n      t[startAngle] = a;\n      t[endAngle] = (a += v * k);\n    }\n\n    this.value = values;\n    return pulse.reflow(_.modified()).modifies(as);\n  };\n\n  var DEFAULT_COUNT = 5;\n\n  function includeZero(scale) {\n    const type = scale.type;\n    return !scale.bins && (\n      type === vegaScale.Linear || type === vegaScale.Pow || type === vegaScale.Sqrt\n    );\n  }\n\n  function includePad(type) {\n    return vegaScale.isContinuous(type) && type !== vegaScale.Sequential;\n  }\n\n  var SKIP = vegaUtil.toSet([\n    'set', 'modified', 'clear', 'type', 'scheme', 'schemeExtent', 'schemeCount',\n    'domain', 'domainMin', 'domainMid', 'domainMax',\n    'domainRaw', 'domainImplicit', 'nice', 'zero', 'bins',\n    'range', 'rangeStep', 'round', 'reverse', 'interpolate', 'interpolateGamma'\n  ]);\n\n  /**\n   * Maintains a scale function mapping data values to visual channels.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   */\n  function Scale(params) {\n    vegaDataflow.Transform.call(this, null, params);\n    this.modified(true); // always treat as modified\n  }\n\n  var prototype$6 = vegaUtil.inherits(Scale, vegaDataflow.Transform);\n\n  prototype$6.transform = function(_, pulse) {\n    var df = pulse.dataflow,\n        scale = this.value,\n        key = scaleKey(_);\n\n    if (!scale || key !== scale.type) {\n      this.value = scale = vegaScale.scale(key)();\n    }\n\n    for (key in _) if (!SKIP[key]) {\n      // padding is a scale property for band/point but not others\n      if (key === 'padding' && includePad(scale.type)) continue;\n      // invoke scale property setter, raise warning if not found\n      vegaUtil.isFunction(scale[key])\n        ? scale[key](_[key])\n        : df.warn('Unsupported scale property: ' + key);\n    }\n\n    configureRange(scale, _,\n      configureBins(scale, _, configureDomain(scale, _, df))\n    );\n\n    return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n  };\n\n  function scaleKey(_) {\n    var t = _.type, d = '', n;\n\n    // backwards compatibility pre Vega 5.\n    if (t === vegaScale.Sequential) return vegaScale.Sequential + '-' + vegaScale.Linear;\n\n    if (isContinuousColor(_)) {\n      n = _.rawDomain ? _.rawDomain.length\n        : _.domain ? _.domain.length + +(_.domainMid != null)\n        : 0;\n      d = n === 2 ? vegaScale.Sequential + '-'\n        : n === 3 ? vegaScale.Diverging + '-'\n        : '';\n    }\n\n    return ((d + t) || vegaScale.Linear).toLowerCase();\n  }\n\n  function isContinuousColor(_) {\n    const t = _.type;\n    return vegaScale.isContinuous(t) && t !== vegaScale.Time && t !== vegaScale.UTC && (\n      _.scheme || _.range && _.range.length && _.range.every(vegaUtil.isString)\n    );\n  }\n\n  function configureDomain(scale, _, df) {\n    // check raw domain, if provided use that and exit early\n    var raw = rawDomain(scale, _.domainRaw, df);\n    if (raw > -1) return raw;\n\n    var domain = _.domain,\n        type = scale.type,\n        zero = _.zero || (_.zero === undefined && includeZero(scale)),\n        n, mid;\n\n    if (!domain) return 0;\n\n    // adjust continuous domain for minimum pixel padding\n    if (includePad(type) && _.padding && domain[0] !== vegaUtil.peek(domain)) {\n      domain = padDomain(type, domain, _.range, _.padding, _.exponent, _.constant);\n    }\n\n    // adjust domain based on zero, min, max settings\n    if (zero || _.domainMin != null || _.domainMax != null || _.domainMid != null) {\n      n = ((domain = domain.slice()).length - 1) || 1;\n      if (zero) {\n        if (domain[0] > 0) domain[0] = 0;\n        if (domain[n] < 0) domain[n] = 0;\n      }\n      if (_.domainMin != null) domain[0] = _.domainMin;\n      if (_.domainMax != null) domain[n] = _.domainMax;\n\n      if (_.domainMid != null) {\n        mid = _.domainMid;\n        if (mid < domain[0] || mid > domain[n]) {\n          df.warn('Scale domainMid exceeds domain min or max.', mid);\n        }\n        domain.splice(n, 0, mid);\n      }\n    }\n\n    // set the scale domain\n    scale.domain(domainCheck(type, domain, df));\n\n    // if ordinal scale domain is defined, prevent implicit\n    // domain construction as side-effect of scale lookup\n    if (type === vegaScale.Ordinal) {\n      scale.unknown(_.domainImplicit ? vegaScale.scaleImplicit : undefined);\n    }\n\n    // perform 'nice' adjustment as requested\n    if (_.nice && scale.nice) {\n      scale.nice((_.nice !== true && tickCount(scale, _.nice)) || null);\n    }\n\n    // return the cardinality of the domain\n    return domain.length;\n  }\n\n  function rawDomain(scale, raw, df) {\n    if (raw) {\n      scale.domain(domainCheck(scale.type, raw, df));\n      return raw.length;\n    } else {\n      return -1;\n    }\n  }\n\n  function padDomain(type, domain, range, pad, exponent, constant) {\n    var span = Math.abs(vegaUtil.peek(range) - range[0]),\n        frac = span / (span - 2 * pad),\n        d = type === vegaScale.Log    ? vegaUtil.zoomLog(domain, null, frac)\n          : type === vegaScale.Sqrt   ? vegaUtil.zoomPow(domain, null, frac, 0.5)\n          : type === vegaScale.Pow    ? vegaUtil.zoomPow(domain, null, frac, exponent || 1)\n          : type === vegaScale.Symlog ? vegaUtil.zoomSymlog(domain, null, frac, constant || 1)\n          : vegaUtil.zoomLinear(domain, null, frac);\n\n    domain = domain.slice();\n    domain[0] = d[0];\n    domain[domain.length-1] = d[1];\n    return domain;\n  }\n\n  function domainCheck(type, domain, df) {\n    if (vegaScale.isLogarithmic(type)) {\n      // sum signs of domain values\n      // if all pos or all neg, abs(sum) === domain.length\n      var s = Math.abs(domain.reduce(function(s, v) {\n        return s + (v < 0 ? -1 : v > 0 ? 1 : 0);\n      }, 0));\n\n      if (s !== domain.length) {\n        df.warn('Log scale domain includes zero: ' + vegaUtil.stringValue(domain));\n      }\n    }\n    return domain;\n  }\n\n  function configureBins(scale, _, count) {\n    let bins = _.bins;\n\n    if (bins && !vegaUtil.isArray(bins)) {\n      // generate bin boundary array\n      let domain = scale.domain(),\n          lo = domain[0],\n          hi = vegaUtil.peek(domain),\n          start = bins.start == null ? lo : bins.start,\n          stop = bins.stop == null ? hi : bins.stop,\n          step = bins.step;\n\n      if (!step) vegaUtil.error('Scale bins parameter missing step property.');\n      if (start < lo) start = step * Math.ceil(lo / step);\n      if (stop > hi) stop = step * Math.floor(hi / step);\n      bins = d3Array.range(start, stop + step / 2, step);\n    }\n\n    if (bins) {\n      // assign bin boundaries to scale instance\n      scale.bins = bins;\n    } else if (scale.bins) {\n      // no current bins, remove bins if previously set\n      delete scale.bins;\n    }\n\n    // special handling for bin-ordinal scales\n    if (scale.type === vegaScale.BinOrdinal) {\n      if (!bins) {\n        // the domain specifies the bins\n        scale.bins = scale.domain();\n      } else if (!_.domain && !_.domainRaw) {\n        // the bins specify the domain\n        scale.domain(bins);\n        count = bins.length;\n      }\n    }\n\n    // return domain cardinality\n    return count;\n  }\n\n  function configureRange(scale, _, count) {\n    var type = scale.type,\n        round = _.round || false,\n        range = _.range;\n\n    // if range step specified, calculate full range extent\n    if (_.rangeStep != null) {\n      range = configureRangeStep(type, _, count);\n    }\n\n    // else if a range scheme is defined, use that\n    else if (_.scheme) {\n      range = configureScheme(type, _, count);\n      if (vegaUtil.isFunction(range)) {\n        if (scale.interpolator) {\n          return scale.interpolator(range);\n        } else {\n          vegaUtil.error(`Scale type ${type} does not support interpolating color schemes.`);\n        }\n      }\n    }\n\n    // given a range array for an interpolating scale, convert to interpolator\n    if (range && vegaScale.isInterpolating(type)) {\n      return scale.interpolator(\n        vegaScale.interpolateColors(flip(range, _.reverse), _.interpolate, _.interpolateGamma)\n      );\n    }\n\n    // configure rounding / interpolation\n    if (range && _.interpolate && scale.interpolate) {\n      scale.interpolate(vegaScale.interpolate(_.interpolate, _.interpolateGamma));\n    } else if (vegaUtil.isFunction(scale.round)) {\n      scale.round(round);\n    } else if (vegaUtil.isFunction(scale.rangeRound)) {\n      scale.interpolate(round ? d3Interpolate.interpolateRound : d3Interpolate.interpolate);\n    }\n\n    if (range) scale.range(flip(range, _.reverse));\n  }\n\n  function configureRangeStep(type, _, count) {\n    if (type !== vegaScale.Band && type !== vegaScale.Point) {\n      vegaUtil.error('Only band and point scales support rangeStep.');\n    }\n\n    // calculate full range based on requested step size and padding\n    var outer = (_.paddingOuter != null ? _.paddingOuter : _.padding) || 0,\n        inner = type === vegaScale.Point ? 1\n              : ((_.paddingInner != null ? _.paddingInner : _.padding) || 0);\n    return [0, _.rangeStep * vegaScale.bandSpace(count, inner, outer)];\n  }\n\n  function configureScheme(type, _, count) {\n    var extent = _.schemeExtent,\n        name, scheme;\n\n    if (vegaUtil.isArray(_.scheme)) {\n      scheme = vegaScale.interpolateColors(_.scheme, _.interpolate, _.interpolateGamma);\n    } else {\n      name = _.scheme.toLowerCase();\n      scheme = vegaScale.scheme(name);\n      if (!scheme) vegaUtil.error(`Unrecognized scheme name: ${_.scheme}`);\n    }\n\n    // determine size for potential discrete range\n    count = (type === vegaScale.Threshold) ? count + 1\n      : (type === vegaScale.BinOrdinal) ? count - 1\n      : (type === vegaScale.Quantile || type === vegaScale.Quantize) ? (+_.schemeCount || DEFAULT_COUNT)\n      : count;\n\n    // adjust and/or quantize scheme as appropriate\n    return vegaScale.isInterpolating(type) ? adjustScheme(scheme, extent, _.reverse)\n      : vegaUtil.isFunction(scheme) ? vegaScale.quantizeInterpolator(adjustScheme(scheme, extent), count)\n      : type === vegaScale.Ordinal ? scheme : scheme.slice(0, count);\n  }\n\n  function adjustScheme(scheme, extent, reverse) {\n    return (vegaUtil.isFunction(scheme) && (extent || reverse))\n      ? vegaScale.interpolateRange(scheme, flip(extent || [0, 1], reverse))\n      : scheme;\n  }\n\n  function flip(array, reverse) {\n    return reverse ? array.slice().reverse() : array;\n  }\n\n  /**\n   * Sorts scenegraph items in the pulse source array.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(*,*): number} [params.sort] - A comparator\n   *   function for sorting tuples.\n   */\n  function SortItems(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype$7 = vegaUtil.inherits(SortItems, vegaDataflow.Transform);\n\n  prototype$7.transform = function(_, pulse) {\n    var mod = _.modified('sort')\n           || pulse.changed(pulse.ADD)\n           || pulse.modified(_.sort.fields)\n           || pulse.modified('datum');\n\n    if (mod) pulse.source.sort(vegaDataflow.stableCompare(_.sort));\n\n    this.modified(mod);\n    return pulse;\n  };\n\n  var Zero = 'zero',\n      Center = 'center',\n      Normalize = 'normalize',\n      DefOutput = ['y0', 'y1'];\n\n  /**\n   * Stack layout for visualization elements.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): *} params.field - The value field to stack.\n   * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.\n   * @param {function(object,object): number} [params.sort] - A comparator for stack sorting.\n   * @param {string} [offset='zero'] - Stack baseline offset. One of 'zero', 'center', 'normalize'.\n   */\n  function Stack(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  Stack.Definition = {\n    \"type\": \"Stack\",\n    \"metadata\": {\"modifies\": true},\n    \"params\": [\n      { \"name\": \"field\", \"type\": \"field\" },\n      { \"name\": \"groupby\", \"type\": \"field\", \"array\": true },\n      { \"name\": \"sort\", \"type\": \"compare\" },\n      { \"name\": \"offset\", \"type\": \"enum\", \"default\": Zero, \"values\": [Zero, Center, Normalize] },\n      { \"name\": \"as\", \"type\": \"string\", \"array\": true, \"length\": 2, \"default\": DefOutput }\n    ]\n  };\n\n  var prototype$8 = vegaUtil.inherits(Stack, vegaDataflow.Transform);\n\n  prototype$8.transform = function(_, pulse) {\n    var as = _.as || DefOutput,\n        y0 = as[0],\n        y1 = as[1],\n        sort = vegaDataflow.stableCompare(_.sort),\n        field = _.field || vegaUtil.one,\n        stack = _.offset === Center ? stackCenter\n              : _.offset === Normalize ? stackNormalize\n              : stackZero,\n        groups, i, n, max;\n\n    // partition, sum, and sort the stack groups\n    groups = partition(pulse.source, _.groupby, sort, field);\n\n    // compute stack layouts per group\n    for (i=0, n=groups.length, max=groups.max; i<n; ++i) {\n      stack(groups[i], max, field, y0, y1);\n    }\n\n    return pulse.reflow(_.modified()).modifies(as);\n  };\n\n  function stackCenter(group, max, field, y0, y1) {\n    var last = (max - group.sum) / 2,\n        m = group.length,\n        j = 0, t;\n\n    for (; j<m; ++j) {\n      t = group[j];\n      t[y0] = last;\n      t[y1] = (last += Math.abs(field(t)));\n    }\n  }\n\n  function stackNormalize(group, max, field, y0, y1) {\n    var scale = 1 / group.sum,\n        last = 0,\n        m = group.length,\n        j = 0, v = 0, t;\n\n    for (; j<m; ++j) {\n      t = group[j];\n      t[y0] = last;\n      t[y1] = last = scale * (v += Math.abs(field(t)));\n    }\n  }\n\n  function stackZero(group, max, field, y0, y1) {\n    var lastPos = 0,\n        lastNeg = 0,\n        m = group.length,\n        j = 0, v, t;\n\n    for (; j<m; ++j) {\n      t = group[j];\n      v = +field(t);\n      if (v < 0) {\n        t[y0] = lastNeg;\n        t[y1] = (lastNeg += v);\n      } else {\n        t[y0] = lastPos;\n        t[y1] = (lastPos += v);\n      }\n    }\n  }\n\n  function partition(data, groupby, sort, field) {\n    var groups = [],\n        get = function(f) { return f(t); },\n        map, i, n, m, t, k, g, s, max;\n\n    // partition data points into stack groups\n    if (groupby == null) {\n      groups.push(data.slice());\n    } else {\n      for (map={}, i=0, n=data.length; i<n; ++i) {\n        t = data[i];\n        k = groupby.map(get);\n        g = map[k];\n        if (!g) {\n          map[k] = (g = []);\n          groups.push(g);\n        }\n        g.push(t);\n      }\n    }\n\n    // compute sums of groups, sort groups as needed\n    for (k=0, max=0, m=groups.length; k<m; ++k) {\n      g = groups[k];\n      for (i=0, s=0, n=g.length; i<n; ++i) {\n        s += Math.abs(field(g[i]));\n      }\n      g.sum = s;\n      if (s > max) max = s;\n      if (sort) g.sort(sort);\n    }\n    groups.max = max;\n\n    return groups;\n  }\n\n  exports.axisticks = AxisTicks;\n  exports.datajoin = DataJoin;\n  exports.encode = Encode;\n  exports.legendentries = LegendEntries;\n  exports.linkpath = LinkPath;\n  exports.pie = Pie;\n  exports.scale = Scale;\n  exports.sortitems = SortItems;\n  exports.stack = Stack;\n  exports.validTicks = validTicks;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","factory","define","amd","self","vega","transforms","d3","vegaScale","vegaUtil","d3TimeFormat","d3Format","vegaDataflow","d3Array","d3Interpolate","tickCount","scale","count","minStep","isNumber","bins","Math","max","length","min","span","domain","isObject","step","interval","isString","timeInterval","type","error","every","validTicks","ticks","range","lo","floor","hi","ceil","peek","filter","v","endpoints","_","i","tickValues","tickFormat","specifier","formatType","format","Time","timeFormat","String","isLogarithmic","s","formatSpecifier","precision","trimZeroes","logfmt","sourceFormat","targetFormat","decimalChar","x","str","dec","indexOf","lastIndexOf","c","charCodeAt","end","idx","slice","AxisTicks","params","Transform","call","DataJoin","defaultItemCreate","ingest","isExit","t","exit","Encode","labelValues","values","Infinity","concat","thresholds","labelFormat","formats","n","d","Symbols","symbols","formatRange","Discrete","formatDiscrete","formatPoint","value","index","array","limit","Number","isFinite","labelFraction","Threshold","adjust","LegendEntries","sourceX","source","sourceY","y","targetX","target","targetY","LinkPath","line","sx","sy","tx","ty","arc","dx","dy","rr","sqrt","atan2","PI","curve","ix","iy","Pie","includePad","isContinuous","Sequential","Scale","modified","domainCheck","df","abs","reduce","warn","stringValue","adjustScheme","scheme","extent","reverse","isFunction","interpolateRange","flip","SortItems","Stack","stackCenter","group","field","y0","y1","last","sum","m","j","stackNormalize","stackZero","lastNeg","lastPos","partition","data","groupby","sort","groups","get","f","push","map","k","g","inherits","prototype","transform","prototype.transform","pulse","StopPropagation","out","fork","NO_SOURCE","NO_FIELDS","tally","minstep","rem","label","extra","add","prototype$1","prototype$1.transform","dataflow","item","key","tupleid","isArray","encode","addAll","fastmap","test","lookup","map.lookup","visit","ADD","empty","mod","set","datum","MOD","REM","changed","ADD_MOD","modifies","clean","cleanThreshold","runAfter","prototype$2","prototype$2.transform","ADD_REM","fmod","encoders","e","reenter","update","falsy","enter","output","flag","REFLOW","Quantile","Quantize","prototype$3","prototype$3.transform","items","size","ellipsis","offset","constant","Gradient","fraction","scaleFraction","perc","perc2","Paths","lineR","sa","sr","ta","tr","cos","sin","arcR","curveR","orthoX","orthoY","orthoR","tc","ts","sc","ss","sf","diagonalX","diagonalY","diagonalR","mr","Definition","prototype$4","prototype$4.transform","as","shape","path","orient","SOURCE","reflow","prototype$5","prototype$5.transform","startAngle","endAngle","start","stop","one","a","b","SKIP","toSet","prototype$6","prototype$6.transform","Linear","UTC","rawDomain","domainMid","Diverging","toLowerCase","domainRaw","raw","zero","Pow","Sqrt","padding","exponent","frac","pad","Log","zoomLog","zoomPow","Symlog","zoomSymlog","zoomLinear","domainMin","domainMax","mid","splice","Ordinal","unknown","domainImplicit","scaleImplicit","undefined","nice","BinOrdinal","round","rangeStep","Band","Point","bandSpace","inner","paddingInner","paddingOuter","schemeExtent","interpolateColors","interpolate","interpolateGamma","name","schemeCount","DEFAULT_COUNT","isInterpolating","quantizeInterpolator","interpolator","rangeRound","interpolateRound","prototype$7","prototype$7.transform","fields","stableCompare","DefOutput","Zero","Center","Normalize","prototype$8","prototype$8.transform","stack","axisticks","datajoin","legendentries","linkpath","pie","sortitems","Object","defineProperty"]
}
