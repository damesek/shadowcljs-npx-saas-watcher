{
"version":3,
"file":"module$node_modules$vega_view_transforms$build$vega_view_transforms.js",
"lineCount":50,
"mappings":"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",
"sources":["node_modules/vega-view-transforms/build/vega-view-transforms.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_view_transforms$build$vega_view_transforms\"] = function(global,process,require,module,exports,shadow$shims) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-dataflow'), require('vega-scenegraph'), require('vega-util')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-dataflow', 'vega-scenegraph', 'vega-util'], factory) :\n  (global = global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.vega));\n}(this, function (exports, vegaDataflow, vegaScenegraph, vegaUtil) { 'use strict';\n\n  const Top = 'top';\n  const Left = 'left';\n  const Right = 'right';\n  const Bottom = 'bottom';\n\n  const TopLeft = 'top-left';\n  const TopRight = 'top-right';\n  const BottomLeft = 'bottom-left';\n  const BottomRight = 'bottom-right';\n\n  const Start = 'start';\n  const Middle = 'middle';\n  const End = 'end';\n\n  const X = 'x';\n  const Y = 'y';\n\n  const Group = 'group';\n\n  const AxisRole = 'axis';\n  const TitleRole = 'title';\n  const FrameRole = 'frame';\n  const ScopeRole = 'scope';\n  const LegendRole = 'legend';\n\n  const RowHeader = 'row-header';\n  const RowFooter = 'row-footer';\n  const RowTitle  = 'row-title';\n  const ColHeader = 'column-header';\n  const ColFooter = 'column-footer';\n  const ColTitle  = 'column-title';\n\n  const Padding = 'padding';\n\n  const Symbols = 'symbol';\n\n  const Fit  = 'fit';\n  const FitX = 'fit-x';\n  const FitY = 'fit-y';\n  const Pad  = 'pad';\n  const None = 'none';\n\n  const All = 'all';\n  const Each = 'each';\n  const Flush = 'flush';\n\n  const Column = 'column';\n  const Row = 'row';\n\n  /**\n   * Calculate bounding boxes for scenegraph items.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {object} params.mark - The scenegraph mark instance to bound.\n   */\n  function Bound(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype = vegaUtil.inherits(Bound, vegaDataflow.Transform);\n\n  prototype.transform = function(_, pulse) {\n    var view = pulse.dataflow,\n        mark = _.mark,\n        type = mark.marktype,\n        entry = vegaScenegraph.Marks[type],\n        bound = entry.bound,\n        markBounds = mark.bounds, rebound;\n\n    if (entry.nested) {\n      // multi-item marks have a single bounds instance\n      if (mark.items.length) view.dirty(mark.items[0]);\n      markBounds = boundItem(mark, bound);\n      mark.items.forEach(function(item) {\n        item.bounds.clear().union(markBounds);\n      });\n    }\n\n    else if (type === Group || _.modified()) {\n      // operator parameters modified -> re-bound all items\n      // updates group bounds in response to modified group content\n      pulse.visit(pulse.MOD, function(item) { view.dirty(item); });\n      markBounds.clear();\n      mark.items.forEach(function(item) {\n        markBounds.union(boundItem(item, bound));\n      });\n\n      // force reflow for axes/legends/titles to propagate any layout changes\n      switch (mark.role) {\n        case AxisRole:\n        case LegendRole:\n        case TitleRole:\n          pulse.reflow();\n      }\n    }\n\n    else {\n      // incrementally update bounds, re-bound mark as needed\n      rebound = pulse.changed(pulse.REM);\n\n      pulse.visit(pulse.ADD, function(item) {\n        markBounds.union(boundItem(item, bound));\n      });\n\n      pulse.visit(pulse.MOD, function(item) {\n        rebound = rebound || markBounds.alignsWith(item.bounds);\n        view.dirty(item);\n        markBounds.union(boundItem(item, bound));\n      });\n\n      if (rebound) {\n        markBounds.clear();\n        mark.items.forEach(function(item) { markBounds.union(item.bounds); });\n      }\n    }\n\n    // ensure mark bounds do not exceed any clipping region\n    vegaScenegraph.boundClip(mark);\n\n    return pulse.modifies('bounds');\n  };\n\n  function boundItem(item, bound, opt) {\n    return bound(item.bounds.clear(), item, opt);\n  }\n\n  var COUNTER_NAME = ':vega_identifier:';\n\n  /**\n   * Adds a unique identifier to all added tuples.\n   * This transform creates a new signal that serves as an id counter.\n   * As a result, the id counter is shared across all instances of this\n   * transform, generating unique ids across multiple data streams. In\n   * addition, this signal value can be included in a snapshot of the\n   * dataflow state, enabling correct resumption of id allocation.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {string} params.as - The field name for the generated identifier.\n   */\n  function Identifier(params) {\n    vegaDataflow.Transform.call(this, 0, params);\n  }\n\n  Identifier.Definition = {\n    \"type\": \"Identifier\",\n    \"metadata\": {\"modifies\": true},\n    \"params\": [\n      { \"name\": \"as\", \"type\": \"string\", \"required\": true }\n    ]\n  };\n\n  var prototype$1 = vegaUtil.inherits(Identifier, vegaDataflow.Transform);\n\n  prototype$1.transform = function(_, pulse) {\n    var counter = getCounter(pulse.dataflow),\n        id = counter.value,\n        as = _.as;\n\n    pulse.visit(pulse.ADD, function(t) {\n      if (!t[as]) t[as] = ++id;\n    });\n\n    counter.set(this.value = id);\n    return pulse;\n  };\n\n  function getCounter(view) {\n    var counter = view._signals[COUNTER_NAME];\n    if (!counter) {\n      view._signals[COUNTER_NAME] = (counter = view.add(0));\n    }\n    return counter;\n  }\n\n  /**\n   * Bind scenegraph items to a scenegraph mark instance.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {object} params.markdef - The mark definition for creating the mark.\n   *   This is an object of legal scenegraph mark properties which *must* include\n   *   the 'marktype' property.\n   */\n  function Mark(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype$2 = vegaUtil.inherits(Mark, vegaDataflow.Transform);\n\n  prototype$2.transform = function(_, pulse) {\n    var mark = this.value;\n\n    // acquire mark on first invocation, bind context and group\n    if (!mark) {\n      mark = pulse.dataflow.scenegraph().mark(_.markdef, lookup(_), _.index);\n      mark.group.context = _.context;\n      if (!_.context.group) _.context.group = mark.group;\n      mark.source = this.source; // point to upstream collector\n      mark.clip = _.clip;\n      mark.interactive = _.interactive;\n      this.value = mark;\n    }\n\n    // initialize entering items\n    var Init = mark.marktype === Group ? vegaScenegraph.GroupItem : vegaScenegraph.Item;\n    pulse.visit(pulse.ADD, function(item) { Init.call(item, mark); });\n\n    // update clipping and/or interactive status\n    if (_.modified('clip') || _.modified('interactive')) {\n      mark.clip = _.clip;\n      mark.interactive = !!_.interactive;\n      mark.zdirty = true; // force scenegraph re-eval\n      pulse.reflow();\n    }\n\n    // bind items array to scenegraph mark\n    mark.items = pulse.source;\n    return pulse;\n  };\n\n  function lookup(_) {\n    var g = _.groups, p = _.parent;\n    return g && g.size === 1 ? g.get(Object.keys(g.object)[0])\n      : g && p ? g.lookup(p)\n      : null;\n  }\n\n  /**\n   * Analyze items for overlap, changing opacity to hide items with\n   * overlapping bounding boxes. This transform will preserve at least\n   * two items (e.g., first and last) even if overlap persists.\n   * @param {object} params - The parameters for this operator.\n   * @param {function(*,*): number} [params.sort] - A comparator\n   *   function for sorting items.\n   * @param {object} [params.method] - The overlap removal method to apply.\n   *   One of 'parity' (default, hide every other item until there is no\n   *   more overlap) or 'greedy' (sequentially scan and hide and items that\n   *   overlap with the last visible item).\n   * @param {object} [params.boundScale] - A scale whose range should be used\n   *   to bound the items. Items exceeding the bounds of the scale range\n   *   will be treated as overlapping. If null or undefined, no bounds check\n   *   will be applied.\n   * @param {object} [params.boundOrient] - The orientation of the scale\n   *   (top, bottom, left, or right) used to bound items. This parameter is\n   *   ignored if boundScale is null or undefined.\n   * @param {object} [params.boundTolerance] - The tolerance in pixels for\n   *   bound inclusion testing (default 1). This specifies by how many pixels\n   *   an item's bounds may exceed the scale range bounds and not be culled.\n   * @constructor\n   */\n  function Overlap(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype$3 = vegaUtil.inherits(Overlap, vegaDataflow.Transform);\n\n  var methods = {\n    parity: function(items) {\n      return items.filter((item, i) => i % 2 ? (item.opacity = 0) : 1);\n    },\n    greedy: function(items, sep) {\n      var a;\n      return items.filter((b, i) => {\n        if (!i || !intersect(a.bounds, b.bounds, sep)) {\n          a = b;\n          return 1;\n        } else {\n          return b.opacity = 0;\n        }\n      });\n    }\n  };\n\n  // compute bounding box intersection\n  // including padding pixels of separation\n  function intersect(a, b, sep) {\n    return sep > Math.max(\n      b.x1 - a.x2,\n      a.x1 - b.x2,\n      b.y1 - a.y2,\n      a.y1 - b.y2\n    );\n  }\n\n  function hasOverlap(items, pad) {\n    for (var i=1, n=items.length, a=items[0].bounds, b; i<n; a=b, ++i) {\n      if (intersect(a, b = items[i].bounds, pad)) return true;\n    }\n  }\n\n  function hasBounds(item) {\n    var b = item.bounds;\n    return b.width() > 1 && b.height() > 1;\n  }\n\n  function boundTest(scale, orient, tolerance) {\n    var range = scale.range(),\n        b = new vegaScenegraph.Bounds();\n\n    if (orient === Top || orient === Bottom) {\n      b.set(range[0], -Infinity, range[1], +Infinity);\n    } else {\n      b.set(-Infinity, range[0], +Infinity, range[1]);\n    }\n    b.expand(tolerance || 1);\n\n    return item => b.encloses(item.bounds);\n  }\n\n  // reset all items to be fully opaque\n  function reset(source) {\n    source.forEach(item => item.opacity = 1);\n    return source;\n  }\n\n  // add all tuples to mod, fork pulse if parameters were modified\n  // fork prevents cross-stream tuple pollution (e.g., pulse from scale)\n  function reflow(pulse, _) {\n    return pulse.reflow(_.modified()).modifies('opacity');\n  }\n\n  prototype$3.transform = function(_, pulse) {\n    var reduce = methods[_.method] || methods.parity,\n        source = pulse.materialize(pulse.SOURCE).source,\n        sep = _.separation || 0,\n        items, test, bounds;\n\n    if (!source || !source.length) return;\n\n    if (!_.method) {\n      // early exit if method is falsy\n      if (_.modified('method')) {\n        reset(source);\n        pulse = reflow(pulse, _);\n      }\n      return pulse;\n    }\n\n    if (_.sort) {\n      source = source.slice().sort(_.sort);\n    }\n\n    // skip labels with no content\n    source = source.filter(hasBounds);\n\n    items = reset(source);\n    pulse = reflow(pulse, _);\n\n    if (items.length >= 3 && hasOverlap(items, sep)) {\n      do {\n        items = reduce(items, sep);\n      } while (items.length >= 3 && hasOverlap(items, sep));\n\n      if (items.length < 3 && !vegaUtil.peek(source).opacity) {\n        if (items.length > 1) vegaUtil.peek(items).opacity = 0;\n        vegaUtil.peek(source).opacity = 1;\n      }\n    }\n\n    if (_.boundScale && _.boundTolerance >= 0) {\n      test = boundTest(_.boundScale, _.boundOrient, +_.boundTolerance);\n      source.forEach(item => {\n        if (!test(item)) item.opacity = 0;\n      });\n    }\n\n    // re-calculate mark bounds\n    bounds = items[0].mark.bounds.clear();\n    source.forEach(item => {\n      if (item.opacity) bounds.union(item.bounds);\n    });\n\n    return pulse;\n  };\n\n  /**\n   * Queue modified scenegraph items for rendering.\n   * @constructor\n   */\n  function Render(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype$4 = vegaUtil.inherits(Render, vegaDataflow.Transform);\n\n  prototype$4.transform = function(_, pulse) {\n    var view = pulse.dataflow;\n\n    pulse.visit(pulse.ALL, function(item) { view.dirty(item); });\n\n    // set z-index dirty flag as needed\n    if (pulse.fields && pulse.fields['zindex']) {\n      var item = pulse.source && pulse.source[0];\n      if (item) item.mark.zdirty = true;\n    }\n  };\n\n  const tempBounds = new vegaScenegraph.Bounds();\n\n  function set(item, property, value) {\n    return item[property] === value ? 0\n      : (item[property] = value, 1);\n  }\n\n  const AxisOffset = 0.5;\n\n  function isYAxis(mark) {\n    var orient = mark.items[0].datum.orient;\n    return orient === Left || orient === Right;\n  }\n\n  function axisIndices(datum) {\n    var index = +datum.grid;\n    return [\n      datum.ticks  ? index++ : -1, // ticks index\n      datum.labels ? index++ : -1, // labels index\n      index + (+datum.domain)      // title index\n    ];\n  }\n\n  function axisLayout(view, axis, width, height) {\n    var item = axis.items[0],\n        datum = item.datum,\n        orient = datum.orient,\n        indices = axisIndices(datum),\n        range = item.range,\n        offset = item.offset,\n        position = item.position,\n        minExtent = item.minExtent,\n        maxExtent = item.maxExtent,\n        title = datum.title && item.items[indices[2]].items[0],\n        titlePadding = item.titlePadding,\n        bounds = item.bounds,\n        dl = title && vegaScenegraph.multiLineOffset(title),\n        x = 0, y = 0, i, s;\n\n    tempBounds.clear().union(bounds);\n    bounds.clear();\n    if ((i=indices[0]) > -1) bounds.union(item.items[i].bounds);\n    if ((i=indices[1]) > -1) bounds.union(item.items[i].bounds);\n\n    // position axis group and title\n    switch (orient) {\n      case Top:\n        x = position || 0;\n        y = -offset;\n        s = Math.max(minExtent, Math.min(maxExtent, -bounds.y1));\n        if (title) s = axisTitleLayout(view, title, s, titlePadding, dl, 0, -1, bounds);\n        bounds.add(0, -s).add(range, 0);\n        break;\n      case Left:\n        x = -offset;\n        y = position || 0;\n        s = Math.max(minExtent, Math.min(maxExtent, -bounds.x1));\n        if (title) s = axisTitleLayout(view, title, s, titlePadding, dl, 1, -1, bounds);\n        bounds.add(-s, 0).add(0, range);\n        break;\n      case Right:\n        x = width + offset;\n        y = position || 0;\n        s = Math.max(minExtent, Math.min(maxExtent, bounds.x2));\n        if (title) s = axisTitleLayout(view, title, s, titlePadding, dl, 1, 1, bounds);\n        bounds.add(0, 0).add(s, range);\n        break;\n      case Bottom:\n        x = position || 0;\n        y = height + offset;\n        s = Math.max(minExtent, Math.min(maxExtent, bounds.y2));\n        if (title) s = axisTitleLayout(view, title, s, titlePadding, 0, 0, 1, bounds);\n        bounds.add(0, 0).add(range, s);\n        break;\n      default:\n        x = item.x;\n        y = item.y;\n    }\n\n    // update bounds\n    vegaScenegraph.boundStroke(bounds.translate(x, y), item);\n\n    if (set(item, 'x', x + AxisOffset) | set(item, 'y', y + AxisOffset)) {\n      item.bounds = tempBounds;\n      view.dirty(item);\n      item.bounds = bounds;\n      view.dirty(item);\n    }\n\n    return item.mark.bounds.clear().union(bounds);\n  }\n\n  function axisTitleLayout(view, title, offset, pad, dl, isYAxis, sign, bounds) {\n    var b = title.bounds, dx = 0, dy = 0;\n\n    if (title.auto) {\n      view.dirty(title);\n\n      offset += pad;\n\n      isYAxis\n        ? dx = (title.x || 0) - (title.x = sign * (offset + dl))\n        : dy = (title.y || 0) - (title.y = sign * (offset + dl));\n\n      title.mark.bounds.clear().union(b.translate(-dx, -dy));\n      view.dirty(title);\n\n      if (isYAxis) {\n        bounds.add(0, b.y1).add(0, b.y2);\n        offset += b.width();\n      } else {\n        bounds.add(b.x1, 0).add(b.x2, 0);\n        offset += b.height();\n      }\n    } else {\n      bounds.union(b);\n    }\n\n    return offset;\n  }\n\n  function gridLayoutGroups(group) {\n    var groups = group.items,\n        n = groups.length,\n        i = 0, mark, items;\n\n    var views = {\n      marks:      [],\n      rowheaders: [],\n      rowfooters: [],\n      colheaders: [],\n      colfooters: [],\n      rowtitle: null,\n      coltitle: null\n    };\n\n    // layout axes, gather legends, collect bounds\n    for (; i<n; ++i) {\n      mark = groups[i];\n      items = mark.items;\n      if (mark.marktype === Group) {\n        switch (mark.role) {\n          case AxisRole:\n          case LegendRole:\n          case TitleRole:\n            break;\n          case RowHeader: views.rowheaders.push(...items); break;\n          case RowFooter: views.rowfooters.push(...items); break;\n          case ColHeader: views.colheaders.push(...items); break;\n          case ColFooter: views.colfooters.push(...items); break;\n          case RowTitle:  views.rowtitle = items[0]; break;\n          case ColTitle:  views.coltitle = items[0]; break;\n          default:        views.marks.push(...items);\n        }\n      }\n    }\n\n    return views;\n  }\n\n  function bboxFlush(item) {\n    return new vegaScenegraph.Bounds().set(0, 0, item.width || 0, item.height || 0);\n  }\n\n  function bboxFull(item) {\n    var b = item.bounds.clone();\n    return b.empty()\n      ? b.set(0, 0, 0, 0)\n      : b.translate(-(item.x || 0), -(item.y || 0));\n  }\n\n  function get(opt, key, d) {\n    var v = vegaUtil.isObject(opt) ? opt[key] : opt;\n    return v != null ? v : (d !== undefined ? d : 0);\n  }\n\n  function offsetValue(v) {\n    return v < 0 ? Math.ceil(-v) : 0;\n  }\n\n  function gridLayout(view, groups, opt) {\n    var dirty = !opt.nodirty,\n        bbox = opt.bounds === Flush ? bboxFlush : bboxFull,\n        bounds = tempBounds.set(0, 0, 0, 0),\n        alignCol = get(opt.align, Column),\n        alignRow = get(opt.align, Row),\n        padCol = get(opt.padding, Column),\n        padRow = get(opt.padding, Row),\n        ncols = opt.columns || groups.length,\n        nrows = ncols < 0 ? 1 : Math.ceil(groups.length / ncols),\n        n = groups.length,\n        xOffset = Array(n), xExtent = Array(ncols), xMax = 0,\n        yOffset = Array(n), yExtent = Array(nrows), yMax = 0,\n        dx = Array(n), dy = Array(n), boxes = Array(n),\n        m, i, c, r, b, g, px, py, x, y, offset;\n\n    for (i=0; i<ncols; ++i) xExtent[i] = 0;\n    for (i=0; i<nrows; ++i) yExtent[i] = 0;\n\n    // determine offsets for each group\n    for (i=0; i<n; ++i) {\n      g = groups[i];\n      b = boxes[i] = bbox(g);\n      g.x = g.x || 0; dx[i] = 0;\n      g.y = g.y || 0; dy[i] = 0;\n      c = i % ncols;\n      r = ~~(i / ncols);\n      xMax = Math.max(xMax, px = Math.ceil(b.x2));\n      yMax = Math.max(yMax, py = Math.ceil(b.y2));\n      xExtent[c] = Math.max(xExtent[c], px);\n      yExtent[r] = Math.max(yExtent[r], py);\n      xOffset[i] = padCol + offsetValue(b.x1);\n      yOffset[i] = padRow + offsetValue(b.y1);\n      if (dirty) view.dirty(groups[i]);\n    }\n\n    // set initial alignment offsets\n    for (i=0; i<n; ++i) {\n      if (i % ncols === 0) xOffset[i] = 0;\n      if (i < ncols) yOffset[i] = 0;\n    }\n\n    // enforce column alignment constraints\n    if (alignCol === Each) {\n      for (c=1; c<ncols; ++c) {\n        for (offset=0, i=c; i<n; i += ncols) {\n          if (offset < xOffset[i]) offset = xOffset[i];\n        }\n        for (i=c; i<n; i += ncols) {\n          xOffset[i] = offset + xExtent[c-1];\n        }\n      }\n    } else if (alignCol === All) {\n      for (offset=0, i=0; i<n; ++i) {\n        if (i % ncols && offset < xOffset[i]) offset = xOffset[i];\n      }\n      for (i=0; i<n; ++i) {\n        if (i % ncols) xOffset[i] = offset + xMax;\n      }\n    } else {\n      for (alignCol=false, c=1; c<ncols; ++c) {\n        for (i=c; i<n; i += ncols) {\n          xOffset[i] += xExtent[c-1];\n        }\n      }\n    }\n\n    // enforce row alignment constraints\n    if (alignRow === Each) {\n      for (r=1; r<nrows; ++r) {\n        for (offset=0, i=r*ncols, m=i+ncols; i<m; ++i) {\n          if (offset < yOffset[i]) offset = yOffset[i];\n        }\n        for (i=r*ncols; i<m; ++i) {\n          yOffset[i] = offset + yExtent[r-1];\n        }\n      }\n    } else if (alignRow === All) {\n      for (offset=0, i=ncols; i<n; ++i) {\n        if (offset < yOffset[i]) offset = yOffset[i];\n      }\n      for (i=ncols; i<n; ++i) {\n        yOffset[i] = offset + yMax;\n      }\n    } else {\n      for (alignRow=false, r=1; r<nrows; ++r) {\n        for (i=r*ncols, m=i+ncols; i<m; ++i) {\n          yOffset[i] += yExtent[r-1];\n        }\n      }\n    }\n\n    // perform horizontal grid layout\n    for (x=0, i=0; i<n; ++i) {\n      x = xOffset[i] + (i % ncols ? x : 0);\n      dx[i] += x - groups[i].x;\n    }\n\n    // perform vertical grid layout\n    for (c=0; c<ncols; ++c) {\n      for (y=0, i=c; i<n; i += ncols) {\n        y += yOffset[i];\n        dy[i] += y - groups[i].y;\n      }\n    }\n\n    // perform horizontal centering\n    if (alignCol && get(opt.center, Column) && nrows > 1) {\n      for (i=0; i<n; ++i) {\n        b = alignCol === All ? xMax : xExtent[i % ncols];\n        x = b - boxes[i].x2 - groups[i].x - dx[i];\n        if (x > 0) dx[i] += x / 2;\n      }\n    }\n\n    // perform vertical centering\n    if (alignRow && get(opt.center, Row) && ncols !== 1) {\n      for (i=0; i<n; ++i) {\n        b = alignRow === All ? yMax : yExtent[~~(i / ncols)];\n        y = b - boxes[i].y2 - groups[i].y - dy[i];\n        if (y > 0) dy[i] += y / 2;\n      }\n    }\n\n    // position grid relative to anchor\n    for (i=0; i<n; ++i) {\n      bounds.union(boxes[i].translate(dx[i], dy[i]));\n    }\n    x = get(opt.anchor, X);\n    y = get(opt.anchor, Y);\n    switch (get(opt.anchor, Column)) {\n      case End:    x -= bounds.width(); break;\n      case Middle: x -= bounds.width() / 2;\n    }\n    switch (get(opt.anchor, Row)) {\n      case End:    y -= bounds.height(); break;\n      case Middle: y -= bounds.height() / 2;\n    }\n    x = Math.round(x);\n    y = Math.round(y);\n\n    // update mark positions, bounds, dirty\n    bounds.clear();\n    for (i=0; i<n; ++i) {\n      groups[i].mark.bounds.clear();\n    }\n    for (i=0; i<n; ++i) {\n      g = groups[i];\n      g.x += (dx[i] += x);\n      g.y += (dy[i] += y);\n      bounds.union(g.mark.bounds.union(g.bounds.translate(dx[i], dy[i])));\n      if (dirty) view.dirty(g);\n    }\n\n    return bounds;\n  }\n\n  function trellisLayout(view, group, opt) {\n    var views = gridLayoutGroups(group),\n        groups = views.marks,\n        bbox = opt.bounds === Flush ? boundFlush : boundFull,\n        off = opt.offset,\n        ncols = opt.columns || groups.length,\n        nrows = ncols < 0 ? 1 : Math.ceil(groups.length / ncols),\n        cells = nrows * ncols,\n        x, y, x2, y2, anchor, band, offset;\n\n    // -- initial grid layout\n    const bounds = gridLayout(view, groups, opt);\n\n    // -- layout grid headers and footers --\n\n    // perform row header layout\n    if (views.rowheaders) {\n      band = get(opt.headerBand, Row, null);\n      x = layoutHeaders(view, views.rowheaders, groups, ncols, nrows, -get(off, 'rowHeader'), min, 0, bbox, 'x1', 0, ncols, 1, band);\n    }\n\n    // perform column header layout\n    if (views.colheaders) {\n      band = get(opt.headerBand, Column, null);\n      y = layoutHeaders(view, views.colheaders, groups, ncols, ncols, -get(off, 'columnHeader'), min, 1, bbox, 'y1', 0, 1, ncols, band);\n    }\n\n    // perform row footer layout\n    if (views.rowfooters) {\n      band = get(opt.footerBand, Row, null);\n      x2 = layoutHeaders(view, views.rowfooters, groups, ncols, nrows,  get(off, 'rowFooter'), max, 0, bbox, 'x2', ncols-1, ncols, 1, band);\n    }\n\n    // perform column footer layout\n    if (views.colfooters) {\n      band = get(opt.footerBand, Column, null);\n      y2 = layoutHeaders(view, views.colfooters, groups, ncols, ncols,  get(off, 'columnFooter'), max, 1, bbox, 'y2', cells-ncols, 1, ncols, band);\n    }\n\n    // perform row title layout\n    if (views.rowtitle) {\n      anchor = get(opt.titleAnchor, Row);\n      offset = get(off, 'rowTitle');\n      offset = anchor === End ? x2 + offset : x - offset;\n      band = get(opt.titleBand, Row, 0.5);\n      layoutTitle(view, views.rowtitle, offset, 0, bounds, band);\n    }\n\n    // perform column title layout\n    if (views.coltitle) {\n      anchor = get(opt.titleAnchor, Column);\n      offset = get(off, 'columnTitle');\n      offset = anchor === End ? y2 + offset : y - offset;\n      band = get(opt.titleBand, Column, 0.5);\n      layoutTitle(view, views.coltitle, offset, 1, bounds, band);\n    }\n  }\n\n  function boundFlush(item, field) {\n    return field === 'x1' ? (item.x || 0)\n      : field === 'y1' ? (item.y || 0)\n      : field === 'x2' ? (item.x || 0) + (item.width || 0)\n      : field === 'y2' ? (item.y || 0) + (item.height || 0)\n      : undefined;\n  }\n\n  function boundFull(item, field) {\n    return item.bounds[field];\n  }\n\n  // aggregation functions for grid margin determination\n  function min(a, b) { return Math.floor(Math.min(a, b)); }\n  function max(a, b) { return Math.ceil(Math.max(a, b)); }\n\n  function layoutHeaders(view, headers, groups, ncols, limit, offset, agg, isX, bound, bf, start, stride, back, band) {\n    var n = groups.length,\n        init = 0,\n        edge = 0,\n        i, j, k, m, b, h, g, x, y;\n\n    // if no groups, early exit and return 0\n    if (!n) return init;\n\n    // compute margin\n    for (i=start; i<n; i+=stride) {\n      if (groups[i]) init = agg(init, bound(groups[i], bf));\n    }\n\n    // if no headers, return margin calculation\n    if (!headers.length) return init;\n\n    // check if number of headers exceeds number of rows or columns\n    if (headers.length > limit) {\n      view.warn('Grid headers exceed limit: ' + limit);\n      headers = headers.slice(0, limit);\n    }\n\n    // apply offset\n    init += offset;\n\n    // clear mark bounds for all headers\n    for (j=0, m=headers.length; j<m; ++j) {\n      view.dirty(headers[j]);\n      headers[j].mark.bounds.clear();\n    }\n\n    // layout each header\n    for (i=start, j=0, m=headers.length; j<m; ++j, i+=stride) {\n      h = headers[j];\n      b = h.mark.bounds;\n\n      // search for nearest group to align to\n      // necessary if table has empty cells\n      for (k=i; k >= 0 && (g = groups[k]) == null; k-=back);\n\n      // assign coordinates and update bounds\n      if (isX) {\n        x = band == null ? g.x : Math.round(g.bounds.x1 + band * g.bounds.width());\n        y = init;\n      } else {\n        x = init;\n        y = band == null ? g.y : Math.round(g.bounds.y1 + band * g.bounds.height());\n      }\n      b.union(h.bounds.translate(x - (h.x || 0), y - (h.y || 0)));\n      h.x = x;\n      h.y = y;\n      view.dirty(h);\n\n      // update current edge of layout bounds\n      edge = agg(edge, b[bf]);\n    }\n\n    return edge;\n  }\n\n  function layoutTitle(view, g, offset, isX, bounds, band) {\n    if (!g) return;\n    view.dirty(g);\n\n    // compute title coordinates\n    var x = offset, y = offset;\n    isX\n      ? (x = Math.round(bounds.x1 + band * bounds.width()))\n      : (y = Math.round(bounds.y1 + band * bounds.height()));\n\n    // assign coordinates and update bounds\n    g.bounds.translate(x - (g.x || 0), y - (g.y || 0));\n    g.mark.bounds.clear().union(g.bounds);\n    g.x = x;\n    g.y = y;\n\n    // queue title for redraw\n    view.dirty(g);\n  }\n\n  // utility for looking up legend layout configuration\n  function lookup$1(config, orient) {\n    const opt = config[orient] || {};\n    return (key, d) => opt[key] != null ? opt[key]\n      : config[key] != null ? config[key]\n      : d;\n  }\n\n  // if legends specify offset directly, use the maximum specified value\n  function offsets(legends, value) {\n    var max = -Infinity;\n    legends.forEach(item => {\n      if (item.offset != null) max = Math.max(max, item.offset);\n    });\n    return max > -Infinity ? max : value;\n  }\n\n  function legendParams(g, orient, config, xb, yb, w, h) {\n    const _ = lookup$1(config, orient),\n          offset = offsets(g, _('offset', 0)),\n          anchor = _('anchor', Start),\n          mult = anchor === End ? 1 : anchor === Middle ? 0.5 : 0;\n\n    const p = {\n      align:   Each,\n      bounds:  _('bounds', Flush),\n      columns: _('direction') === 'vertical' ? 1 : g.length,\n      padding: _('margin', 8),\n      center:  _('center'),\n      nodirty: true\n    };\n\n    switch (orient) {\n      case Left:\n        p.anchor = {\n          x: Math.floor(xb.x1) - offset, column: End,\n          y: mult * (h || xb.height() + 2 * xb.y1), row: anchor\n        };\n        break;\n      case Right:\n        p.anchor = {\n          x: Math.ceil(xb.x2) + offset,\n          y: mult * (h || xb.height() + 2 * xb.y1), row: anchor\n        };\n        break;\n      case Top:\n        p.anchor = {\n          y: Math.floor(yb.y1) - offset, row: End,\n          x: mult * (w || yb.width() + 2 * yb.x1), column: anchor\n        };\n        break;\n      case Bottom:\n        p.anchor = {\n          y: Math.ceil(yb.y2) + offset,\n          x: mult * (w || yb.width() + 2 * yb.x1), column: anchor\n        };\n        break;\n      case TopLeft:\n        p.anchor = {x: offset, y: offset};\n        break;\n      case TopRight:\n        p.anchor = {x: w - offset, y: offset, column: End};\n        break;\n      case BottomLeft:\n        p.anchor = {x: offset, y: h - offset, row: End};\n        break;\n      case BottomRight:\n        p.anchor = {x: w - offset, y: h - offset, column: End, row: End};\n        break;\n    }\n\n    return p;\n  }\n\n  function legendLayout(view, legend) {\n    var item = legend.items[0],\n        datum = item.datum,\n        orient = item.orient,\n        bounds = item.bounds,\n        x = item.x, y = item.y, w, h;\n\n    // cache current bounds for later comparison\n    item._bounds\n      ? item._bounds.clear().union(bounds)\n      : item._bounds = bounds.clone();\n    bounds.clear();\n\n    // adjust legend to accommodate padding and title\n    legendGroupLayout(view, item, item.items[0].items[0]);\n\n    // aggregate bounds to determine size, and include origin\n    bounds = legendBounds(item, bounds);\n    w = 2 * item.padding;\n    h = 2 * item.padding;\n    if (!bounds.empty()) {\n      w = Math.ceil(bounds.width() + w);\n      h = Math.ceil(bounds.height() + h);\n    }\n\n    if (datum.type === Symbols) {\n      legendEntryLayout(item.items[0].items[0].items[0].items);\n    }\n\n    if (orient !== None) {\n      item.x = x = 0;\n      item.y = y = 0;\n    }\n    item.width = w;\n    item.height = h;\n    vegaScenegraph.boundStroke(bounds.set(x, y, x + w, y + h), item);\n    item.mark.bounds.clear().union(bounds);\n\n    return item;\n  }\n\n  function legendBounds(item, b) {\n    // aggregate item bounds\n    item.items.forEach(_ => b.union(_.bounds));\n\n    // anchor to legend origin\n    b.x1 = item.padding;\n    b.y1 = item.padding;\n\n    return b;\n  }\n\n  function legendGroupLayout(view, item, entry) {\n    var pad = item.padding,\n        ex = pad - entry.x,\n        ey = pad - entry.y;\n\n    if (!item.datum.title) {\n      if (ex || ey) translate(view, entry, ex, ey);\n    } else {\n      var title = item.items[1].items[0],\n          anchor = title.anchor,\n          tpad = item.titlePadding || 0,\n          tx = pad - title.x,\n          ty = pad - title.y;\n\n      switch (title.orient) {\n        case Left:\n          ex += Math.ceil(title.bounds.width()) + tpad;\n          break;\n        case Right:\n        case Bottom:\n          break;\n        default:\n          ey += title.bounds.height() + tpad;\n      }\n      if (ex || ey) translate(view, entry, ex, ey);\n\n      switch (title.orient) {\n        case Left:\n          ty += legendTitleOffset(item, entry, title, anchor, 1, 1);\n          break;\n        case Right:\n          tx += legendTitleOffset(item, entry, title, End, 0, 0) + tpad;\n          ty += legendTitleOffset(item, entry, title, anchor, 1, 1);\n          break;\n        case Bottom:\n          tx += legendTitleOffset(item, entry, title, anchor, 0, 0);\n          ty += legendTitleOffset(item, entry, title, End, -1, 0, 1) + tpad;\n          break;\n        default:\n          tx += legendTitleOffset(item, entry, title, anchor, 0, 0);\n      }\n      if (tx || ty) translate(view, title, tx, ty);\n\n      // translate legend if title pushes into negative coordinates\n      if ((tx = Math.round(title.bounds.x1 - pad)) < 0) {\n        translate(view, entry, -tx, 0);\n        translate(view, title, -tx, 0);\n      }\n    }\n  }\n\n  function legendTitleOffset(item, entry, title, anchor, y, lr, noBar) {\n    const grad = item.datum.type !== 'symbol',\n          vgrad = title.datum.vgrad,\n          e = grad && (lr || !vgrad) && !noBar ? entry.items[0] : entry,\n          s = e.bounds[y ? 'y2' : 'x2'] - item.padding,\n          u = vgrad && lr ? s : 0,\n          v = vgrad && lr ? 0 : s,\n          o = y <= 0 ? 0 : vegaScenegraph.multiLineOffset(title);\n\n    return Math.round(anchor === Start ? u\n      : anchor === End ? (v - o)\n      : 0.5 * (s - o));\n  }\n\n  function translate(view, item, dx, dy) {\n    item.x += dx;\n    item.y += dy;\n    item.bounds.translate(dx, dy);\n    item.mark.bounds.translate(dx, dy);\n    view.dirty(item);\n  }\n\n  function legendEntryLayout(entries) {\n    // get max widths for each column\n    var widths = entries.reduce(function(w, g) {\n      w[g.column] = Math.max(g.bounds.x2 - g.x, w[g.column] || 0);\n      return w;\n    }, {});\n\n    // set dimensions of legend entry groups\n    entries.forEach(function(g) {\n      g.width  = widths[g.column];\n      g.height = g.bounds.y2 - g.y;\n    });\n  }\n\n  function titleLayout(view, mark, width, height, viewBounds) {\n    var group = mark.items[0],\n        frame = group.frame,\n        orient = group.orient,\n        anchor = group.anchor,\n        offset = group.offset,\n        padding = group.padding,\n        title = group.items[0].items[0],\n        subtitle = group.items[1] && group.items[1].items[0],\n        end = (orient === Left || orient === Right) ? height : width,\n        start = 0, x = 0, y = 0, sx = 0, sy = 0, pos;\n\n    if (frame !== Group) {\n      orient === Left ? (start = viewBounds.y2, end = viewBounds.y1)\n        : orient === Right ? (start = viewBounds.y1, end = viewBounds.y2)\n        : (start = viewBounds.x1, end = viewBounds.x2);\n    } else if (orient === Left) {\n      start = height, end = 0;\n    }\n\n    pos = (anchor === Start) ? start\n      : (anchor === End) ? end\n      : (start + end) / 2;\n\n    if (subtitle && subtitle.text) {\n      // position subtitle\n      switch (orient) {\n        case Top:\n        case Bottom:\n          sy = title.bounds.height() + padding;\n          break;\n        case Left:\n          sx = title.bounds.width() + padding;\n          break;\n        case Right:\n          sx = -title.bounds.width() - padding;\n          break;\n      }\n\n      tempBounds.clear().union(subtitle.bounds);\n      tempBounds.translate(sx - (subtitle.x || 0), sy - (subtitle.y || 0));\n      if (set(subtitle, 'x', sx) | set(subtitle, 'y', sy)) {\n        view.dirty(subtitle);\n        subtitle.bounds.clear().union(tempBounds);\n        subtitle.mark.bounds.clear().union(tempBounds);\n        view.dirty(subtitle);\n      }\n\n      tempBounds.clear().union(subtitle.bounds);\n    } else {\n      tempBounds.clear();\n    }\n    tempBounds.union(title.bounds);\n\n    // position title group\n    switch (orient) {\n      case Top:\n        x = pos;\n        y = viewBounds.y1 - tempBounds.height() - offset;\n        break;\n      case Left:\n        x = viewBounds.x1 - tempBounds.width() - offset;\n        y = pos;\n        break;\n      case Right:\n        x = viewBounds.x2 + tempBounds.width() + offset;\n        y = pos;\n        break;\n      case Bottom:\n        x = pos;\n        y = viewBounds.y2 + offset;\n        break;\n      default:\n        x = group.x;\n        y = group.y;\n    }\n\n    if (set(group, 'x', x) | set(group, 'y', y)) {\n      tempBounds.translate(x, y);\n      view.dirty(group);\n      group.bounds.clear().union(tempBounds);\n      mark.bounds.clear().union(tempBounds);\n      view.dirty(group);\n    }\n    return group.bounds;\n  }\n\n  /**\n   * Layout view elements such as axes and legends.\n   * Also performs size adjustments.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {object} params.mark - Scenegraph mark of groups to layout.\n   */\n  function ViewLayout(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype$5 = vegaUtil.inherits(ViewLayout, vegaDataflow.Transform);\n\n  prototype$5.transform = function(_, pulse) {\n    // TODO incremental update, output?\n    var view = pulse.dataflow;\n    _.mark.items.forEach(function(group) {\n      if (_.layout) trellisLayout(view, group, _.layout);\n      layoutGroup(view, group, _);\n    });\n    if (_.modified()) pulse.reflow();\n    return pulse;\n  };\n\n  function layoutGroup(view, group, _) {\n    var items = group.items,\n        width = Math.max(0, group.width || 0),\n        height = Math.max(0, group.height || 0),\n        viewBounds = new vegaScenegraph.Bounds().set(0, 0, width, height),\n        xBounds = viewBounds.clone(),\n        yBounds = viewBounds.clone(),\n        legends = [], title,\n        mark, orient, b, i, n;\n\n    // layout axes, gather legends, collect bounds\n    for (i=0, n=items.length; i<n; ++i) {\n      mark = items[i];\n      switch (mark.role) {\n        case AxisRole:\n          b = isYAxis(mark) ? xBounds : yBounds;\n          b.union(axisLayout(view, mark, width, height));\n          break;\n        case TitleRole:\n          title = mark;\n          break;\n        case LegendRole:\n          legends.push(legendLayout(view, mark));\n          break;\n        case FrameRole:\n        case ScopeRole:\n        case RowHeader:\n        case RowFooter:\n        case RowTitle:\n        case ColHeader:\n        case ColFooter:\n        case ColTitle:\n          xBounds.union(mark.bounds);\n          yBounds.union(mark.bounds);\n          break;\n        default:\n          viewBounds.union(mark.bounds);\n      }\n    }\n\n    // layout legends, adjust viewBounds\n    if (legends.length) {\n      // group legends by orient\n      const l = {};\n      legends.forEach(item => {\n        orient = item.orient || Right;\n        if (orient !== None) (l[orient] || (l[orient] = [])).push(item);\n      });\n\n      // perform grid layout for each orient group\n      for (let orient in l) {\n        const g = l[orient];\n        gridLayout(view, g, legendParams(\n          g, orient, _.legends, xBounds, yBounds, width, height\n        ));\n      }\n\n      // update view bounds\n      legends.forEach(item => {\n        const b = item.bounds;\n\n        if (!b.equals(item._bounds)) {\n          item.bounds = item._bounds;\n          view.dirty(item); // dirty previous location\n          item.bounds = b;\n          view.dirty(item);\n        }\n\n        if (_.autosize && _.autosize.type === Fit) {\n          // For autosize fit, incorporate the orthogonal dimension only.\n          // Legends that overrun the chart area will then be clipped;\n          // otherwise the chart area gets reduced to nothing!\n          switch(item.orient) {\n            case Left:\n            case Right:\n              viewBounds.add(b.x1, 0).add(b.x2, 0);\n              break;\n            case Top:\n            case Bottom:\n              viewBounds.add(0, b.y1).add(0, b.y2);\n          }\n        } else {\n          viewBounds.union(b);\n        }\n      });\n    }\n\n    // combine bounding boxes\n    viewBounds.union(xBounds).union(yBounds);\n\n    // layout title, adjust bounds\n    if (title) {\n      viewBounds.union(titleLayout(view, title, width, height, viewBounds));\n    }\n\n    // override aggregated view bounds if content is clipped\n    if (group.clip) {\n      viewBounds.set(0, 0, group.width || 0, group.height || 0);\n    }\n\n    // perform size adjustment\n    viewSizeLayout(view, group, viewBounds, _);\n  }\n\n  function viewSizeLayout(view, group, viewBounds, _) {\n    var auto = _.autosize || {},\n        type = auto.type,\n        viewWidth = view._width,\n        viewHeight = view._height,\n        padding = view.padding();\n\n    if (view._autosize < 1 || !type) return;\n\n    var width  = Math.max(0, group.width || 0),\n        left   = Math.max(0, Math.ceil(-viewBounds.x1)),\n        right  = Math.max(0, Math.ceil(viewBounds.x2 - width)),\n        height = Math.max(0, group.height || 0),\n        top    = Math.max(0, Math.ceil(-viewBounds.y1)),\n        bottom = Math.max(0, Math.ceil(viewBounds.y2 - height));\n\n    if (auto.contains === Padding) {\n      viewWidth -= padding.left + padding.right;\n      viewHeight -= padding.top + padding.bottom;\n    }\n\n    if (type === None) {\n      left = 0;\n      top = 0;\n      width = viewWidth;\n      height = viewHeight;\n    }\n\n    else if (type === Fit) {\n      width = Math.max(0, viewWidth - left - right);\n      height = Math.max(0, viewHeight - top - bottom);\n    }\n\n    else if (type === FitX) {\n      width = Math.max(0, viewWidth - left - right);\n      viewHeight = height + top + bottom;\n    }\n\n    else if (type === FitY) {\n      viewWidth = width + left + right;\n      height = Math.max(0, viewHeight - top - bottom);\n    }\n\n    else if (type === Pad) {\n      viewWidth = width + left + right;\n      viewHeight = height + top + bottom;\n    }\n\n    view._resizeView(\n      viewWidth, viewHeight,\n      width, height,\n      [left, top],\n      auto.resize\n    );\n  }\n\n  exports.bound = Bound;\n  exports.identifier = Identifier;\n  exports.mark = Mark;\n  exports.overlap = Overlap;\n  exports.render = Render;\n  exports.viewlayout = ViewLayout;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","factory","define","amd","self","vega","transforms","vegaDataflow","vegaScenegraph","vegaUtil","Bound","params","Transform","call","boundItem","item","bound","opt","bounds","clear","Identifier","getCounter","view","counter","_signals","COUNTER_NAME","add","Mark","lookup","_","g","groups","p","parent","size","get","Object","keys","object","Overlap","intersect","a","b","sep","Math","max","x1","x2","y1","y2","hasOverlap","items","pad","i","n","length","hasBounds","width","height","boundTest","scale","orient","tolerance","range","Bounds","Top","Bottom","set","Infinity","expand","encloses","reset","source","forEach","opacity","Render","property","value","isYAxis","mark","datum","Left","Right","axisLayout","axis","index","grid","ticks","labels","domain","offset","position","minExtent","maxExtent","title","indices","titlePadding","dl","multiLineOffset","tempBounds","union","x","y","s","min","axisTitleLayout","boundStroke","translate","AxisOffset","dirty","sign","dx","dy","auto","bboxFlush","bboxFull","clone","empty","key","d","v","isObject","undefined","offsetValue","ceil","gridLayout","nodirty","bbox","Flush","alignCol","align","Column","alignRow","Row","padCol","padding","padRow","ncols","columns","nrows","xOffset","Array","xExtent","xMax","yOffset","yExtent","yMax","boxes","px","py","c","r","Each","All","m","center","anchor","X","Y","End","Middle","round","boundFlush","field","boundFull","floor","layoutHeaders","headers","limit","agg","isX","bf","start","stride","back","band","edge","init","warn","slice","j","h","k","layoutTitle","lookup$1","config","offsets","legends","legendParams","xb","yb","w","Start","mult","column","row","TopLeft","TopRight","BottomLeft","BottomRight","legendLayout","legend","_bounds","ex","entry","ey","tpad","tx","ty","legendTitleOffset","legendBounds","Symbols","type","legendEntryLayout","None","lr","noBar","vgrad","e","u","o","entries","widths","reduce","titleLayout","viewBounds","group","subtitle","end","sy","sx","Group","frame","pos","text","ViewLayout","layoutGroup","xBounds","yBounds","role","AxisRole","TitleRole","LegendRole","push","FrameRole","ScopeRole","RowHeader","RowFooter","RowTitle","ColHeader","ColFooter","ColTitle","l","equals","autosize","Fit","clip","viewSizeLayout","viewWidth","_width","viewHeight","_height","_autosize","left","right","top","bottom","Padding","contains","FitX","FitY","Pad","_resizeView","resize","inherits","prototype","transform","prototype.transform","pulse","dataflow","marktype","Marks","markBounds","nested","modified","visit","MOD","reflow","rebound","changed","REM","ADD","alignsWith","boundClip","modifies","Definition","prototype$1","prototype$1.transform","id","as","t","prototype$2","prototype$2.transform","scenegraph","markdef","context","interactive","Init","GroupItem","Item","zdirty","methods","parity","filter","greedy","prototype$3","prototype$3.transform","method","materialize","SOURCE","separation","sort","peek","boundScale","boundTolerance","test","boundOrient","prototype$4","prototype$4.transform","ALL","fields","prototype$5","prototype$5.transform","layout","rowheaders","rowfooters","colheaders","colfooters","rowtitle","coltitle","marks","off","cells","headerBand","footerBand","titleAnchor","titleBand","identifier","overlap","render","viewlayout","defineProperty"]
}
