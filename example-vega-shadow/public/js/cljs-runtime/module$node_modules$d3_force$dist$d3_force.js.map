{
"version":3,
"file":"module$node_modules$d3_force$dist$d3_force.js",
"lineCount":24,
"mappings":"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",
"sources":["node_modules/d3-force/dist/d3-force.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_force$dist$d3_force\"] = function(global,process,require,module,exports,shadow$shims) {\n// https://d3js.org/d3-force/ v2.0.1 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-quadtree'), require('d3-dispatch'), require('d3-timer')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-quadtree', 'd3-dispatch', 'd3-timer'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Quadtree,d3Dispatch,d3Timer) { 'use strict';\n\nfunction center(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction jiggle() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nfunction collide(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = d3Quadtree.quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nfunction link(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nfunction simulation(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = d3Timer.timer(step),\n      event = d3Dispatch.dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\nfunction manyBody() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = d3Quadtree.quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nfunction radial(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction x$2(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\nfunction y$2(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\nexports.forceCenter = center;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","factory","define","amd","d3","d3Quadtree","d3Dispatch","d3Timer","constant","x","jiggle","Math","random","d","vx","y","vy","index","find","nodeById","nodeId","node","get","Error","x$1","y$1","initialAngle","PI","sqrt","forceCenter","center","force","i","n","nodes","length","sx","sy","initialize","force.initialize","_","force.x","arguments","force.y","forceCollide","collide","radius","apply","quad","x0","y0","x1","y1","data","rj","r","ri","xi","yi","l","strength","ri2","tree","k","iterations","quadtree","visitAfter","prepare","radii","visit","Array","force.iterations","force.strength","force.radius","forceLink","link","links","alpha","source","target","distances","strengths","b","bias","m","Map","map","id","count","initializeStrength","initializeDistance","distance","defaultStrength","min","force.links","force.id","force.distance","forceManyBody","manyBody","accumulate","q","c","weight","abs","value","next","x2","w","theta2","distanceMax2","distanceMin2","Infinity","distanceMin","force.distanceMin","distanceMax","force.distanceMax","theta","force.theta","forceRadial","radial","dx","dy","radiuses","isNaN","forceSimulation","simulation","step","tick","event","call","alphaMin","stepper","stop","undefined","alphaTarget","alphaDecay","forces","forEach","fx","velocityDecay","fy","initializeNodes","initialRadius","angle","cos","sin","initializeForce","pow","timer","dispatch","restart","name","delete","set","d2","closest","on","forceX","x$2","xz","forceY","y$2","yz","Object","defineProperty"]
}
