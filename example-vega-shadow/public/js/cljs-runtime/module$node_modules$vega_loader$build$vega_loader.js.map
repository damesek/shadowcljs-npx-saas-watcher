{
"version":3,
"file":"module$node_modules$vega_loader$build$vega_loader.js",
"lineCount":17,
"mappings":"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",
"sources":["node_modules/vega-loader/build/vega-loader.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_loader$build$vega_loader\"] = function(global,process,require,module,exports,shadow$shims) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('d3-dsv'), require('topojson-client'), require('d3-time-format')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'd3-dsv', 'topojson-client', 'd3-time-format'], factory) :\n  (global = global || self, factory(global.vega = {}, global.vega, global.d3, global.topojson, global.d3));\n}(this, function (exports, vegaUtil, d3Dsv, topojsonClient, d3TimeFormat) { 'use strict';\n\n  // Matches absolute URLs with optional protocol\n  //   https://...    file://...    //...\n  const protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n  // Matches allowed URIs. From https://github.com/cure53/DOMPurify/blob/master/src/regexp.js with added file://\n  const allowed_re = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp|file):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i; // eslint-disable-line no-useless-escape\n  const whitespace_re = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g; // eslint-disable-line no-control-regex\n\n\n  // Special treatment in node.js for the file: protocol\n  const fileProtocol = 'file://';\n\n  /**\n   * Factory for a loader constructor that provides methods for requesting\n   * files from either the network or disk, and for sanitizing request URIs.\n   * @param {function} fetch - The Fetch API for HTTP network requests.\n   *   If null or undefined, HTTP loading will be disabled.\n   * @param {object} fs - The file system interface for file loading.\n   *   If null or undefined, local file loading will be disabled.\n   * @return {function} A loader constructor with the following signature:\n   *   param {object} [options] - Optional default loading options to use.\n   *   return {object} - A new loader instance.\n   */\n  function loaderFactory(fetch, fs) {\n    return function(options) {\n      return {\n        options: options || {},\n        sanitize: sanitize,\n        load: load,\n        fileAccess: !!fs,\n        file: fileLoader(fs),\n        http: httpLoader(fetch)\n      };\n    };\n  }\n\n  /**\n   * Load an external resource, typically either from the web or from the local\n   * filesystem. This function uses {@link sanitize} to first sanitize the uri,\n   * then calls either {@link http} (for web requests) or {@link file} (for\n   * filesystem loading).\n   * @param {string} uri - The resource indicator (e.g., URL or filename).\n   * @param {object} [options] - Optional loading options. These options will\n   *   override any existing default options.\n   * @return {Promise} - A promise that resolves to the loaded content.\n   */\n  async function load(uri, options) {\n    const opt = await this.sanitize(uri, options),\n          url = opt.href;\n\n    return opt.localFile\n      ? this.file(url)\n      : this.http(url, options);\n  }\n\n  /**\n   * URI sanitizer function.\n   * @param {string} uri - The uri (url or filename) to sanity check.\n   * @param {object} options - An options hash.\n   * @return {Promise} - A promise that resolves to an object containing\n   *  sanitized uri data, or rejects it the input uri is deemed invalid.\n   *  The properties of the resolved object are assumed to be\n   *  valid attributes for an HTML 'a' tag. The sanitized uri *must* be\n   *  provided by the 'href' property of the returned object.\n   */\n  async function sanitize(uri, options) {\n    options = vegaUtil.extend({}, this.options, options);\n\n    const fileAccess = this.fileAccess,\n          result = {href: null};\n\n    let isFile, loadFile, base;\n\n    const isAllowed = allowed_re.test(uri.replace(whitespace_re, ''));\n\n    if (uri == null || typeof uri !== 'string' || !isAllowed) {\n      vegaUtil.error('Sanitize failure, invalid URI: ' + vegaUtil.stringValue(uri));\n    }\n\n    const hasProtocol = protocol_re.test(uri);\n\n    // if relative url (no protocol/host), prepend baseURL\n    if ((base = options.baseURL) && !hasProtocol) {\n      // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n      if (!uri.startsWith('/') && base[base.length-1] !== '/') {\n        uri = '/' + uri;\n      }\n      uri = base + uri;\n    }\n\n    // should we load from file system?\n    loadFile = (isFile = uri.startsWith(fileProtocol))\n      || options.mode === 'file'\n      || options.mode !== 'http' && !hasProtocol && fileAccess;\n\n    if (isFile) {\n      // strip file protocol\n      uri = uri.slice(fileProtocol.length);\n    } else if (uri.startsWith('//')) {\n      if (options.defaultProtocol === 'file') {\n        // if is file, strip protocol and set loadFile flag\n        uri = uri.slice(2);\n        loadFile = true;\n      } else {\n        // if relative protocol (starts with '//'), prepend default protocol\n        uri = (options.defaultProtocol || 'http') + ':' + uri;\n      }\n    }\n\n    // set non-enumerable mode flag to indicate local file load\n    Object.defineProperty(result, 'localFile', {value: !!loadFile});\n\n    // set uri\n    result.href = uri;\n\n    // set default result target, if specified\n    if (options.target) {\n      result.target = options.target + '';\n    }\n\n    // set default result rel, if specified (#1542)\n    if (options.rel) {\n      result.rel = options.rel + '';\n    }\n\n    // return\n    return result;\n  }\n\n  /**\n   * File system loader factory.\n   * @param {object} fs - The file system interface.\n   * @return {function} - A file loader with the following signature:\n   *   param {string} filename - The file system path to load.\n   *   param {string} filename - The file system path to load.\n   *   return {Promise} A promise that resolves to the file contents.\n   */\n  function fileLoader(fs) {\n    return fs\n      ? function(filename) {\n          return new Promise(function(accept, reject) {\n            fs.readFile(filename, function(error, data) {\n              if (error) reject(error);\n              else accept(data);\n            });\n          });\n        }\n      : fileReject;\n  }\n\n  /**\n   * Default file system loader that simply rejects.\n   */\n  async function fileReject() {\n    vegaUtil.error('No file system access.');\n  }\n\n  /**\n   * HTTP request handler factory.\n   * @param {function} fetch - The Fetch API method.\n   * @return {function} - An http loader with the following signature:\n   *   param {string} url - The url to request.\n   *   param {object} options - An options hash.\n   *   return {Promise} - A promise that resolves to the file contents.\n   */\n  function httpLoader(fetch) {\n    return fetch\n      ? async function(url, options) {\n          const opt = vegaUtil.extend({}, this.options.http, options),\n                type = options && options.response,\n                response = await fetch(url, opt);\n\n          return !response.ok\n            ? vegaUtil.error(response.status + '' + response.statusText)\n            : vegaUtil.isFunction(response[type]) ? response[type]()\n            : response.text();\n        }\n      : httpReject;\n  }\n\n  /**\n   * Default http request handler that simply rejects.\n   */\n  async function httpReject() {\n    vegaUtil.error('No HTTP fetch method available.');\n  }\n\n  var typeParsers = {\n    boolean: vegaUtil.toBoolean,\n    integer: vegaUtil.toNumber,\n    number:  vegaUtil.toNumber,\n    date:    vegaUtil.toDate,\n    string:  vegaUtil.toString,\n    unknown: vegaUtil.identity\n  };\n\n  var typeTests = [\n    isBoolean,\n    isInteger,\n    isNumber,\n    isDate\n  ];\n\n  var typeList = [\n    'boolean',\n    'integer',\n    'number',\n    'date'\n  ];\n\n  function inferType(values, field) {\n    if (!values || !values.length) return 'unknown';\n\n    var value, i, j, t = 0,\n        n = values.length,\n        m = typeTests.length,\n        a = typeTests.map(function(_, i) { return i + 1; });\n\n    for (i=0, n=values.length; i<n; ++i) {\n      value = field ? values[i][field] : values[i];\n      for (j=0; j<m; ++j) {\n        if (a[j] && isValid(value) && !typeTests[j](value)) {\n          a[j] = 0;\n          ++t;\n          if (t === typeTests.length) return 'string';\n        }\n      }\n    }\n\n    t = a.reduce(function(u, v) { return u === 0 ? v : u; }, 0) - 1;\n    return typeList[t];\n  }\n\n  function inferTypes(data, fields) {\n    return fields.reduce(function(types, field) {\n      types[field] = inferType(data, field);\n      return types;\n    }, {});\n  }\n\n  // -- Type Checks ----\n\n  function isValid(_) {\n    return _ != null && _ === _;\n  }\n\n  function isBoolean(_) {\n    return _ === 'true' || _ === 'false' || _ === true || _ === false;\n  }\n\n  function isDate(_) {\n    return !Number.isNaN(Date.parse(_));\n  }\n\n  function isNumber(_) {\n    return !Number.isNaN(+_) && !(_ instanceof Date);\n  }\n\n  function isInteger(_) {\n    return isNumber(_) && Number.isInteger(+_);\n  }\n\n  function delimitedFormat(delimiter) {\n    const parse = function(data, format) {\n      const delim = {delimiter: delimiter};\n      return dsv(data, format ? vegaUtil.extend(format, delim) : delim);\n    };\n\n    parse.responseType = 'text';\n\n    return parse;\n  }\n\n  function dsv(data, format) {\n    if (format.header) {\n      data = format.header\n        .map(vegaUtil.stringValue)\n        .join(format.delimiter) + '\\n' + data;\n    }\n    return d3Dsv.dsvFormat(format.delimiter).parse(data + '');\n  }\n\n  dsv.responseType = 'text';\n\n  function isBuffer(_) {\n    return (typeof Buffer === 'function' && vegaUtil.isFunction(Buffer.isBuffer))\n      ? Buffer.isBuffer(_) : false;\n  }\n\n  function json(data, format) {\n    const prop = (format && format.property) ? vegaUtil.field(format.property) : vegaUtil.identity;\n    return vegaUtil.isObject(data) && !isBuffer(data)\n      ? parseJSON(prop(data))\n      : prop(JSON.parse(data));\n  }\n\n  json.responseType = 'json';\n\n  function parseJSON(data, format) {\n    return (format && format.copy)\n      ? JSON.parse(JSON.stringify(data))\n      : data;\n  }\n\n  const filters = {\n    interior: (a, b) => a !== b,\n    exterior: (a, b) => a === b\n  };\n\n  function topojson(data, format) {\n    let method, object, property, filter;\n    data = json(data, format);\n\n    if (format && format.feature) {\n      method = topojsonClient.feature;\n      property = format.feature;\n    } else if (format && format.mesh) {\n      method = topojsonClient.mesh;\n      property = format.mesh;\n      filter = filters[format.filter];\n    } else {\n      vegaUtil.error('Missing TopoJSON feature or mesh parameter.');\n    }\n\n    object = (object = data.objects[property])\n      ? method(data, object, filter)\n      : vegaUtil.error('Invalid TopoJSON object: ' + property);\n\n    return object && object.features || [object];\n  }\n\n  topojson.responseType = 'json';\n\n  const format = {\n    dsv: dsv,\n    csv: delimitedFormat(','),\n    tsv: delimitedFormat('\\t'),\n    json: json,\n    topojson: topojson\n  };\n\n  function formats(name, reader) {\n    if (arguments.length > 1) {\n      format[name] = reader;\n      return this;\n    } else {\n      return vegaUtil.hasOwnProperty(format, name) ? format[name] : null;\n    }\n  }\n\n  function responseType(type) {\n    const f = formats(type);\n    return f && f.responseType || 'text';\n  }\n\n  function read(data, schema, dateParse) {\n    schema = schema || {};\n\n    const reader = formats(schema.type || 'json');\n    if (!reader) vegaUtil.error('Unknown data format type: ' + schema.type);\n\n    data = reader(data, schema);\n    if (schema.parse) parse(data, schema.parse, dateParse);\n\n    if (vegaUtil.hasOwnProperty(data, 'columns')) delete data.columns;\n    return data;\n  }\n\n  function parse(data, types, dateParse) {\n    if (!data.length) return; // early exit for empty data\n\n    dateParse = dateParse || d3TimeFormat.timeParse;\n\n    var fields = data.columns || Object.keys(data[0]),\n        parsers, datum, field, i, j, n, m;\n\n    if (types === 'auto') types = inferTypes(data, fields);\n\n    fields = Object.keys(types);\n    parsers = fields.map(function(field) {\n      var type = types[field],\n          parts, pattern;\n\n      if (type && (type.indexOf('date:') === 0 || type.indexOf('utc:') === 0)) {\n        parts = type.split(/:(.+)?/, 2);  // split on first :\n        pattern = parts[1];\n\n        if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n            (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n          pattern = pattern.slice(1, -1);\n        }\n\n        return parts[0] === 'utc' ? d3TimeFormat.utcParse(pattern) : dateParse(pattern);\n      }\n\n      if (!typeParsers[type]) {\n        throw Error('Illegal format pattern: ' + field + ':' + type);\n      }\n\n      return typeParsers[type];\n    });\n\n    for (i=0, n=data.length, m=fields.length; i<n; ++i) {\n      datum = data[i];\n      for (j=0; j<m; ++j) {\n        field = fields[j];\n        datum[field] = parsers[j](datum[field]);\n      }\n    }\n  }\n\n  var loader = loaderFactory(\n    typeof fetch !== 'undefined' && fetch, // use built-in fetch API\n    null // no file system access\n  );\n\n  exports.format = format;\n  exports.formats = formats;\n  exports.inferType = inferType;\n  exports.inferTypes = inferTypes;\n  exports.loader = loader;\n  exports.read = read;\n  exports.responseType = responseType;\n  exports.typeParsers = typeParsers;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","factory","define","amd","self","vega","d3","topojson","vegaUtil","d3Dsv","topojsonClient","d3TimeFormat","load","uri","options","opt","url","sanitize","href","localFile","file","http","fileAccess","result","isFile","loadFile","base","isAllowed","hasProtocol","extend","allowed_re","test","replace","whitespace_re","error","stringValue","protocol_re","baseURL","startsWith","length","fileProtocol","mode","slice","defaultProtocol","Object","defineProperty","value","target","rel","fileLoader","fs","filename","Promise","accept","reject","readFile","data","fileReject","httpLoader","fetch","type","response","ok","isFunction","text","status","statusText","httpReject","inferType","values","field","j","t","n","m","typeTests","a","map","_","i","reduce","u","v","typeList","inferTypes","fields","types","isNumber","Number","isNaN","Date","delimitedFormat","delimiter","parse","format","delim","dsv","responseType","header","join","dsvFormat","json","prop","property","identity","Buffer","isBuffer","object","feature","method","mesh","filter","filters","objects","features","formats","name","reader","arguments","hasOwnProperty","dateParse","timeParse","columns","keys","parsers","indexOf","parts","split","pattern","utcParse","typeParsers","Error","datum","boolean","toBoolean","integer","toNumber","number","date","toDate","string","toString","unknown","isBoolean","isInteger","isDate","interior","b","exterior","csv","tsv","loader","loaderFactory","read","schema","f"]
}
