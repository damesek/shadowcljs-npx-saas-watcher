{
"version":3,
"file":"module$node_modules$vega_runtime$build$vega_runtime.js",
"lineCount":16,
"mappings":"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",
"sources":["node_modules/vega-runtime/build/vega-runtime.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_runtime$build$vega_runtime\"] = function(global,process,require,module,exports,shadow$shims) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-dataflow'), require('vega-util')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-dataflow', 'vega-util'], factory) :\n  (global = global || self, factory(global.vega = {}, global.vega, global.vega));\n}(this, function (exports, vegaDataflow, vegaUtil) { 'use strict';\n\n  /**\n   * Parse an expression given the argument signature and body code.\n   */\n  function expression(args, code, ctx) {\n    // wrap code in return statement if expression does not terminate\n    if (code[code.length-1] !== ';') {\n      code = 'return(' + code + ');';\n    }\n    var fn = Function.apply(null, args.concat(code));\n    return ctx && ctx.functions ? fn.bind(ctx.functions) : fn;\n  }\n\n  /**\n   * Parse an expression used to update an operator value.\n   */\n  function operatorExpression(code, ctx) {\n    return expression(['_'], code, ctx);\n  }\n\n  /**\n   * Parse an expression provided as an operator parameter value.\n   */\n  function parameterExpression(code, ctx) {\n    return expression(['datum', '_'], code, ctx);\n  }\n\n  /**\n   * Parse an expression applied to an event stream.\n   */\n  function eventExpression(code, ctx) {\n    return expression(['event'], code, ctx);\n  }\n\n  /**\n   * Parse an expression used to handle an event-driven operator update.\n   */\n  function handlerExpression(code, ctx) {\n    return expression(['_', 'event'], code, ctx);\n  }\n\n  /**\n   * Parse an expression that performs visual encoding.\n   */\n  function encodeExpression(code, ctx) {\n    return expression(['item', '_'], code, ctx);\n  }\n\n  /**\n   * Parse a set of operator parameters.\n   */\n  function parseParameters(spec, ctx, params) {\n    params = params || {};\n    var key, value;\n\n    for (key in spec) {\n      value = spec[key];\n\n      params[key] = vegaUtil.isArray(value)\n        ? value.map(function(v) { return parseParameter(v, ctx, params); })\n        : parseParameter(value, ctx, params);\n    }\n    return params;\n  }\n\n  /**\n   * Parse a single parameter.\n   */\n  function parseParameter(spec, ctx, params) {\n    if (!spec || !vegaUtil.isObject(spec)) return spec;\n\n    for (var i=0, n=PARSERS.length, p; i<n; ++i) {\n      p = PARSERS[i];\n      if (vegaUtil.hasOwnProperty(spec, p.key)) {\n        return p.parse(spec, ctx, params);\n      }\n    }\n    return spec;\n  }\n\n  /** Reference parsers. */\n  var PARSERS = [\n    {key: '$ref',      parse: getOperator},\n    {key: '$key',      parse: getKey},\n    {key: '$expr',     parse: getExpression},\n    {key: '$field',    parse: getField},\n    {key: '$encode',   parse: getEncode},\n    {key: '$compare',  parse: getCompare},\n    {key: '$context',  parse: getContext},\n    {key: '$subflow',  parse: getSubflow},\n    {key: '$tupleid',  parse: getTupleId}\n  ];\n\n  /**\n   * Resolve an operator reference.\n   */\n  function getOperator(_, ctx) {\n    return ctx.get(_.$ref) || vegaUtil.error('Operator not defined: ' + _.$ref);\n  }\n\n  /**\n   * Resolve an expression reference.\n   */\n  function getExpression(_, ctx, params) {\n    if (_.$params) { // parse expression parameters\n      parseParameters(_.$params, ctx, params);\n    }\n    var k = 'e:' + _.$expr + '_' + _.$name;\n    return ctx.fn[k]\n      || (ctx.fn[k] = vegaUtil.accessor(parameterExpression(_.$expr, ctx), _.$fields, _.$name));\n  }\n\n  /**\n   * Resolve a key accessor reference.\n   */\n  function getKey(_, ctx) {\n    var k = 'k:' + _.$key + '_' + (!!_.$flat);\n    return ctx.fn[k] || (ctx.fn[k] = vegaUtil.key(_.$key, _.$flat));\n  }\n\n  /**\n   * Resolve a field accessor reference.\n   */\n  function getField(_, ctx) {\n    if (!_.$field) return null;\n    var k = 'f:' + _.$field + '_' + _.$name;\n    return ctx.fn[k] || (ctx.fn[k] = vegaUtil.field(_.$field, _.$name));\n  }\n\n  /**\n   * Resolve a comparator function reference.\n   */\n  function getCompare(_, ctx) {\n    var k = 'c:' + _.$compare + '_' + _.$order,\n        c = vegaUtil.array(_.$compare).map(function(_) {\n          return (_ && _.$tupleid) ? vegaDataflow.tupleid : _;\n        });\n    return ctx.fn[k] || (ctx.fn[k] = vegaUtil.compare(c, _.$order));\n  }\n\n  /**\n   * Resolve an encode operator reference.\n   */\n  function getEncode(_, ctx) {\n    var spec = _.$encode,\n        encode = {}, name, enc;\n\n    for (name in spec) {\n      enc = spec[name];\n      encode[name] = vegaUtil.accessor(encodeExpression(enc.$expr, ctx), enc.$fields);\n      encode[name].output = enc.$output;\n    }\n    return encode;\n  }\n\n  /**\n   * Resolve a context reference.\n   */\n  function getContext(_, ctx) {\n    return ctx;\n  }\n\n  /**\n   * Resolve a recursive subflow specification.\n   */\n  function getSubflow(_, ctx) {\n    var spec = _.$subflow;\n    return function(dataflow, key, parent) {\n      var subctx = parseDataflow(spec, ctx.fork()),\n          op = subctx.get(spec.operators[0].id),\n          p = subctx.signals.parent;\n      if (p) p.set(parent);\n      return op;\n    };\n  }\n\n  /**\n   * Resolve a tuple id reference.\n   */\n  function getTupleId() {\n    return vegaDataflow.tupleid;\n  }\n\n  function canonicalType(type) {\n    return (type + '').toLowerCase();\n  }\n  function isOperator(type) {\n     return canonicalType(type) === 'operator';\n  }\n\n  function isCollect(type) {\n    return canonicalType(type) === 'collect';\n  }\n\n  /**\n   * Parse a dataflow operator.\n   */\n  function parseOperator(spec, ctx) {\n    if (isOperator(spec.type) || !spec.type) {\n      ctx.operator(spec,\n        spec.update ? operatorExpression(spec.update, ctx) : null);\n    } else {\n      ctx.transform(spec, spec.type);\n    }\n  }\n\n  /**\n   * Parse and assign operator parameters.\n   */\n  function parseOperatorParameters(spec, ctx) {\n    if (spec.params) {\n      var op = ctx.get(spec.id);\n      if (!op) vegaUtil.error('Invalid operator id: ' + spec.id);\n      ctx.dataflow.connect(op, op.parameters(\n        parseParameters(spec.params, ctx),\n        spec.react,\n        spec.initonly\n      ));\n    }\n  }\n\n  /**\n   * Parse an event stream specification.\n   */\n  function parseStream(spec, ctx) {\n    var filter = spec.filter != null ? eventExpression(spec.filter, ctx) : undefined,\n        stream = spec.stream != null ? ctx.get(spec.stream) : undefined,\n        args;\n\n    if (spec.source) {\n      stream = ctx.events(spec.source, spec.type, filter);\n    }\n    else if (spec.merge) {\n      args = spec.merge.map(ctx.get.bind(ctx));\n      stream = args[0].merge.apply(args[0], args.slice(1));\n    }\n\n    if (spec.between) {\n      args = spec.between.map(ctx.get.bind(ctx));\n      stream = stream.between(args[0], args[1]);\n    }\n\n    if (spec.filter) {\n      stream = stream.filter(filter);\n    }\n\n    if (spec.throttle != null) {\n      stream = stream.throttle(+spec.throttle);\n    }\n\n    if (spec.debounce != null) {\n      stream = stream.debounce(+spec.debounce);\n    }\n\n    if (stream == null) {\n      vegaUtil.error('Invalid stream definition: ' + JSON.stringify(spec));\n    }\n\n    if (spec.consume) stream.consume(true);\n\n    ctx.stream(spec, stream);\n  }\n\n  /**\n   * Parse an event-driven operator update.\n   */\n  function parseUpdate(spec, ctx) {\n    var srcid = vegaUtil.isObject(srcid = spec.source) ? srcid.$ref : srcid,\n        source = ctx.get(srcid),\n        target = null,\n        update = spec.update,\n        params = undefined;\n\n    if (!source) vegaUtil.error('Source not defined: ' + spec.source);\n\n    if (spec.target && spec.target.$expr) {\n      target = eventExpression(spec.target.$expr, ctx);\n    } else {\n      target = ctx.get(spec.target);\n    }\n\n    if (update && update.$expr) {\n      if (update.$params) {\n        params = parseParameters(update.$params, ctx);\n      }\n      update = handlerExpression(update.$expr, ctx);\n    }\n\n    ctx.update(spec, source, target, update, params);\n  }\n\n  /**\n   * Parse a serialized dataflow specification.\n   */\n  function parseDataflow(spec, ctx) {\n    var operators = spec.operators || [];\n\n    // parse background\n    if (spec.background) {\n      ctx.background = spec.background;\n    }\n\n    // parse event configuration\n    if (spec.eventConfig) {\n      ctx.eventConfig = spec.eventConfig;\n    }\n\n    // parse operators\n    operators.forEach(function(entry) {\n      parseOperator(entry, ctx);\n    });\n\n    // parse operator parameters\n    operators.forEach(function(entry) {\n      parseOperatorParameters(entry, ctx);\n    });\n\n    // parse streams\n    (spec.streams || []).forEach(function(entry) {\n      parseStream(entry, ctx);\n    });\n\n    // parse updates\n    (spec.updates || []).forEach(function(entry) {\n      parseUpdate(entry, ctx);\n    });\n\n    return ctx.resolve();\n  }\n\n  var SKIP = {skip: true};\n\n  function getState(options) {\n    var ctx = this,\n        state = {};\n\n    if (options.signals) {\n      var signals = (state.signals = {});\n      Object.keys(ctx.signals).forEach(function(key) {\n        var op = ctx.signals[key];\n        if (options.signals(key, op)) {\n          signals[key] = op.value;\n        }\n      });\n    }\n\n    if (options.data) {\n      var data = (state.data = {});\n      Object.keys(ctx.data).forEach(function(key) {\n        var dataset = ctx.data[key];\n        if (options.data(key, dataset)) {\n          data[key] = dataset.input.value;\n        }\n      });\n    }\n\n    if (ctx.subcontext && options.recurse !== false) {\n      state.subcontext = ctx.subcontext.map(function(ctx) {\n        return ctx.getState(options);\n      });\n    }\n\n    return state;\n  }\n\n  function setState(state) {\n    var ctx = this,\n        df = ctx.dataflow,\n        data = state.data,\n        signals = state.signals;\n\n    Object.keys(signals || {}).forEach(function(key) {\n      df.update(ctx.signals[key], signals[key], SKIP);\n    });\n\n    Object.keys(data || {}).forEach(function(key) {\n      df.pulse(\n        ctx.data[key].input,\n        df.changeset().remove(vegaUtil.truthy).insert(data[key])\n      );\n    });\n\n    (state.subcontext  || []).forEach(function(substate, i) {\n      var subctx = ctx.subcontext[i];\n      if (subctx) subctx.setState(substate);\n    });\n  }\n\n  /**\n   * Context objects store the current parse state.\n   * Enables lookup of parsed operators, event streams, accessors, etc.\n   * Provides a 'fork' method for creating child contexts for subflows.\n   */\n  function context(df, transforms, functions) {\n    return new Context(df, transforms, functions);\n  }\n\n  function Context(df, transforms, functions) {\n    this.dataflow = df;\n    this.transforms = transforms;\n    this.events = df.events.bind(df);\n    this.signals = {};\n    this.scales = {};\n    this.nodes = {};\n    this.data = {};\n    this.fn = {};\n    if (functions) {\n      this.functions = Object.create(functions);\n      this.functions.context = this;\n    }\n  }\n\n  function ContextFork(ctx) {\n    this.dataflow = ctx.dataflow;\n    this.transforms = ctx.transforms;\n    this.functions = ctx.functions;\n    this.events = ctx.events;\n    this.signals = Object.create(ctx.signals);\n    this.scales = Object.create(ctx.scales);\n    this.nodes = Object.create(ctx.nodes);\n    this.data = Object.create(ctx.data);\n    this.fn = Object.create(ctx.fn);\n    if (ctx.functions) {\n      this.functions = Object.create(ctx.functions);\n      this.functions.context = this;\n    }\n  }\n\n  Context.prototype = ContextFork.prototype = {\n    fork: function() {\n      var ctx = new ContextFork(this);\n      (this.subcontext || (this.subcontext = [])).push(ctx);\n      return ctx;\n    },\n    get: function(id) {\n      return this.nodes[id];\n    },\n    set: function(id, node) {\n      return this.nodes[id] = node;\n    },\n    add: function(spec, op) {\n      var ctx = this,\n          df = ctx.dataflow,\n          data;\n\n      ctx.set(spec.id, op);\n\n      if (isCollect(spec.type) && (data = spec.value)) {\n        if (data.$ingest) {\n          df.ingest(op, data.$ingest, data.$format);\n        } else if (data.$request) {\n          df.preload(op, data.$request, data.$format);\n        } else {\n          df.pulse(op, df.changeset().insert(data));\n        }\n      }\n\n      if (spec.root) {\n        ctx.root = op;\n      }\n\n      if (spec.parent) {\n        var p = ctx.get(spec.parent.$ref);\n        if (p) {\n          df.connect(p, [op]);\n          op.targets().add(p);\n        } else {\n          (ctx.unresolved = ctx.unresolved || []).push(function() {\n            p = ctx.get(spec.parent.$ref);\n            df.connect(p, [op]);\n            op.targets().add(p);\n          });\n        }\n      }\n\n      if (spec.signal) {\n        ctx.signals[spec.signal] = op;\n      }\n\n      if (spec.scale) {\n        ctx.scales[spec.scale] = op;\n      }\n\n      if (spec.data) {\n        for (var name in spec.data) {\n          data = ctx.data[name] || (ctx.data[name] = {});\n          spec.data[name].forEach(function(role) { data[role] = op; });\n        }\n      }\n    },\n    resolve: function() {\n      (this.unresolved || []).forEach(function(fn) { fn(); });\n      delete this.unresolved;\n      return this;\n    },\n    operator: function(spec, update) {\n      this.add(spec, this.dataflow.add(spec.value, update));\n    },\n    transform: function(spec, type) {\n      this.add(spec, this.dataflow.add(this.transforms[canonicalType(type)]));\n    },\n    stream: function(spec, stream) {\n      this.set(spec.id, stream);\n    },\n    update: function(spec, stream, target, update, params) {\n      this.dataflow.on(stream, target, update, params, spec.options);\n    },\n    getState: getState,\n    setState: setState\n  };\n\n  exports.context = context;\n  exports.expression = expression;\n  exports.parse = parseDataflow;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","factory","define","amd","self","vega","vegaDataflow","vegaUtil","expression","args","code","ctx","length","fn","Function","apply","concat","functions","bind","parseParameters","spec","params","key","value","isArray","map","v","parseParameter","isObject","i","n","PARSERS","p","hasOwnProperty","parse","parseDataflow","operators","background","eventConfig","forEach","entry","toLowerCase","type","transform","operator","update","op","get","id","error","dataflow","connect","parameters","react","initonly","streams","filter","undefined","stream","source","events","merge","slice","between","throttle","debounce","JSON","stringify","consume","updates","srcid","$ref","target","$expr","$params","resolve","Context","df","transforms","signals","scales","nodes","data","Object","create","context","ContextFork","getOperator","_","getKey","k","$key","$flat","getExpression","$name","accessor","$fields","getField","$field","field","getEncode","$encode","encode","name","enc","output","$output","getCompare","$compare","$order","c","array","$tupleid","tupleid","compare","getContext","getSubflow","$subflow","parent","subctx","fork","set","getTupleId","SKIP","skip","prototype","push","subcontext","node","add","$ingest","ingest","$format","$request","preload","pulse","changeset","insert","root","targets","unresolved","signal","scale","role","on","options","getState","state","keys","dataset","input","recurse","setState","remove","truthy","substate","defineProperty"]
}
